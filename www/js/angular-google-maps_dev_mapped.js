(function(e,t,n){"use strict";(function(){t.module("uiGmapgoogle-maps.providers",[]);t.module("uiGmapgoogle-maps.wrapped",[]);t.module("uiGmapgoogle-maps.extensions",["uiGmapgoogle-maps.wrapped","uiGmapgoogle-maps.providers"]);t.module("uiGmapgoogle-maps.directives.api.utils",["uiGmapgoogle-maps.extensions"]);t.module("uiGmapgoogle-maps.directives.api.managers",[]);t.module("uiGmapgoogle-maps.directives.api.options",["uiGmapgoogle-maps.directives.api.utils"]);t.module("uiGmapgoogle-maps.directives.api.options.builders",[]);t.module("uiGmapgoogle-maps.directives.api.models.child",["uiGmapgoogle-maps.directives.api.utils","uiGmapgoogle-maps.directives.api.options","uiGmapgoogle-maps.directives.api.options.builders"]);t.module("uiGmapgoogle-maps.directives.api.models.parent",["uiGmapgoogle-maps.directives.api.managers","uiGmapgoogle-maps.directives.api.models.child","uiGmapgoogle-maps.providers"]);t.module("uiGmapgoogle-maps.directives.api",["uiGmapgoogle-maps.directives.api.models.parent"]);t.module("uiGmapgoogle-maps",["uiGmapgoogle-maps.directives.api","uiGmapgoogle-maps.providers"]).factory("uiGmapdebounce",["$timeout",function(e){return function(t){var n;n=0;return function(){var r,i,s;s=this;r=arguments;n++;i=function(e){return function(){if(e===n){return t.apply(s,r)}}}(n);return e(i,0,true)}}}])}).call(this);(function(){t.module("uiGmapgoogle-maps.providers").factory("uiGmapMapScriptLoader",["$q","uiGmapuuid",function(n,r){var i,s;s=void 0;i=function(e){if(e.china){return"http://maps.google.cn/maps/api/js?"}else{return"https://maps.googleapis.com/maps/api/js?"}};return{load:function(o){var u,a,f,l;u=n.defer();if(t.isDefined(e.google)&&t.isDefined(e.google.maps)){u.resolve(e.google.maps);return u.promise}f=o.callback="onGoogleMapsReady"+Math.round(Math.random()*1e3);e[f]=function(){e[f]=null;u.resolve(e.google.maps)};a=_.map(o,function(e,t){return t+"="+e});if(s){document.getElementById(s).remove()}a=a.join("&");l=document.createElement("script");s="ui_gmap_map_load_"+r.generate();l.id=s;l.type="text/javascript";l.src=i(o)+a;document.body.appendChild(l);return u.promise}}}]).provider("uiGmapGoogleMapApi",function(){this.options={china:false,v:"3.17",libraries:"",language:"en",sensor:"false"};this.configure=function(e){t.extend(this.options,e)};this.$get=["uiGmapMapScriptLoader",function(e){return function(t){return t.load(e.options)}}(this)];return this})}).call(this);(function(){t.module("uiGmapgoogle-maps.extensions").service("uiGmapExtendGWin",function(){return{init:_.once(function(){if(!(google||(typeof google!=="undefined"&&google!==null?google.maps:void 0)||google.maps.InfoWindow!=null)){return}google.maps.InfoWindow.prototype._open=google.maps.InfoWindow.prototype.open;google.maps.InfoWindow.prototype._close=google.maps.InfoWindow.prototype.close;google.maps.InfoWindow.prototype._isOpen=false;google.maps.InfoWindow.prototype.open=function(e,t,n){if(n!=null){return}this._isOpen=true;this._open(e,t,true)};google.maps.InfoWindow.prototype.close=function(e){if(e!=null){return}this._isOpen=false;this._close(true)};google.maps.InfoWindow.prototype.isOpen=function(e){if(e==null){e=void 0}if(e==null){return this._isOpen}else{return this._isOpen=e}};if(e.InfoBox){e.InfoBox.prototype._open=e.InfoBox.prototype.open;e.InfoBox.prototype._close=e.InfoBox.prototype.close;e.InfoBox.prototype._isOpen=false;e.InfoBox.prototype.open=function(e,t){this._isOpen=true;this._open(e,t)};e.InfoBox.prototype.close=function(){this._isOpen=false;this._close()};e.InfoBox.prototype.isOpen=function(e){if(e==null){e=void 0}if(e==null){return this._isOpen}else{return this._isOpen=e}}}if(e.MarkerLabel_){e.MarkerLabel_.prototype.setContent=function(){var e;e=this.marker_.get("labelContent");if(!e||_.isEqual(this.oldContent,e)){return}if(typeof (e!=null?e.nodeType:void 0)==="undefined"){this.labelDiv_.innerHTML=e;this.eventDiv_.innerHTML=this.labelDiv_.innerHTML;this.oldContent=e}else{this.labelDiv_.innerHTML="";this.labelDiv_.appendChild(e);e=e.cloneNode(true);this.eventDiv_.appendChild(e);this.oldContent=e}};return e.MarkerLabel_.prototype.onRemove=function(){if(this.labelDiv_.parentNode!=null){this.labelDiv_.parentNode.removeChild(this.labelDiv_)}if(this.eventDiv_.parentNode!=null){this.eventDiv_.parentNode.removeChild(this.eventDiv_)}if(!this.listeners_){return}if(!this.listeners_.length){return}this.listeners_.forEach(function(e){return google.maps.event.removeListener(e)})}}})}})}).call(this);(function(){t.module("uiGmapgoogle-maps.extensions").service("uiGmapLodash",function(){this.intersectionObjects=function(e,t,n){var r;if(n==null){n=void 0}r=_.map(e,function(e){return function(e){return _.find(t,function(t){if(n!=null){return n(e,t)}else{return _.isEqual(e,t)}})}}(this));return _.filter(r,function(e){return e!=null})};this.containsObject=_.includeObject=function(e,t,n){if(n==null){n=void 0}if(e===null){return false}return _.any(e,function(e){return function(e){if(n!=null){return n(e,t)}else{return _.isEqual(e,t)}}}(this))};this.differenceObjects=function(e,t,n){if(n==null){n=void 0}return _.filter(e,function(e){return function(r){return!e.containsObject(t,r,n)}}(this))};this.withoutObjects=this.differenceObjects;this.indexOfObject=function(e,t,n,r){var i,s;if(e==null){return-1}i=0;s=e.length;if(r){if(typeof r==="number"){i=r<0?Math.max(0,s+r):r}else{i=_.sortedIndex(e,t);return e[i]===t?i:-1}}while(i<s){if(n!=null){if(n(e[i],t)){return i}}else{if(_.isEqual(e[i],t)){return i}}i++}return-1};this["extends"]=function(e){return _.reduce(e,function(e,t){return _.extend(e,t)},{})};this.isNullOrUndefined=function(e){return _.isNull(e||_.isUndefined(e))};return this})}).call(this);(function(){t.module("uiGmapgoogle-maps.extensions").factory("uiGmapString",function(){return function(e){this.contains=function(t,n){return e.indexOf(t,n)!==-1};return this}})}).call(this);(function(){t.module("uiGmapgoogle-maps.directives.api.utils").service("uiGmap_sync",[function(){return{fakePromise:function(){var e;e=void 0;return{then:function(t){return e=t},resolve:function(){return e.apply(void 0,arguments)}}}}}]).service("uiGmap_async",["$timeout","uiGmapPromise","uiGmapLogger","$q","uiGmapDataStructures","uiGmapGmapUtil",function(e,t,n,r,i,s){var o,u,a,f,l,c,h,p,d,v,m,g,y,b,w,E,S;E=t.promiseTypes;d=t.isInProgress;w=t.promiseStatus;o=t.ExposedPromise;a=t.SniffedPromise;v=function(e,t){var r;r=e.promise();r.promiseType=e.promiseType;if(r.$$state){n.debug("promiseType: "+r.promiseType+", state: "+w(r.$$state.status))}r.cancelCb=t;return r};c=function(e,t){if(e.promiseType===E.create&&t.promiseType!==E["delete"]&&t.promiseType!==E.init){n.debug("lastPromise.promiseType "+t.promiseType+", newPromiseType: "+e.promiseType+", SKIPPED MUST COME AFTER DELETE ONLY");return true}return false};b=function(e,t,r){var i;if(t.promiseType===E["delete"]&&r.promiseType!==E["delete"]){if(r.cancelCb!=null&&_.isFunction(r.cancelCb)&&d(r)){n.debug("promiseType: "+t.promiseType+", CANCELING LAST PROMISE type: "+r.promiseType);r.cancelCb("cancel safe");i=e.peek();if(i!=null&&d(i)){if(i.hasOwnProperty("cancelCb")&&_.isFunction(i.cancelCb)){n.debug("promiseType: "+i.promiseType+", CANCELING FIRST PROMISE type: "+i.promiseType);return i.cancelCb("cancel safe")}else{return n.warn("first promise was not cancelable")}}}}};u=function(e,t,n){var r,s;if(!e.existingPieces){e.existingPieces=new i.Queue;return e.existingPieces.enqueue(v(t,n))}else{r=_.last(e.existingPieces._content);if(c(t,r)){return}b(e.existingPieces,t,r);s=o(r["finally"](function(){return v(t,n)}));s.cancelCb=n;s.promiseType=t.promiseType;e.existingPieces.enqueue(s);return r["finally"](function(){return e.existingPieces.dequeue()})}};g=function(e,t,r,i,s){var o;if(r==null){r=""}o=function(e){n.debug(""+e+": "+e);return i(e)};return u(e,a(s,t),o)};f=80;p={value:null};S=function(e,t,n){var r;try{return e.apply(t,n)}catch(i){r=i;p.value=r;return p}};m=function(e,t,r,i){var s,o;o=S(e,t,i);if(o===p){s="error within chunking iterator: "+p.value;n.error(s);r.reject(s)}if(o==="cancel safe"){return false}return true};l=function(t,n,r,i,s,o,u){var a,f,c;if(n&&n<t.length){a=n}else{a=t.length}f=u;c=true;while(c&&a--&&f<(t?t.length:f+1)){c=m(i,void 0,o,[t[f],f]);++f}if(t){if(c&&f<t.length){u=f;if(n){if(s!=null&&_.isFunction(s)){m(s,void 0,o,[])}return e(function(){return l(t,n,r,i,s,o,u)},r,false)}}else{return o.resolve()}}};h=function(e,r,i,s,o,u){var a,c,h;if(i==null){i=f}if(o==null){o=0}if(u==null){u=1}h=void 0;c=t.defer();h=c.promise;if(!u){a="pause (delay) must be set from _async!";n.error(a);c.reject(a);return h}if(e===void 0||(e!=null?e.length:void 0)<=0){c.resolve();return h}l(e,i,u,r,s,c,o);return h};y=function(e,n,r,i,s,o){var u;u=[];if(!(e!=null&&(e!=null?e.length:void 0)>0)){return t.resolve(u)}return h(e,function(e){return u.push(n(e))},r,i,s,o).then(function(){return u})};return{each:h,map:y,managePromiseQueue:g,promiseLock:g,defaultChunkSize:f,chunkSizeFrom:function(e){var t;t=void 0;if(_.isNumber(e)){t=e}if(s.isFalse(e)||e===false){t=false}return t}}}])}).call(this);(function(){var e=[].indexOf||function(e){for(var t=0,n=this.length;t<n;t++){if(t in this&&this[t]===e)return t}return-1};t.module("uiGmapgoogle-maps.directives.api.utils").factory("uiGmapBaseObject",function(){var t,n;n=["extended","included"];t=function(){function t(){}t.extend=function(t){var r,i,s;for(r in t){i=t[r];if(e.call(n,r)<0){this[r]=i}}if((s=t.extended)!=null){s.apply(this)}return this};t.include=function(t){var r,i,s;for(r in t){i=t[r];if(e.call(n,r)<0){this.prototype[r]=i}}if((s=t.included)!=null){s.apply(this)}return this};return t}();return t})}).call(this);(function(){t.module("uiGmapgoogle-maps.directives.api.utils").factory("uiGmapChildEvents",function(){return{onChildCreation:function(e){}}})}).call(this);(function(){t.module("uiGmapgoogle-maps.directives.api.utils").service("uiGmapCtrlHandle",["$q",function(e){var t;return t={handle:function(n,r){n.$on("$destroy",function(){return t.handle(n)});n.deferred=e.defer();return{getScope:function(){return n}}},mapPromise:function(e,t){var n;n=t.getScope();n.deferred.promise.then(function(t){return e.map=t});return n.deferred.promise}}}])}).call(this);(function(){t.module("uiGmapgoogle-maps.directives.api.utils").service("uiGmapEventsHelper",["uiGmapLogger",function(e){return{setEvents:function(e,n,r,i){if(t.isDefined(n.events)&&n.events!=null&&t.isObject(n.events)){return _.compact(_.map(n.events,function(s,o){var u;if(i){u=_(i).contains(o)}if(n.events.hasOwnProperty(o)&&t.isFunction(n.events[o])&&!u){return google.maps.event.addListener(e,o,function(){if(!n.$evalAsync){n.$evalAsync=function(){}}return n.$evalAsync(s.apply(n,[e,o,r,arguments]))})}}))}},removeEvents:function(e){if(!e){return}return e.forEach(function(e){if(e){return google.maps.event.removeListener(e)}})}}}])}).call(this);(function(){var e={}.hasOwnProperty,n=function(t,n){function i(){this.constructor=t}for(var r in n){if(e.call(n,r))t[r]=n[r]}i.prototype=n.prototype;t.prototype=new i;t.__super__=n.prototype;return t};t.module("uiGmapgoogle-maps.directives.api.utils").factory("uiGmapFitHelper",["uiGmapBaseObject","uiGmapLogger","uiGmap_async",function(e,t,r){var i;return i=function(e){function t(){return t.__super__.constructor.apply(this,arguments)}n(t,e);t.prototype.fit=function(e,t){var n,i;if(t&&e&&e.length>0){n=new google.maps.LatLngBounds;i=false;return r.each(e,function(e){return function(e){if(e){if(!i){i=true}return n.extend(e.getPosition())}}}(this)).then(function(){if(i){return t.fitBounds(n)}})}};return t}(e)}])}).call(this);(function(){t.module("uiGmapgoogle-maps.directives.api.utils").service("uiGmapGmapUtil",["uiGmapLogger","$compile",function(e,n){var r,i,s,o;i=function(e){if(Array.isArray(e)&&e.length===2){return e[1]}else if(t.isDefined(e.type)&&e.type==="Point"){return e.coordinates[1]}else{return e.latitude}};s=function(e){if(Array.isArray(e)&&e.length===2){return e[0]}else if(t.isDefined(e.type)&&e.type==="Point"){return e.coordinates[0]}else{return e.longitude}};r=function(e){if(!e){return}if(Array.isArray(e)&&e.length===2){return new google.maps.LatLng(e[1],e[0])}else if(t.isDefined(e.type)&&e.type==="Point"){return new google.maps.LatLng(e.coordinates[1],e.coordinates[0])}else{return new google.maps.LatLng(e.latitude,e.longitude)}};o=function(e){if(t.isUndefined(e)){return false}if(_.isArray(e)){if(e.length===2){return true}}else if(e!=null&&(e!=null?e.type:void 0)){if(e.type==="Point"&&_.isArray(e.coordinates)&&e.coordinates.length===2){return true}}if(e&&t.isDefined((e!=null?e.latitude:void 0)&&t.isDefined(e!=null?e.longitude:void 0))){return true}return false};return{setCoordsFromEvent:function(e,n){if(!e){return}if(Array.isArray(e)&&e.length===2){e[1]=n.lat();e[0]=n.lng()}else if(t.isDefined(e.type)&&e.type==="Point"){e.coordinates[1]=n.lat();e.coordinates[0]=n.lng()}else{e.latitude=n.lat();e.longitude=n.lng()}return e},getLabelPositionPoint:function(e){var t,n;if(e===void 0){return void 0}e=/^([-\d\.]+)\s([-\d\.]+)$/.exec(e);t=parseFloat(e[1]);n=parseFloat(e[2]);if(t!=null&&n!=null){return new google.maps.Point(t,n)}},createWindowOptions:function(i,s,o,u){var a;if(o!=null&&u!=null&&n!=null){a=t.extend({},u,{content:this.buildContent(s,u,o),position:u.position!=null?u.position:t.isObject(i)?i.getPosition():r(s.coords)});if(i!=null&&(a!=null?a.pixelOffset:void 0)==null){if(a.boxClass==null){}else{a.pixelOffset={height:0,width:-2}}}return a}else{if(!u){e.error("infoWindow defaults not defined");if(!o){return e.error("infoWindow content not defined")}}else{return u}}},buildContent:function(e,t,r){var i,s;if(t.content!=null){s=t.content}else{if(n!=null){r=r.replace(/^\s+|\s+$/g,"");i=r===""?"":n(r)(e);if(i.length>0){s=i[0]}}else{s=r}}return s},defaultDelay:50,isTrue:function(e){return t.isDefined(e)&&e!==null&&e===true||e==="1"||e==="y"||e==="true"},isFalse:function(e){return["false","FALSE",0,"n","N","no","NO"].indexOf(e)!==-1},getCoords:r,validateCoords:o,equalCoords:function(e,t){return i(e)===i(t)&&s(e)===s(t)},validatePath:function(e){var n,r,i,s;r=0;if(t.isUndefined(e.type)){if(!Array.isArray(e)||e.length<2){return false}while(r<e.length){if(!(t.isDefined(e[r].latitude)&&t.isDefined(e[r].longitude)||typeof e[r].lat==="function"&&typeof e[r].lng==="function")){return false}r++}return true}else{if(t.isUndefined(e.coordinates)){return false}if(e.type==="Polygon"){if(e.coordinates[0].length<4){return false}n=e.coordinates[0]}else if(e.type==="MultiPolygon"){s={max:0,index:0};_.forEach(e.coordinates,function(e,t){if(e[0].length>this.max){this.max=e[0].length;return this.index=t}},s);i=e.coordinates[s.index];n=i[0];if(n.length<4){return false}}else if(e.type==="LineString"){if(e.coordinates.length<2){return false}n=e.coordinates}else{return false}while(r<n.length){if(n[r].length!==2){return false}r++}return true}},convertPathPoints:function(e){var n,r,i,s,o;r=0;s=new google.maps.MVCArray;if(t.isUndefined(e.type)){while(r<e.length){i;if(t.isDefined(e[r].latitude)&&t.isDefined(e[r].longitude)){i=new google.maps.LatLng(e[r].latitude,e[r].longitude)}else if(typeof e[r].lat==="function"&&typeof e[r].lng==="function"){i=e[r]}s.push(i);r++}}else{n;if(e.type==="Polygon"){n=e.coordinates[0]}else if(e.type==="MultiPolygon"){o={max:0,index:0};_.forEach(e.coordinates,function(e,t){if(e[0].length>this.max){this.max=e[0].length;return this.index=t}},o);n=e.coordinates[o.index][0]}else if(e.type==="LineString"){n=e.coordinates}while(r<n.length){s.push(new google.maps.LatLng(n[r][1],n[r][0]));r++}}return s},extendMapBounds:function(e,t){var n,r;n=new google.maps.LatLngBounds;r=0;while(r<t.length){n.extend(t.getAt(r));r++}return e.fitBounds(n)},getPath:function(e,t){var n;n=e;_.each(t.split("."),function(e){if(n){return n=n[e]}});return n},validateBoundPoints:function(e){if(t.isUndefined(e.sw.latitude)||t.isUndefined(e.sw.longitude)||t.isUndefined(e.ne.latitude)||t.isUndefined(e.ne.longitude)){return false}return true},convertBoundPoints:function(e){var t;t=new google.maps.LatLngBounds(new google.maps.LatLng(e.sw.latitude,e.sw.longitude),new google.maps.LatLng(e.ne.latitude,e.ne.longitude));return t},fitMapBounds:function(e,t){return e.fitBounds(t)}}}])}).call(this);(function(){t.module("uiGmapgoogle-maps.directives.api.utils").service("uiGmapIsReady",["$q","$timeout",function(e,t){var n,r,i;n=0;i=[];r=function(){return e.all(i)};return{spawn:function(){var t;t=e.defer();i.push(t.promise);n+=1;return{instance:n,deferred:t}},promises:r,instances:function(){return n},promise:function(i){var s,o;if(i==null){i=1}s=e.defer();o=function(){return t(function(){if(n!==i){return o()}else{return s.resolve(r())}})};o();return s.promise},reset:function(){n=0;return i.length=0}}}])}).call(this);(function(){var e={}.hasOwnProperty,n=function(t,n){function i(){this.constructor=t}for(var r in n){if(e.call(n,r))t[r]=n[r]}i.prototype=n.prototype;t.prototype=new i;t.__super__=n.prototype;return t};t.module("uiGmapgoogle-maps.directives.api.utils").factory("uiGmapLinked",["uiGmapBaseObject",function(e){var t;t=function(e){function t(e,t,n,r){this.scope=e;this.element=t;this.attrs=n;this.ctrls=r}n(t,e);return t}(e);return t}])}).call(this);(function(){t.module("uiGmapgoogle-maps.directives.api.utils").service("uiGmapLogger",["$log",function(e){var t,n,r,i;this.doLog=true;t={log:1,info:2,debug:3,warn:4,error:5,none:6};i=function(e,t,n){if(e>=t){return n()}};n=function(t,n){if(e!=null){return e[t](n)}else{return console[t](n)}};r={};["log","info","debug","warn","error"].forEach(function(e){return function(s){return r[s]=function(r){if(e.doLog){return i(t[s],e.currentLevel,function(){return n(s,r)})}}}}(this));this.LEVELS=t;this.currentLevel=t.error;this.log=r["log"];this.info=r["info"];this.debug=r["debug"];this.warn=r["warn"];this.error=r["error"];return this}])}).call(this);(function(){var e=function(e,t){return function(){return e.apply(t,arguments)}},n={}.hasOwnProperty,r=function(e,t){function i(){this.constructor=e}for(var r in t){if(n.call(t,r))e[r]=t[r]}i.prototype=t.prototype;e.prototype=new i;e.__super__=t.prototype;return e};t.module("uiGmapgoogle-maps.directives.api.utils").factory("uiGmapModelKey",["uiGmapBaseObject","uiGmapGmapUtil","uiGmapPromise","$q","$timeout",function(t,n,i,s,o){var u;return u=function(t){function i(t){this.scope=t;this.destroy=e(this.destroy,this);this.setChildScope=e(this.setChildScope,this);this.getChanges=e(this.getChanges,this);this.getProp=e(this.getProp,this);this.setIdKey=e(this.setIdKey,this);this.modelKeyComparison=e(this.modelKeyComparison,this);i.__super__.constructor.call(this);this.defaultIdKey="id";this.idKey=void 0}r(i,t);i.prototype.evalModelHandle=function(e,t){if(e===void 0||t===void 0){return void 0}if(t==="self"){return e}else{return n.getPath(e,t)}};i.prototype.modelKeyComparison=function(e,t){var r;r=this.scope.coords!=null?this.scope:this.parentScope;if(r==null){throw"No scope or parentScope set!"}return n.equalCoords(this.evalModelHandle(e,r.coords),this.evalModelHandle(t,r.coords))};i.prototype.setIdKey=function(e){return this.idKey=e.idKey!=null?e.idKey:this.defaultIdKey};i.prototype.setVal=function(e,t,n){var r;r=this.modelOrKey(e,t);r=n;return e};i.prototype.modelOrKey=function(e,t){if(t==null){return}if(t!=="self"){return e[t]}return e};i.prototype.getProp=function(e,t){return this.modelOrKey(t,e)};i.prototype.getChanges=function(e,t,n){var r,i,s;if(n){t=_.pick(t,n);e=_.pick(e,n)}i={};s={};r={};for(s in e){if(!t||t[s]!==e[s]){if(_.isArray(e[s])){i[s]=e[s]}else if(_.isObject(e[s])){r=this.getChanges(e[s],t?t[s]:null);if(!_.isEmpty(r)){i[s]=r}}else{i[s]=e[s]}}}return i};i.prototype.scopeOrModelVal=function(e,t,n,r){var i,s,o,u;if(r==null){r=false}i=function(e,t,n){if(n==null){n=false}if(n){return{isScope:e,value:t}}return t};u=t[e];if(_.isFunction(u)){return i(true,u(n),r)}if(_.isObject(u)){return i(true,u,r)}if(!_.isString(u)){return i(true,u,r)}s=u;if(!s){o=n[e]}else{o=s==="self"?n:n[s]}if(_.isFunction(o)){return i(false,o(),r)}return i(false,o,r)};i.prototype.setChildScope=function(e,t,n){_.each(e,function(e){return function(r){var i,s;i=e.scopeOrModelVal(r,t,n,true);if(!i.isScope){s=i.value;if(s!==t[r]){return t[r]=s}}}}(this));return t.model=n};i.prototype.destroy=function(e){var t;if(e==null){e=false}if(this.scope!=null&&!((t=this.scope)!=null?t.$$destroyed:void 0)&&(this.needToManualDestroy||e)){return this.scope.$destroy()}else{return this.clean()}};return i}(t)}])}).call(this);(function(){t.module("uiGmapgoogle-maps.directives.api.utils").factory("uiGmapModelsWatcher",["uiGmapLogger","uiGmap_async","$q","uiGmapPromise",function(e,t,n,r){return{didQueueInitPromise:function(e,n){if(n.models.length===0){t.promiseLock(e,r.promiseTypes.init,null,null,function(e){return function(){return r.resolve()}}(this));return true}return false},figureOutState:function(t,n,r,i,s){var o,u,a,f,l;o=[];a={};f=[];l=[];n.models.forEach(function(n){var s;if(n[t]!=null){a[n[t]]={};if(r.get(n[t])==null){return o.push(n)}else{s=r.get(n[t]);if(!i(n,s.clonedModel)){return l.push({model:n,child:s})}}}else{return e.error(" id missing for model #{m.toString()},\ncan not use do comparison/insertion")}});u=r.values();u.forEach(function(n){var r;if(n==null){e.error("child undefined in ModelsWatcher.");return}if(n.model==null){e.error("child.model undefined in ModelsWatcher.");return}r=n.model[t];if(a[r]==null){return f.push(n)}});return{adds:o,removals:f,updates:l}}}}])}).call(this);(function(){t.module("uiGmapgoogle-maps.directives.api.utils").service("uiGmapPromise",["$q","$timeout","uiGmapLogger",function(e,t,n){var r,i,s,o,u,a,f,l,c,h,p;c={create:"create",update:"update","delete":"delete",init:"init"};l={IN_PROGRESS:0,RESOLVED:1,REJECTED:2};p=function(){var e;e={};e[""+l.IN_PROGRESS]="in-progress";e[""+l.RESOLVED]="resolved";e[""+l.REJECTED]="rejected";return e}();o=function(e){if(e.$$state){return e.$$state.status===l.IN_PROGRESS}if(!e.hasOwnProperty("$$v")){return true}};u=function(e){if(e.$$state){return e.$$state.status===l.RESOLVED}if(e.hasOwnProperty("$$v")){return true}};f=function(e){return p[e]||"done w error"};r=function(t){var n,r,i;n=e.defer();r=e.all([t,n.promise]);i=e.defer();t.then(n.resolve,function(){},function(e){n.notify(e);return i.notify(e)});r.then(function(e){return i.resolve(e[0]||e[1])},function(e){return i.reject(e)});i.promise.cancel=function(e){if(e==null){e="canceled"}return n.reject(e)};i.promise.notify=function(e){if(e==null){e="cancel safe"}i.notify(e);if(t.hasOwnProperty("notify")){return t.notify(e)}};if(t.promiseType!=null){i.promise.promiseType=t.promiseType}return i.promise};i=function(e,t){return{promise:e,promiseType:t}};s=function(){return e.defer()};h=function(){var t;t=e.defer();t.resolve.apply(void 0,arguments);return t.promise};a=function(r){var i;if(!_.isFunction(r)){n.error("uiGmapPromise.promise() only accepts functions");return}i=e.defer();t(function(){var e;e=r();return i.resolve(e)});return i.promise};return{defer:s,promise:a,resolve:h,promiseTypes:c,isInProgress:o,isResolved:u,promiseStatus:f,ExposedPromise:r,SniffedPromise:i}}])}).call(this);(function(){var n,r=function(e,t){return function(){return e.apply(t,arguments)}};n=["get","put","remove","values","keys","length","push","didValueStateChange","didKeyStateChange","slice","removeAll","allVals","allKeys","stateChanged"];e.PropMap=function(){function e(){this.removeAll=r(this.removeAll,this);this.slice=r(this.slice,this);this.push=r(this.push,this);this.keys=r(this.keys,this);this.values=r(this.values,this);this.remove=r(this.remove,this);this.put=r(this.put,this);this.stateChanged=r(this.stateChanged,this);this.get=r(this.get,this);this.length=0;this.dict={};this.didValsStateChange=false;this.didKeysStateChange=false;this.allVals=[];this.allKeys=[]}e.prototype.get=function(e){return this.dict[e]};e.prototype.stateChanged=function(){this.didValsStateChange=true;return this.didKeysStateChange=true};e.prototype.put=function(e,t){if(this.get(e)==null){this.length++}this.stateChanged();return this.dict[e]=t};e.prototype.remove=function(e,t){var n;if(t==null){t=false}if(t&&!this.get(e)){return void 0}n=this.dict[e];delete this.dict[e];this.length--;this.stateChanged();return n};e.prototype.valuesOrKeys=function(e){var t,n;if(e==null){e="Keys"}if(!this["did"+e+"StateChange"]){return this["all"+e]}n=[];t=[];_.each(this.dict,function(e,r){n.push(e);return t.push(r)});this.didKeysStateChange=false;this.didValsStateChange=false;this.allVals=n;this.allKeys=t;return this["all"+e]};e.prototype.values=function(){return this.valuesOrKeys("Vals")};e.prototype.keys=function(){return this.valuesOrKeys()};e.prototype.push=function(e,t){if(t==null){t="key"}return this.put(e[t],e)};e.prototype.slice=function(){return this.keys().map(function(e){return function(t){return e.remove(t)}}(this))};e.prototype.removeAll=function(){return this.slice()};e.prototype.each=function(e){return _.each(this.dict,function(t,n){return e(t)})};e.prototype.map=function(e){return _.map(this.dict,function(t,n){return e(t)})};return e}();t.module("uiGmapgoogle-maps.directives.api.utils").factory("uiGmapPropMap",function(){return e.PropMap})}).call(this);(function(){t.module("uiGmapgoogle-maps.directives.api.utils").factory("uiGmapPropertyAction",["uiGmapLogger",function(e){var t;t=function(e){this.setIfChange=function(t,n){var r;r=this.exp;if(!_.isEqual(n,t)){return e(r,t)}};this.sic=this.setIfChange;return this};return t}])}).call(this);(function(){var e=function(e,t){return function(){return e.apply(t,arguments)}},n={}.hasOwnProperty,r=function(e,t){function i(){this.constructor=e}for(var r in t){if(n.call(t,r))e[r]=t[r]}i.prototype=t.prototype;e.prototype=new i;e.__super__=t.prototype;return e};t.module("uiGmapgoogle-maps.directives.api.managers").factory("uiGmapClustererMarkerManager",["uiGmapLogger","uiGmapFitHelper","uiGmapPropMap",function(n,i,s){var o;o=function(i){function o(t,r,i,u){if(r==null){r={}}this.opt_options=i!=null?i:{};this.opt_events=u;this.checkSync=e(this.checkSync,this);this.getGMarkers=e(this.getGMarkers,this);this.fit=e(this.fit,this);this.destroy=e(this.destroy,this);this.clear=e(this.clear,this);this.draw=e(this.draw,this);this.removeMany=e(this.removeMany,this);this.remove=e(this.remove,this);this.addMany=e(this.addMany,this);this.update=e(this.update,this);this.add=e(this.add,this);o.__super__.constructor.call(this);this.type=o.type;this.clusterer=new NgMapMarkerClusterer(t,r,this.opt_options);this.propMapGMarkers=new s;this.attachEvents(this.opt_events,"opt_events");this.clusterer.setIgnoreHidden(true);this.noDrawOnSingleAddRemoves=true;n.info(this)}r(o,i);o.type="ClustererMarkerManager";o.prototype.checkKey=function(e){var t;if(e.key==null){t="gMarker.key undefined and it is REQUIRED!!";return Logger.error(t)}};o.prototype.add=function(e){this.checkKey(e);this.clusterer.addMarker(e,this.noDrawOnSingleAddRemoves);this.propMapGMarkers.put(e.key,e);return this.checkSync()};o.prototype.update=function(e){this.remove(e);return this.add(e)};o.prototype.addMany=function(e){return e.forEach(function(e){return function(t){return e.add(t)}}(this))};o.prototype.remove=function(e){var t;this.checkKey(e);t=this.propMapGMarkers.get(e.key);if(t){this.clusterer.removeMarker(e,this.noDrawOnSingleAddRemoves);this.propMapGMarkers.remove(e.key)}return this.checkSync()};o.prototype.removeMany=function(e){return e.forEach(function(e){return function(t){return e.remove(t)}}(this))};o.prototype.draw=function(){return this.clusterer.repaint()};o.prototype.clear=function(){this.removeMany(this.getGMarkers());return this.clusterer.repaint()};o.prototype.attachEvents=function(e,r){var i,s,o;if(t.isDefined(e)&&e!=null&&t.isObject(e)){o=[];for(s in e){i=e[s];if(e.hasOwnProperty(s)&&t.isFunction(e[s])){n.info(""+r+": Attaching event: "+s+" to clusterer");o.push(google.maps.event.addListener(this.clusterer,s,e[s]))}else{o.push(void 0)}}return o}};o.prototype.clearEvents=function(e){var r,i,s;if(t.isDefined(e)&&e!=null&&t.isObject(e)){s=[];for(i in e){r=e[i];if(e.hasOwnProperty(i)&&t.isFunction(e[i])){n.info(""+optionsName+": Clearing event: "+i+" to clusterer");s.push(google.maps.event.clearListeners(this.clusterer,i))}else{s.push(void 0)}}return s}};o.prototype.destroy=function(){this.clearEvents(this.opt_events);this.clearEvents(this.opt_internal_events);return this.clear()};o.prototype.fit=function(){return o.__super__.fit.call(this,this.getGMarkers(),this.clusterer.getMap())};o.prototype.getGMarkers=function(){return this.clusterer.getMarkers().values()};o.prototype.checkSync=function(){};return o}(i);return o}])}).call(this);(function(){var e=function(e,t){return function(){return e.apply(t,arguments)}},n={}.hasOwnProperty,r=function(e,t){function i(){this.constructor=e}for(var r in t){if(n.call(t,r))e[r]=t[r]}i.prototype=t.prototype;e.prototype=new i;e.__super__=t.prototype;return e};t.module("uiGmapgoogle-maps.directives.api.managers").factory("uiGmapMarkerManager",["uiGmapLogger","uiGmapFitHelper","uiGmapPropMap",function(t,n,i){var s;s=function(s){function o(n,r,s){this.getGMarkers=e(this.getGMarkers,this);this.fit=e(this.fit,this);this.handleOptDraw=e(this.handleOptDraw,this);this.clear=e(this.clear,this);this.draw=e(this.draw,this);this.removeMany=e(this.removeMany,this);this.remove=e(this.remove,this);this.addMany=e(this.addMany,this);this.update=e(this.update,this);this.add=e(this.add,this);o.__super__.constructor.call(this);this.type=o.type;this.gMap=n;this.gMarkers=new i;this.$log=t;this.$log.info(this)}r(o,s);o.include(n);o.type="MarkerManager";o.prototype.add=function(e,n){var r,i;if(n==null){n=true}if(e.key==null){i="gMarker.key undefined and it is REQUIRED!!";t.error(i);throw i}r=this.gMarkers.get(e.key);if(!r){this.handleOptDraw(e,n,true);return this.gMarkers.put(e.key,e)}};o.prototype.update=function(e,t){if(t==null){t=true}this.remove(e,t);return this.add(e,t)};o.prototype.addMany=function(e){return e.forEach(function(e){return function(t){return e.add(t)}}(this))};o.prototype.remove=function(e,t){if(t==null){t=true}this.handleOptDraw(e,t,false);if(this.gMarkers.get(e.key)){return this.gMarkers.remove(e.key)}};o.prototype.removeMany=function(e){return e.forEach(function(e){return function(t){return e.remove(t)}}(this))};o.prototype.draw=function(){var e;e=[];this.gMarkers.each(function(t){return function(n){if(!n.isDrawn){if(n.doAdd){n.setMap(t.gMap);return n.isDrawn=true}else{return e.push(n)}}}}(this));return e.forEach(function(e){return function(t){t.isDrawn=false;return e.remove(t,true)}}(this))};o.prototype.clear=function(){this.gMarkers.each(function(e){return e.setMap(null)});delete this.gMarkers;return this.gMarkers=new i};o.prototype.handleOptDraw=function(e,t,n){if(t===true){if(n){e.setMap(this.gMap)}else{e.setMap(null)}return e.isDrawn=true}else{e.isDrawn=false;return e.doAdd=n}};o.prototype.fit=function(){return o.__super__.fit.call(this,this.getGMarkers(),this.gMap)};o.prototype.getGMarkers=function(){return this.gMarkers.values()};return o}(n);return s}])}).call(this);(function(){t.module("uiGmapgoogle-maps").factory("uiGmapadd-events",["$timeout",function(e){var n,r;n=function(t,n,r){return google.maps.event.addListener(t,n,function(){r.apply(this,arguments);return e(function(){},true)})};r=function(e,r,i){var s;if(i){return n(e,r,i)}s=[];t.forEach(r,function(t,r){return s.push(n(e,r,t))});return function(){t.forEach(s,function(e){return google.maps.event.removeListener(e)});return s=null}};return r}])}).call(this);(function(){t.module("uiGmapgoogle-maps").factory("uiGmaparray-sync",["uiGmapadd-events",function(e){return function(n,r,i,s){var o,u,a,f,l,c,h,p,d;f=false;p=r.$eval(i);if(!r["static"]){l={set_at:function(e){var t;if(f){return}t=n.getAt(e);if(!t){return}if(!t.lng||!t.lat){return p[e]=t}else{p[e].latitude=t.lat();return p[e].longitude=t.lng()}},insert_at:function(e){var t;if(f){return}t=n.getAt(e);if(!t){return}if(!t.lng||!t.lat){return p.splice(e,0,t)}else{return p.splice(e,0,{latitude:t.lat(),longitude:t.lng()})}},remove_at:function(e){if(f){return}return p.splice(e,1)}};o;if(p.type==="Polygon"){o=p.coordinates[0]}else if(p.type==="LineString"){o=p.coordinates}u={set_at:function(e){var t;if(f){return}t=n.getAt(e);if(!t){return}if(!t.lng||!t.lat){return}o[e][1]=t.lat();return o[e][0]=t.lng()},insert_at:function(e){var t;if(f){return}t=n.getAt(e);if(!t){return}if(!t.lng||!t.lat){return}return o.splice(e,0,[t.lng(),t.lat()])},remove_at:function(e){if(f){return}return o.splice(e,1)}};h=e(n,t.isUndefined(p.type)?l:u)}c=function(e){var t,r,i,o,u,a,l,c;f=true;a=n;t=false;if(e){r=0;l=a.getLength();o=e.length;i=Math.min(l,o);u=void 0;while(r<i){c=a.getAt(r);u=e[r];if(typeof u.equals==="function"){if(!u.equals(c)){a.setAt(r,u);t=true}}else{if(c.lat()!==u.latitude||c.lng()!==u.longitude){a.setAt(r,new google.maps.LatLng(u.latitude,u.longitude));t=true}}r++}while(r<o){u=e[r];if(typeof u.lat==="function"&&typeof u.lng==="function"){a.push(u)}else{a.push(new google.maps.LatLng(u.latitude,u.longitude))}t=true;r++}while(r<l){a.pop();t=true;r++}}f=false;if(t){return s(a)}};a=function(e){var t,r,i,o,u,a,l,c,h;f=true;l=n;r=false;if(e){t;if(p.type==="Polygon"){t=e.coordinates[0]}else if(p.type==="LineString"){t=e.coordinates}i=0;c=l.getLength();u=t.length;o=Math.min(c,u);a=void 0;while(i<o){h=l.getAt(i);a=t[i];if(h.lat()!==a[1]||h.lng()!==a[0]){l.setAt(i,new google.maps.LatLng(a[1],a[0]));r=true}i++}while(i<u){a=t[i];l.push(new google.maps.LatLng(a[1],a[0]));r=true;i++}while(i<c){l.pop();r=true;i++}}f=false;if(r){return s(l)}};d;if(!r["static"]){if(t.isUndefined(p.type)){d=r.$watchCollection(i,c)}else{d=r.$watch(i,a,true)}}return function(){if(h){h();h=null}if(d){d();return d=null}}}}])}).call(this);(function(){t.module("uiGmapgoogle-maps.directives.api.utils").factory("uiGmapChromeFixes",["$timeout",function(e){return{maybeRepaint:function(t){if(t){t.style.opacity=.9;return e(function(){return t.style.opacity=1})}}}}])}).call(this);(function(){var e=function(e,t){return function(){return e.apply(t,arguments)}},n={}.hasOwnProperty,r=function(e,t){function i(){this.constructor=e}for(var r in t){if(n.call(t,r))e[r]=t[r]}i.prototype=t.prototype;e.prototype=new i;e.__super__=t.prototype;return e};t.module("uiGmapgoogle-maps.directives.api.options.builders").service("uiGmapCommonOptionsBuilder",["uiGmapBaseObject","uiGmapLogger","uiGmapModelKey",function(n,i,s){var o;return o=function(n){function s(){this.watchProps=e(this.watchProps,this);this.buildOpts=e(this.buildOpts,this);this.hasModel=_(this.scope).chain().keys().contains("model").value()}r(s,n);s.prototype.props=["clickable","draggable","editable","visible",{prop:"stroke",isColl:true}];s.prototype.buildOpts=function(e,n){var r,s,o;if(e==null){e={}}if(n==null){n={}}if(!this.scope){i.error("this.scope not defined in CommonOptionsBuilder can not buildOpts");return}if(!this.map){i.error("this.map not defined in CommonOptionsBuilder can not buildOpts");return}r=this.hasModel?this.scope.model:this.scope;o=this.scopeOrModelVal("stroke",this.scope,r);s=t.extend(e,this.DEFAULTS,{map:this.map,strokeColor:o!=null?o.color:void 0,strokeOpacity:o!=null?o.opacity:void 0,strokeWeight:o!=null?o.weight:void 0});t.forEach(t.extend(n,{clickable:true,draggable:false,editable:false,"static":false,fit:false,visible:true,zIndex:0,icons:[]}),function(e){return function(n,i){var o;o=e.scopeOrModelVal(i,e.scope,r);if(t.isUndefined(o)){return s[i]=n}else{return s[i]=r[i]}}}(this));if(s["static"]){s.editable=false}return s};s.prototype.watchProps=function(e){if(e==null){e=this.props}return e.forEach(function(e){return function(t){if(e.attrs[t]!=null||e.attrs[t!=null?t.prop:void 0]!=null){if(t!=null?t.isColl:void 0){return e.scope.$watchCollection(t.prop,e.setMyOptions)}else{return e.scope.$watch(t,e.setMyOptions)}}}}(this))};return s}(s)}])}).call(this);(function(){var e={}.hasOwnProperty,n=function(t,n){function i(){this.constructor=t}for(var r in n){if(e.call(n,r))t[r]=n[r]}i.prototype=n.prototype;t.prototype=new i;t.__super__=n.prototype;return t};t.module("uiGmapgoogle-maps.directives.api.options.builders").factory("uiGmapPolylineOptionsBuilder",["uiGmapCommonOptionsBuilder",function(e){var t;return t=function(e){function t(){return t.__super__.constructor.apply(this,arguments)}n(t,e);t.prototype.buildOpts=function(e){return t.__super__.buildOpts.call(this,{path:e},{geodesic:false})};return t}(e)}]).factory("uiGmapShapeOptionsBuilder",["uiGmapCommonOptionsBuilder",function(e){var r;return r=function(e){function r(){return r.__super__.constructor.apply(this,arguments)}n(r,e);r.prototype.buildOpts=function(e,n){var i,s;s=this.hasModel?this.scope.model:this.scope;i=this.scopeOrModelVal("fill",this.scope,s);e=t.extend(e,{fillColor:i!=null?i.color:void 0,fillOpacity:i!=null?i.opacity:void 0});return r.__super__.buildOpts.call(this,e,n)};return r}(e)}]).factory("uiGmapPolygonOptionsBuilder",["uiGmapShapeOptionsBuilder",function(e){var t;return t=function(e){function t(){return t.__super__.constructor.apply(this,arguments)}n(t,e);t.prototype.buildOpts=function(e){return t.__super__.buildOpts.call(this,{path:e},{geodesic:false})};return t}(e)}]).factory("uiGmapRectangleOptionsBuilder",["uiGmapShapeOptionsBuilder",function(e){var t;return t=function(e){function t(){return t.__super__.constructor.apply(this,arguments)}n(t,e);t.prototype.buildOpts=function(e){return t.__super__.buildOpts.call(this,{bounds:e})};return t}(e)}]).factory("uiGmapCircleOptionsBuilder",["uiGmapShapeOptionsBuilder",function(e){var t;return t=function(e){function t(){return t.__super__.constructor.apply(this,arguments)}n(t,e);t.prototype.buildOpts=function(e,n){return t.__super__.buildOpts.call(this,{center:e,radius:n})};return t}(e)}])}).call(this);(function(){t.module("uiGmapgoogle-maps.directives.api.options").service("uiGmapMarkerOptions",["uiGmapLogger","uiGmapGmapUtil",function(e,n){return _.extend(n,{createOptions:function(e,r,i,s){var o;if(i==null){i={}}o=t.extend({},i,{position:i.position!=null?i.position:n.getCoords(e),visible:i.visible!=null?i.visible:n.validateCoords(e)});if(i.icon!=null||r!=null){o=t.extend(o,{icon:i.icon!=null?i.icon:r})}if(s!=null){o.map=s}return o},isLabel:function(e){if(e.labelContent!=null||e.labelAnchor!=null||e.labelClass!=null||e.labelStyle!=null||e.labelVisible!=null){return true}else{return false}}})}])}).call(this);(function(){var e=function(e,t){return function(){return e.apply(t,arguments)}},n={}.hasOwnProperty,r=function(e,t){function i(){this.constructor=e}for(var r in t){if(n.call(t,r))e[r]=t[r]}i.prototype=t.prototype;e.prototype=new i;e.__super__=t.prototype;return e};t.module("uiGmapgoogle-maps.directives.api").factory("uiGmapBasePolyChildModel",["uiGmapLogger","$timeout","uiGmaparray-sync","uiGmapGmapUtil","uiGmapEventsHelper",function(n,i,s,o,u){return function(n,i){var a;return a=function(n){function a(n,r,o,a,f){var l;this.scope=n;this.attrs=r;this.map=o;this.defaults=a;this.model=f;this.clean=e(this.clean,this);this.clonedModel=_.clone(this.model,true);this.isDragging=false;this.internalEvents={dragend:function(e){return function(){return _.defer(function(){return e.isDragging=false})}}(this),dragstart:function(e){return function(){return e.isDragging=true}}(this)};l=function(e){return function(){var t;if(e.isDragging){return}t=e.convertPathPoints(e.scope.path);if(e.shape!=null){e.clean()}if(t.length>0){e.shape=i(e.buildOpts(t))}if(e.shape){if(e.scope.fit){e.extendMapBounds(o,t)}s(e.shape.getPath(),e.scope,"path",function(t){if(e.scope.fit){return e.extendMapBounds(o,t)}});e.listeners=e.model?e.setEvents(e.shape,e.scope,e.model):e.setEvents(e.shape,e.scope,e.scope);return e.internalListeners=e.model?e.setEvents(e.shape,{events:e.internalEvents},e.model):e.setEvents(e.shape,{events:e.internalEvents},e.scope)}}}(this);l();n.$watch("path",function(e){return function(t,n){if(!_.isEqual(t,n)||!e.shape){return l()}}}(this),true);if(!n["static"]&&t.isDefined(n.editable)){n.$watch("editable",function(e){return function(t,n){var r;if(t!==n){t=!e.isFalse(t);return(r=e.shape)!=null?r.setEditable(t):void 0}}}(this),true)}if(t.isDefined(n.draggable)){n.$watch("draggable",function(e){return function(t,n){var r;if(t!==n){t=!e.isFalse(t);return(r=e.shape)!=null?r.setDraggable(t):void 0}}}(this),true)}if(t.isDefined(n.visible)){n.$watch("visible",function(e){return function(t,n){var r;if(t!==n){t=!e.isFalse(t)}return(r=e.shape)!=null?r.setVisible(t):void 0}}(this),true)}if(t.isDefined(n.geodesic)){n.$watch("geodesic",function(e){return function(t,n){var r;if(t!==n){t=!e.isFalse(t);return(r=e.shape)!=null?r.setOptions(e.buildOpts(e.shape.getPath())):void 0}}}(this),true)}if(t.isDefined(n.stroke)&&t.isDefined(n.stroke.weight)){n.$watch("stroke.weight",function(e){return function(t,n){var r;if(t!==n){return(r=e.shape)!=null?r.setOptions(e.buildOpts(e.shape.getPath())):void 0}}}(this),true)}if(t.isDefined(n.stroke)&&t.isDefined(n.stroke.color)){n.$watch("stroke.color",function(e){return function(t,n){var r;if(t!==n){return(r=e.shape)!=null?r.setOptions(e.buildOpts(e.shape.getPath())):void 0}}}(this),true)}if(t.isDefined(n.stroke)&&t.isDefined(n.stroke.opacity)){n.$watch("stroke.opacity",function(e){return function(t,n){var r;if(t!==n){return(r=e.shape)!=null?r.setOptions(e.buildOpts(e.shape.getPath())):void 0}}}(this),true)}if(t.isDefined(n.icons)){n.$watch("icons",function(e){return function(t,n){var r;if(t!==n){return(r=e.shape)!=null?r.setOptions(e.buildOpts(e.shape.getPath())):void 0}}}(this),true)}n.$on("$destroy",function(e){return function(){e.clean();return e.scope=null}}(this));if(t.isDefined(n.fill)&&t.isDefined(n.fill.color)){n.$watch("fill.color",function(e){return function(t,n){if(t!==n){return e.shape.setOptions(e.buildOpts(e.shape.getPath()))}}}(this))}if(t.isDefined(n.fill)&&t.isDefined(n.fill.opacity)){n.$watch("fill.opacity",function(e){return function(t,n){if(t!==n){return e.shape.setOptions(e.buildOpts(e.shape.getPath()))}}}(this))}if(t.isDefined(n.zIndex)){n.$watch("zIndex",function(e){return function(t,n){if(t!==n){return e.shape.setOptions(e.buildOpts(e.shape.getPath()))}}}(this))}if(t.isDefined(n.events)&&n.events!==null&&t.isObject(n.events)){this.listeners=u.setEvents(this.shape,n,n)}}r(a,n);a.include(o);a.include(u);a.prototype.clean=function(){var e;this.removeEvents(this.listeners);this.removeEvents(this.internalListeners);if((e=this.shape)!=null){e.setMap(null)}return this.shape=null};return a}(n)}}])}).call(this);(function(){t.module("uiGmapgoogle-maps.directives.api.models.child").factory("uiGmapDrawFreeHandChildModel",["uiGmapLogger","$q",function(e,t){var n,r;n=function(e,t,n){var r,i;i=new google.maps.Polyline({map:e,clickable:false});r=google.maps.event.addListener(e,"mousemove",function(e){return i.getPath().push(e.latLng)});google.maps.event.addListenerOnce(e,"mouseup",function(s){var o;google.maps.event.removeListener(r);o=i.getPath();i.setMap(null);t.push(new google.maps.Polygon({map:e,path:o}));i=null;google.maps.event.clearListeners(e.getDiv(),"mousedown");return n()});return void 0};r=function(r,i){var s,o;this.map=r;if(!i){i={draggable:true,zoomControl:true,scrollwheel:true,disableDoubleClickZoom:true}}o=function(e){return function(){var t;if((t=e.deferred)!=null){t.resolve()}return _.defer(function(){return e.map.setOptions(_.extend(e.oldOptions,i))})}}(this);s=function(t){return function(){e.info("disabling map move");t.oldOptions=r.getOptions();t.oldOptions.center=r.getCenter();return t.map.setOptions({draggable:false,zoomControl:false,scrollwheel:false,disableDoubleClickZoom:false})}}(this);this.engage=function(r){return function(i){r.polys=i;r.deferred=t.defer();s();e.info("DrawFreeHandChildModel is engaged (drawing).");google.maps.event.addDomListener(r.map.getDiv(),"mousedown",function(e){return n(r.map,r.polys,o)});return r.deferred.promise}}(this);return this};return r}])}).call(this);(function(){var e=function(e,t){return function(){return e.apply(t,arguments)}},n={}.hasOwnProperty,r=function(e,t){function i(){this.constructor=e}for(var r in t){if(n.call(t,r))e[r]=t[r]}i.prototype=t.prototype;e.prototype=new i;e.__super__=t.prototype;return e};t.module("uiGmapgoogle-maps.directives.api.models.child").factory("uiGmapMarkerChildModel",["uiGmapModelKey","uiGmapGmapUtil","uiGmapLogger","uiGmapEventsHelper","uiGmapPropertyAction","uiGmapMarkerOptions","uiGmapIMarker","uiGmapMarkerManager","uiGmapPromise",function(t,n,i,s,o,u,a,f,l){var c,h;h=["coords","icon","options","fit"];c=function(t){function h(t,n,r,s,u,a,f,p,d,v){var m;this.model=n;this.keys=r;this.gMap=s;this.defaults=u;this.doClick=a;this.gMarkerManager=f;this.doDrawSelf=p!=null?p:true;this.trackModel=d!=null?d:true;this.needRedraw=v!=null?v:false;this.internalEvents=e(this.internalEvents,this);this.setLabelOptions=e(this.setLabelOptions,this);this.setOptions=e(this.setOptions,this);this.setIcon=e(this.setIcon,this);this.setCoords=e(this.setCoords,this);this.isNotValid=e(this.isNotValid,this);this.maybeSetScopeValue=e(this.maybeSetScopeValue,this);this.createMarker=e(this.createMarker,this);this.setMyScope=e(this.setMyScope,this);this.updateModel=e(this.updateModel,this);this.handleModelChanges=e(this.handleModelChanges,this);this.destroy=e(this.destroy,this);this.clonedModel=_.clone(this.model,true);this.deferred=l.defer();_.each(this.keys,function(e){return function(t,n){return e[n+"Key"]=_.isFunction(e.keys[n])?e.keys[n]():e.keys[n]}}(this));this.idKey=this.idKeyKey||"id";if(this.model[this.idKey]!=null){this.id=this.model[this.idKey]}h.__super__.constructor.call(this,t);this.scope.getGMarker=function(e){return function(){return e.gMarker}}(this);this.firstTime=true;if(this.trackModel){this.scope.model=this.model;this.scope.$watch("model",function(e){return function(t,n){if(t!==n){return e.handleModelChanges(t,n)}}}(this),true)}else{m=new o(function(e){return function(n,r){if(!e.firstTime){return e.setMyScope(n,t)}}}(this),false);_.each(this.keys,function(e,n){return t.$watch(n,m.sic,true)})}this.scope.$on("$destroy",function(e){return function(){return c(e)}}(this));this.createMarker(this.model);i.info(this)}var c;r(h,t);h.include(n);h.include(s);h.include(u);c=function(e){if((e!=null?e.gMarker:void 0)!=null){e.removeEvents(e.externalListeners);e.removeEvents(e.internalListeners);if(e!=null?e.gMarker:void 0){if(e.removeFromManager){e.gMarkerManager.remove(e.gMarker)}e.gMarker.setMap(null);return e.gMarker=null}}};h.prototype.destroy=function(e){if(e==null){e=true}this.removeFromManager=e;return this.scope.$destroy()};h.prototype.handleModelChanges=function(e,t){var n,r,i;n=this.getChanges(e,t,a.keys);if(!this.firstTime){r=0;i=_.keys(n).length;return _.each(n,function(n){return function(s,o){var u;r+=1;u=i===r;n.setMyScope(o,e,t,false,true,u);return n.needRedraw=true}}(this))}};h.prototype.updateModel=function(e){this.cloneModel=_.clone(e,true);return this.setMyScope("all",e,this.model)};h.prototype.renderGMarker=function(e,t){var n;if(e==null){e=true}n=this.getProp(this.coordsKey,this.model);if(n!=null){if(!this.validateCoords(n)){i.debug("MarkerChild does not have coords yet. They may be defined later.");return}if(t!=null){t()}if(e&&this.gMarker){return this.gMarkerManager.add(this.gMarker)}}else{if(e&&this.gMarker){return this.gMarkerManager.remove(this.gMarker)}}};h.prototype.setMyScope=function(e,t,n,r,i){var s;if(n==null){n=void 0}if(r==null){r=false}if(i==null){i=true}if(t==null){t=this.model}else{this.model=t}if(!this.gMarker){this.setOptions(this.scope,i);s=true}switch(e){case"all":return _.each(this.keys,function(e){return function(s,o){return e.setMyScope(o,t,n,r,i)}}(this));case"icon":return this.maybeSetScopeValue("icon",t,n,this.iconKey,this.evalModelHandle,r,this.setIcon,i);case"coords":return this.maybeSetScopeValue("coords",t,n,this.coordsKey,this.evalModelHandle,r,this.setCoords,i);case"options":if(!s){return this.createMarker(t,n,r,i)}}};h.prototype.createMarker=function(e,t,n,r){if(t==null){t=void 0}if(n==null){n=false}if(r==null){r=true}this.maybeSetScopeValue("options",e,t,this.optionsKey,this.evalModelHandle,n,this.setOptions,r);return this.firstTime=false};h.prototype.maybeSetScopeValue=function(e,t,n,r,i,s,o,u){if(o==null){o=void 0}if(u==null){u=true}if(o!=null){o(this.scope,u)}if(this.doDrawSelf&&u){return this.gMarkerManager.draw()}};h.prototype.isNotValid=function(e,t){var n,r;if(t==null){t=true}r=!t?false:this.gMarker===void 0;n=!this.trackModel?e.$id!==this.scope.$id:false;return n||r};h.prototype.setCoords=function(e,t){if(t==null){t=true}if(this.isNotValid(e)||this.gMarker==null){return}return this.renderGMarker(t,function(e){return function(){var t,n,r;n=e.getProp(e.coordsKey,e.model);t=e.getCoords(n);r=e.gMarker.getPosition();if(r!=null&&t!=null){if(t.lng()===r.lng()&&t.lat()===r.lat()){return}}e.gMarker.setPosition(t);return e.gMarker.setVisible(e.validateCoords(n))}}(this))};h.prototype.setIcon=function(e,t){if(t==null){t=true}if(this.isNotValid(e)||this.gMarker==null){return}return this.renderGMarker(t,function(e){return function(){var t,n,r;r=e.gMarker.getIcon();n=e.getProp("icon",e.model);if(r===n){return}e.gMarker.setIcon(n);t=e.getProp("coords",e.model);e.gMarker.setPosition(e.getCoords(t));return e.gMarker.setVisible(e.validateCoords(t))}}(this))};h.prototype.setOptions=function(e,t){var n;if(t==null){t=true}if(this.isNotValid(e,false)){return}this.renderGMarker(t,function(e){return function(){var t,n,r;t=e.getProp(e.coordsKey,e.model);n=e.getProp(e.iconKey,e.model);r=e.getProp(e.optionsKey,e.model);e.opts=e.createOptions(t,n,r);if(e.gMarker!=null){e.gMarker.setOptions(e.opts)}if(!e.gMarker){if(e.isLabel(e.opts)){e.gMarker=new MarkerWithLabel(e.setLabelOptions(e.opts))}else{e.gMarker=new google.maps.Marker(e.opts)}_.extend(e.gMarker,{model:e.model})}if(e.externalListeners){e.removeEvents(e.externalListeners)}if(e.internalListeners){e.removeEvents(e.internalListeners)}e.externalListeners=e.setEvents(e.gMarker,e.scope,e.model,["dragend"]);e.internalListeners=e.setEvents(e.gMarker,{events:e.internalEvents(),$evalAsync:function(){}},e.model);if(e.id!=null){return e.gMarker.key=e.id}}}(this));if(this.gMarker&&(this.gMarker.getMap()||this.gMarkerManager.type!==f.type)){this.deferred.resolve(this.gMarker)}else{if(!this.gMarker){return this.deferred.reject("gMarker is null")}if(!(((n=this.gMarker)!=null?n.getMap():void 0)&&this.gMarkerManager.type===f.type)){i.debug("gMarker has no map yet");this.deferred.resolve(this.gMarker)}}if(this.model[this.fitKey]){return this.gMarkerManager.fit()}};h.prototype.setLabelOptions=function(e){e.labelAnchor=this.getLabelPositionPoint(e.labelAnchor);return e};h.prototype.internalEvents=function(){return{dragend:function(e){return function(t,n,r,i){var s,o,u;o=e.trackModel?e.scope.model:e.model;u=e.setCoordsFromEvent(e.modelOrKey(o,e.coordsKey),e.gMarker.getPosition());o=e.setVal(r,e.coordsKey,u);s=e.scope.events;if((s!=null?s.dragend:void 0)!=null){s.dragend(t,n,o,i)}return e.scope.$apply()}}(this),click:function(e){return function(t,n,r,i){var s;s=_.isFunction(e.clickKey)?e.clickKey:e.getProp(e.clickKey,e.model);if(e.doClick&&s!=null){return e.scope.$evalAsync(s(t,n,e.model,i))}}}(this)}};return h}(t);return c}])}).call(this);(function(){var e={}.hasOwnProperty,n=function(t,n){function i(){this.constructor=t}for(var r in n){if(e.call(n,r))t[r]=n[r]}i.prototype=n.prototype;t.prototype=new i;t.__super__=n.prototype;return t};t.module("uiGmapgoogle-maps.directives.api").factory("uiGmapPolygonChildModel",["uiGmapBasePolyChildModel","uiGmapPolygonOptionsBuilder",function(e,t){var r,i,s;s=function(e){return new google.maps.Polygon(e)};i=new e(t,s);return r=function(e){function t(){return t.__super__.constructor.apply(this,arguments)}n(t,e);return t}(i)}])}).call(this);(function(){var e={}.hasOwnProperty,n=function(t,n){function i(){this.constructor=t}for(var r in n){if(e.call(n,r))t[r]=n[r]}i.prototype=n.prototype;t.prototype=new i;t.__super__=n.prototype;return t};t.module("uiGmapgoogle-maps.directives.api").factory("uiGmapPolylineChildModel",["uiGmapBasePolyChildModel","uiGmapPolylineOptionsBuilder",function(e,t){var r,i,s;s=function(e){return new google.maps.Polyline(e)};i=e(t,s);return r=function(e){function t(){return t.__super__.constructor.apply(this,arguments)}n(t,e);return t}(i)}])}).call(this);(function(){var n=function(e,t){return function(){return e.apply(t,arguments)}},r={}.hasOwnProperty,i=function(e,t){function i(){this.constructor=e}for(var n in t){if(r.call(t,n))e[n]=t[n]}i.prototype=t.prototype;e.prototype=new i;e.__super__=t.prototype;return e};t.module("uiGmapgoogle-maps.directives.api.models.child").factory("uiGmapWindowChildModel",["uiGmapBaseObject","uiGmapGmapUtil","uiGmapLogger","$compile","$http","$templateCache","uiGmapChromeFixes","uiGmapEventsHelper",function(r,s,o,u,a,f,l,c){var h;h=function(r){function h(e,t,r,i,s,u,a,f,l){var c;this.model=e;this.scope=t;this.opts=r;this.isIconVisibleOnClick=i;this.mapCtrl=s;this.markerScope=u;this.element=a;this.needToManualDestroy=f!=null?f:false;this.markerIsVisibleAfterWindowClose=l!=null?l:true;this.destroy=n(this.destroy,this);this.remove=n(this.remove,this);this.getLatestPosition=n(this.getLatestPosition,this);this.hideWindow=n(this.hideWindow,this);this.showWindow=n(this.showWindow,this);this.handleClick=n(this.handleClick,this);this.watchOptions=n(this.watchOptions,this);this.watchCoords=n(this.watchCoords,this);this.createGWin=n(this.createGWin,this);this.watchElement=n(this.watchElement,this);this.watchAndDoShow=n(this.watchAndDoShow,this);this.doShow=n(this.doShow,this);this.clonedModel=_.clone(this.model,true);this.getGmarker=function(){var e,t;if(((e=this.markerScope)!=null?e["getGMarker"]:void 0)!=null){return(t=this.markerScope)!=null?t.getGMarker():void 0}};this.listeners=[];this.createGWin();c=this.getGmarker();if(c!=null){c.setClickable(true)}this.watchElement();this.watchOptions();this.watchCoords();this.watchAndDoShow();this.scope.$on("$destroy",function(e){return function(){return e.destroy()}}(this));o.info(this)}i(h,r);h.include(s);h.include(c);h.prototype.doShow=function(){if(this.scope.show){return this.showWindow()}else{return this.hideWindow()}};h.prototype.watchAndDoShow=function(){if(this.model.show!=null){this.scope.show=this.model.show}this.scope.$watch("show",this.doShow,true);return this.doShow()};h.prototype.watchElement=function(){return this.scope.$watch(function(e){return function(){var t,n;if(!(e.element||e.html)){return}if(e.html!==e.element.html()&&e.gWin){if((n=e.opts)!=null){n.content=void 0}t=e.gWin.isOpen();e.remove();return e.createGWin(t)}}}(this))};h.prototype.createGWin=function(t){var n,r,i,s,o;if(t==null){t=false}r=this.getGmarker();if(this.gWin==null){n={};if(this.opts!=null){if(this.scope.coords){this.opts.position=this.getCoords(this.scope.coords)}n=this.opts}if(this.element){this.html=_.isObject(this.element)?this.element.html():this.element}i=this.scope.options?this.scope.options:n;this.opts=this.createWindowOptions(r,this.markerScope||this.scope,this.html,i)}if(this.opts!=null&&!this.gWin){if(this.opts.boxClass&&e.InfoBox&&typeof e.InfoBox==="function"){this.gWin=new e.InfoBox(this.opts)}else{this.gWin=new google.maps.InfoWindow(this.opts)}this.handleClick(((s=this.scope)!=null?(o=s.options)!=null?o.forceClick:void 0:void 0)||t);this.doShow();this.listeners.push(google.maps.event.addListener(this.gWin,"domready",function(){return l.maybeRepaint(this.content)}));return this.listeners.push(google.maps.event.addListener(this.gWin,"closeclick",function(e){return function(){if(r){r.setAnimation(e.oldMarkerAnimation);if(e.markerIsVisibleAfterWindowClose){_.delay(function(){r.setVisible(false);return r.setVisible(e.markerIsVisibleAfterWindowClose)},250)}}e.gWin.close();e.model.show=false;if(e.scope.closeClick!=null){return e.scope.$evalAsync(e.scope.closeClick())}else{return e.scope.$evalAsync()}}}(this)))}};h.prototype.watchCoords=function(){var e;e=this.markerScope!=null?this.markerScope:this.scope;return e.$watch("coords",function(e){return function(t,n){var r;if(t!==n){if(t==null){e.hideWindow()}else if(!e.validateCoords(t)){o.error("WindowChildMarker cannot render marker as scope.coords as no position on marker: "+JSON.stringify(e.model));return}r=e.getCoords(t);e.gWin.setPosition(r);if(e.opts){return e.opts.position=r}}}}(this),true)};h.prototype.watchOptions=function(){return this.scope.$watch("options",function(e){return function(t,n){if(t!==n){e.opts=t;if(e.gWin!=null){e.gWin.setOptions(e.opts);if(e.opts.visible!=null&&e.opts.visible){return e.showWindow()}else if(e.opts.visible!=null){return e.hideWindow()}}}}}(this),true)};h.prototype.handleClick=function(e){var t,n;if(this.gWin==null){return}n=this.getGmarker();t=function(e){return function(){if(e.gWin==null){e.createGWin()}e.showWindow();if(n!=null){e.initialMarkerVisibility=n.getVisible();e.oldMarkerAnimation=n.getAnimation();return n.setVisible(e.isIconVisibleOnClick)}}}(this);if(e){t()}if(n){return this.listeners=this.listeners.concat(this.setEvents(n,{events:{click:t}},this.model))}};h.prototype.showWindow=function(){var e,n,r;if(this.gWin!=null){n=function(e){return function(){var t,n,r;if(!e.gWin.isOpen()){n=e.getGmarker();if(e.gWin!=null&&e.gWin.getPosition!=null){r=e.gWin.getPosition()}if(n){r=n.getPosition()}if(!r){return}e.gWin.open(e.mapCtrl,n);t=e.gWin.isOpen();if(e.model.show!==t){return e.model.show=t}}}}(this);if(this.scope.templateUrl){return a.get(this.scope.templateUrl,{cache:f}).then(function(e){return function(r){var i,s;s=e.scope.$new();if(t.isDefined(e.scope.templateParameter)){s.parameter=e.scope.templateParameter}i=u(r.data)(s);e.gWin.setContent(i[0]);return n()}}(this))}else if(this.scope.template){r=this.scope.$new();if(t.isDefined(this.scope.templateParameter)){r.parameter=this.scope.templateParameter}e=u(this.scope.template)(r);this.gWin.setContent(e[0]);return n()}else{return n()}}};h.prototype.hideWindow=function(){if(this.gWin!=null&&this.gWin.isOpen()){return this.gWin.close()}};h.prototype.getLatestPosition=function(e){var t;t=this.getGmarker();if(this.gWin!=null&&t!=null&&!e){return this.gWin.setPosition(t.getPosition())}else{if(e){return this.gWin.setPosition(e)}}};h.prototype.remove=function(){this.hideWindow();this.removeEvents(this.listeners);this.listeners.length=0;delete this.gWin;return delete this.opts};h.prototype.destroy=function(e){var t;if(e==null){e=false}this.remove();if(this.scope!=null&&!((t=this.scope)!=null?t.$$destroyed:void 0)&&(this.needToManualDestroy||e)){return this.scope.$destroy()}};return h}(r);return h}])}).call(this);(function(){var e={}.hasOwnProperty,n=function(t,n){function i(){this.constructor=t}for(var r in n){if(e.call(n,r))t[r]=n[r]}i.prototype=n.prototype;t.prototype=new i;t.__super__=n.prototype;return t};t.module("uiGmapgoogle-maps.directives.api.models.parent").factory("uiGmapCircleParentModel",["uiGmapLogger","$timeout","uiGmapGmapUtil","uiGmapEventsHelper","uiGmapCircleOptionsBuilder",function(e,r,i,s,o){var u;return u=function(r){function o(n,r,s,o,u){var a,f;this.scope=n;this.attrs=s;this.map=o;this.DEFAULTS=u;a=new google.maps.Circle(this.buildOpts(i.getCoords(n.center),n.radius));this.setMyOptions=function(e){return function(t,r){if(!_.isEqual(t,r)){return a.setOptions(e.buildOpts(i.getCoords(n.center),n.radius))}}}(this);this.props=this.props.concat([{prop:"center",isColl:true},{prop:"fill",isColl:true},"radius"]);this.watchProps();f=this.setEvents(a,n,n);google.maps.event.addListener(a,"radius_changed",function(){return n.$evalAsync(function(){return n.radius=a.getRadius()})});google.maps.event.addListener(a,"center_changed",function(){return n.$evalAsync(function(){if(t.isDefined(n.center.type)){n.center.coordinates[1]=a.getCenter().lat();return n.center.coordinates[0]=a.getCenter().lng()}else{n.center.latitude=a.getCenter().lat();return n.center.longitude=a.getCenter().lng()}})});n.$on("$destroy",function(e){return function(){e.removeEvents(f);return a.setMap(null)}}(this));e.info(this)}n(o,r);o.include(i);o.include(s);return o}(o)}])}).call(this);(function(){var e={}.hasOwnProperty,n=function(t,n){function i(){this.constructor=t}for(var r in n){if(e.call(n,r))t[r]=n[r]}i.prototype=n.prototype;t.prototype=new i;t.__super__=n.prototype;return t};t.module("uiGmapgoogle-maps.directives.api.models.parent").factory("uiGmapDrawingManagerParentModel",["uiGmapLogger","$timeout","uiGmapBaseObject","uiGmapEventsHelper",function(e,t,r,i){var s;return s=function(e){function t(e,t,n,r){var i,s;this.scope=e;this.attrs=n;this.map=r;i=new google.maps.drawing.DrawingManager(this.scope.options);i.setMap(this.map);s=void 0;if(this.scope.control!=null){this.scope.control.getDrawingManager=function(){return i}}if(!this.scope["static"]&&this.scope.options){this.scope.$watch("options",function(e){return i!=null?i.setOptions(e):void 0},true)}if(this.scope.events!=null){s=this.setEvents(i,this.scope,this.scope);e.$watch("events",function(e){return function(t,n){if(!_.isEqual(t,n)){if(s!=null){e.removeEvents(s)}return s=e.setEvents(i,e.scope,e.scope)}}}(this))}e.$on("$destroy",function(e){return function(){if(s!=null){e.removeEvents(s)}i.setMap(null);return i=null}}(this))}n(t,e);t.include(i);return t}(r)}])}).call(this);(function(){var e=function(e,t){return function(){return e.apply(t,arguments)}},n={}.hasOwnProperty,r=function(e,t){function i(){this.constructor=e}for(var r in t){if(n.call(t,r))e[r]=t[r]}i.prototype=t.prototype;e.prototype=new i;e.__super__=t.prototype;return e};t.module("uiGmapgoogle-maps.directives.api.models.parent").factory("uiGmapIMarkerParentModel",["uiGmapModelKey","uiGmapLogger",function(n,i){var s;s=function(n){function s(n,r,o,u){this.scope=n;this.element=r;this.attrs=o;this.map=u;this.onDestroy=e(this.onDestroy,this);this.onWatch=e(this.onWatch,this);this.watch=e(this.watch,this);this.validateScope=e(this.validateScope,this);s.__super__.constructor.call(this,this.scope);this.$log=i;if(!this.validateScope(n)){throw new String("Unable to construct IMarkerParentModel due to invalid scope")}this.doClick=t.isDefined(o.click);if(n.options!=null){this.DEFAULTS=n.options}this.watch("coords",this.scope);this.watch("icon",this.scope);this.watch("options",this.scope);n.$on("$destroy",function(e){return function(){return e.onDestroy(n)}}(this))}r(s,n);s.prototype.DEFAULTS={};s.prototype.validateScope=function(e){var t;if(e==null){this.$log.error(this.constructor.name+": invalid scope used");return false}t=e.coords!=null;if(!t){this.$log.error(this.constructor.name+": no valid coords attribute found");return false}return t};s.prototype.watch=function(e,t,n){if(n==null){n=true}return t.$watch(e,function(n){return function(r,i){if(!_.isEqual(r,i)){return n.onWatch(e,t,r,i)}}}(this),n)};s.prototype.onWatch=function(e,t,n,r){};s.prototype.onDestroy=function(e){throw new String("OnDestroy Not Implemented!!")};return s}(n);return s}])}).call(this);(function(){var e={}.hasOwnProperty,n=function(t,n){function i(){this.constructor=t}for(var r in n){if(e.call(n,r))t[r]=n[r]}i.prototype=n.prototype;t.prototype=new i;t.__super__=n.prototype;return t};t.module("uiGmapgoogle-maps.directives.api.models.parent").factory("uiGmapIWindowParentModel",["uiGmapModelKey","uiGmapGmapUtil","uiGmapLogger",function(e,t,r){var i;return i=function(e){function i(e,t,n,s,o,u,a,f){i.__super__.constructor.call(this,e);this.$log=r;this.$timeout=o;this.$compile=u;this.$http=a;this.$templateCache=f;this.DEFAULTS={};if(e.options!=null){this.DEFAULTS=e.options}}n(i,e);i.include(t);i.prototype.getItem=function(e,t,n){if(t==="models"){return e[t][n]}return e[t].get(n)};return i}(e)}])}).call(this);(function(){var e=function(e,t){return function(){return e.apply(t,arguments)}},n={}.hasOwnProperty,r=function(e,t){function i(){this.constructor=e}for(var r in t){if(n.call(t,r))e[r]=t[r]}i.prototype=t.prototype;e.prototype=new i;e.__super__=t.prototype;return e};t.module("uiGmapgoogle-maps.directives.api.models.parent").factory("uiGmapLayerParentModel",["uiGmapBaseObject","uiGmapLogger","$timeout",function(n,i,s){var o;o=function(n){function s(n,r,s,o,u,a){this.scope=n;this.element=r;this.attrs=s;this.gMap=o;this.onLayerCreated=u!=null?u:void 0;this.$log=a!=null?a:i;this.createGoogleLayer=e(this.createGoogleLayer,this);if(this.attrs.type==null){this.$log.info("type attribute for the layer directive is mandatory. Layer creation aborted!!");return}this.createGoogleLayer();this.doShow=true;if(t.isDefined(this.attrs.show)){this.doShow=this.scope.show}if(this.doShow&&this.gMap!=null){this.layer.setMap(this.gMap)}this.scope.$watch("show",function(e){return function(t,n){if(t!==n){e.doShow=t;if(t){return e.layer.setMap(e.gMap)}else{return e.layer.setMap(null)}}}}(this),true);this.scope.$watch("options",function(e){return function(t,n){if(t!==n){e.layer.setMap(null);e.layer=null;return e.createGoogleLayer()}}}(this),true);this.scope.$on("$destroy",function(e){return function(){return e.layer.setMap(null)}}(this))}r(s,n);s.prototype.createGoogleLayer=function(){var e;if(this.attrs.options==null){this.layer=this.attrs.namespace===void 0?new google.maps[this.attrs.type]:new google.maps[this.attrs.namespace][this.attrs.type]}else{this.layer=this.attrs.namespace===void 0?new google.maps[this.attrs.type](this.scope.options):new google.maps[this.attrs.namespace][this.attrs.type](this.scope.options)}if(this.layer!=null&&this.onLayerCreated!=null){return typeof (e=this.onLayerCreated(this.scope,this.layer))==="function"?e(this.layer):void 0}};return s}(n);return o}])}).call(this);(function(){var e=function(e,t){return function(){return e.apply(t,arguments)}},n={}.hasOwnProperty,r=function(e,t){function i(){this.constructor=e}for(var r in t){if(n.call(t,r))e[r]=t[r]}i.prototype=t.prototype;e.prototype=new i;e.__super__=t.prototype;return e};t.module("uiGmapgoogle-maps.directives.api.models.parent").factory("uiGmapMapTypeParentModel",["uiGmapBaseObject","uiGmapLogger",function(n,i){var s;s=function(n){function s(n,r,s,o,u){this.scope=n;this.element=r;this.attrs=s;this.gMap=o;this.$log=u!=null?u:i;this.hideOverlay=e(this.hideOverlay,this);this.showOverlay=e(this.showOverlay,this);this.refreshMapType=e(this.refreshMapType,this);this.createMapType=e(this.createMapType,this);if(this.attrs.options==null){this.$log.info("options attribute for the map-type directive is mandatory. Map type creation aborted!!");return}this.id=this.gMap.overlayMapTypesCount=this.gMap.overlayMapTypesCount+1||0;this.doShow=true;this.createMapType();if(t.isDefined(this.attrs.show)){this.doShow=this.scope.show}if(this.doShow&&this.gMap!=null){this.showOverlay()}this.scope.$watch("show",function(e){return function(t,n){if(t!==n){e.doShow=t;if(t){return e.showOverlay()}else{return e.hideOverlay()}}}}(this),true);this.scope.$watch("options",function(e){return function(t,n){if(!_.isEqual(t,n)){return e.refreshMapType()}}}(this),true);if(t.isDefined(this.attrs.refresh)){this.scope.$watch("refresh",function(e){return function(t,n){if(!_.isEqual(t,n)){return e.refreshMapType()}}}(this),true)}this.scope.$on("$destroy",function(e){return function(){e.hideOverlay();return e.mapType=null}}(this))}r(s,n);s.prototype.createMapType=function(){if(this.scope.options.getTile!=null){this.mapType=this.scope.options}else if(this.scope.options.getTileUrl!=null){this.mapType=new google.maps.ImageMapType(this.scope.options)}else{this.$log.info("options should provide either getTile or getTileUrl methods. Map type creation aborted!!");return}if(this.attrs.id&&this.scope.id){this.gMap.mapTypes.set(this.scope.id,this.mapType);if(!t.isDefined(this.attrs.show)){this.doShow=false}}return this.mapType.layerId=this.id};s.prototype.refreshMapType=function(){this.hideOverlay();this.mapType=null;this.createMapType();if(this.doShow&&this.gMap!=null){return this.showOverlay()}};s.prototype.showOverlay=function(){return this.gMap.overlayMapTypes.push(this.mapType)};s.prototype.hideOverlay=function(){var e;e=false;return this.gMap.overlayMapTypes.forEach(function(t){return function(n,r){if(!e&&n.layerId===t.id){e=true;t.gMap.overlayMapTypes.removeAt(r)}}}(this))};return s}(n);return s}])}).call(this);(function(){var e=function(e,t){return function(){return e.apply(t,arguments)}},n={}.hasOwnProperty,r=function(e,t){function i(){this.constructor=e}for(var r in t){if(n.call(t,r))e[r]=t[r]}i.prototype=t.prototype;e.prototype=new i;e.__super__=t.prototype;return e};t.module("uiGmapgoogle-maps.directives.api.models.parent").factory("uiGmapMarkersParentModel",["uiGmapIMarkerParentModel","uiGmapModelsWatcher","uiGmapPropMap","uiGmapMarkerChildModel","uiGmap_async","uiGmapClustererMarkerManager","uiGmapMarkerManager","$timeout","uiGmapIMarker","uiGmapPromise","uiGmapGmapUtil","uiGmapLogger",function(n,i,s,o,u,a,f,l,c,h,p,d){var v;v=function(n){function l(t,n,r,i){this.onDestroy=e(this.onDestroy,this);this.newChildMarker=e(this.newChildMarker,this);this.updateChild=e(this.updateChild,this);this.pieceMeal=e(this.pieceMeal,this);this.reBuildMarkers=e(this.reBuildMarkers,this);this.createMarkersFromScratch=e(this.createMarkersFromScratch,this);this.validateScope=e(this.validateScope,this);this.onWatch=e(this.onWatch,this);var o;l.__super__.constructor.call(this,t,n,r,i);o=this;this.scope.markerModels=new s;this.scope.markerModelsUpdate={updateCtr:0};this.$log.info(this);this.doRebuildAll=this.scope.doRebuildAll!=null?this.scope.doRebuildAll:false;this.setIdKey(t);this.scope.$watch("doRebuildAll",function(e){return function(t,n){if(t!==n){return e.doRebuildAll=t}}}(this));if(t.models==null||t.models.length===0){this.modelsRendered=false}this.scope.$watch("models",function(e){return function(n,r){if(!_.isEqual(n,r)||!e.modelsRendered){if(n.length===0&&r.length===0){return}e.modelsRendered=true;return e.onWatch("models",t,n,r)}}}(this),!this.isTrue(r.modelsbyref));this.watch("doCluster",t);this.watch("clusterOptions",t);this.watch("clusterEvents",t);this.watch("fit",t);this.watch("idKey",t);this.gMarkerManager=void 0;this.createMarkersFromScratch(t)}r(l,n);l.include(p);l.include(i);l.prototype.onWatch=function(e,t,n,r){if(e==="idKey"&&n!==r){this.idKey=n}if(this.doRebuildAll){return this.reBuildMarkers(t)}else{return this.pieceMeal(t)}};l.prototype.validateScope=function(e){var n;n=t.isUndefined(e.models)||e.models===void 0;if(n){this.$log.error(this.constructor.name+": no valid models attribute found")}return l.__super__.validateScope.call(this,e)||n};l.prototype.createMarkersFromScratch=function(e){var t;if(e.doCluster){if(e.clusterEvents){this.clusterInternalOptions=_.once(function(t){return function(){var n,r,i,s;n=t;if(!t.origClusterEvents){t.origClusterEvents={click:(r=e.clusterEvents)!=null?r.click:void 0,mouseout:(i=e.clusterEvents)!=null?i.mouseout:void 0,mouseover:(s=e.clusterEvents)!=null?s.mouseover:void 0};return _.extend(e.clusterEvents,{click:function(e){return n.maybeExecMappedEvent(e,"click")},mouseout:function(e){return n.maybeExecMappedEvent(e,"mouseout")},mouseover:function(e){return n.maybeExecMappedEvent(e,"mouseover")}})}}}(this))()}if(!this.gMarkerManager){this.gMarkerManager=new a(this.map,void 0,e.clusterOptions,this.clusterInternalOptions)}}if(!this.gMarkerManager){this.gMarkerManager=new f(this.map)}this.gMarkerManager.clear();if(this.didQueueInitPromise(this,e)){return}t=null;return u.promiseLock(this,h.promiseTypes.create,"createAllNew",function(e){return t=e},function(n){return function(){return u.each(e.models,function(r){n.newChildMarker(r,e);return t},u.chunkSizeFrom(e.chunk)).then(function(){n.modelsRendered=true;n.gMarkerManager.draw();if(e.fit){n.gMarkerManager.fit()}return n.scope.markerModelsUpdate.updateCtr+=1},u.chunkSizeFrom(e.chunk))}}(this))};l.prototype.reBuildMarkers=function(e){var t;if(!e.doRebuild&&e.doRebuild!==void 0){return}if((t=this.scope.markerModels)!=null?t.length:void 0){return this.onDestroy(e).then(function(t){return function(){return t.createMarkersFromScratch(e)}}(this))}else{return this.createMarkersFromScratch(e)}};l.prototype.pieceMeal=function(e){var t,n;if(e.$$destroyed){return}t=null;n=null;if(this.scope.models!=null&&this.scope.models.length>0&&this.scope.markerModels.length>0){return u.promiseLock(this,h.promiseTypes.update,"pieceMeal",function(e){return t=e},function(r){return function(){return h.promise(function(){return r.figureOutState(r.idKey,e,r.scope.markerModels,r.modelKeyComparison)}).then(function(i){n=i;return u.each(n.removals,function(e){if(e!=null){if(e.destroy!=null){e.destroy()}r.scope.markerModels.remove(e.id);return t}},u.chunkSizeFrom(e.chunk))}).then(function(){return u.each(n.adds,function(n){r.newChildMarker(n,e);return t},u.chunkSizeFrom(e.chunk))}).then(function(){return u.each(n.updates,function(e){r.updateChild(e.child,e.model);return t},u.chunkSizeFrom(e.chunk))}).then(function(){if(n.adds.length>0||n.removals.length>0||n.updates.length>0){r.gMarkerManager.draw();e.markerModels=r.scope.markerModels;if(e.fit){r.gMarkerManager.fit()}}return r.scope.markerModelsUpdate.updateCtr+=1})}}(this))}else{this.inProgress=false;return this.reBuildMarkers(e)}};l.prototype.updateChild=function(e,t){if(t[this.idKey]==null){this.$log.error("Marker model has no id to assign a child to. This is required for performance. Please assign id, or redirect id to a different key.");return}return e.updateModel(t)};l.prototype.newChildMarker=function(e,t){var n,r,i,s;if(e[this.idKey]==null){this.$log.error("Marker model has no id to assign a child to. This is required for performance. Please assign id, or redirect id to a different key.");return}this.$log.info("child",n,"markers",this.scope.markerModels);r=t.$new(true);r.events=t.events;s={};_.each(c.scopeKeys,function(e,n){return s[n]=t[n]});n=new o(r,e,s,this.map,this.DEFAULTS,this.doClick,this.gMarkerManager,i=false);this.scope.markerModels.put(e[this.idKey],n);return n};l.prototype.onDestroy=function(e){return u.promiseLock(this,h.promiseTypes["delete"],void 0,void 0,function(e){return function(){return u.each(e.scope.markerModels.values(),function(e){if(e!=null){return e.destroy(false)}},false).then(function(){delete e.scope.markerModels;if(e.gMarkerManager!=null){e.gMarkerManager.clear()}e.scope.markerModels=new s;return e.scope.markerModelsUpdate.updateCtr+=1})}}(this))};l.prototype.maybeExecMappedEvent=function(e,t){var n,r;if(_.isFunction((r=this.scope.clusterEvents)!=null?r[t]:void 0)){n=this.mapClusterToMarkerModels(e);if(this.origClusterEvents[t]){return this.origClusterEvents[t](n.cluster,n.mapped)}}};l.prototype.mapClusterToMarkerModels=function(e){var t;t=e.getMarkers().map(function(e){return function(t){return e.scope.markerModels.get(t.key).model}}(this));return{cluster:e,mapped:t}};l.prototype.getItem=function(e,t,n){if(t==="models"){return e[t][n]}return e[t].get(n)};return l}(n);return v}])}).call(this);(function(){var e=function(e,t){return function(){return e.apply(t,arguments)}},n={}.hasOwnProperty,r=function(e,t){function i(){this.constructor=e}for(var r in t){if(n.call(t,r))e[r]=t[r]}i.prototype=t.prototype;e.prototype=new i;e.__super__=t.prototype;return e};t.module("uiGmapgoogle-maps.directives.api.models.parent").factory("uiGmapPolygonsParentModel",["$timeout","uiGmapLogger","uiGmapModelKey","uiGmapModelsWatcher","uiGmapPropMap","uiGmapPolygonChildModel","uiGmap_async","uiGmapPromise",function(n,i,s,o,u,a,f,l){var c;return c=function(n){function s(t,n,r,o,a){var f;this.scope=t;this.element=n;this.attrs=r;this.gMap=o;this.defaults=a;this.modelKeyComparison=e(this.modelKeyComparison,this);this.createChild=e(this.createChild,this);this.pieceMeal=e(this.pieceMeal,this);this.createAllNew=e(this.createAllNew,this);this.watchIdKey=e(this.watchIdKey,this);this.createChildScopes=e(this.createChildScopes,this);this.watchOurScope=e(this.watchOurScope,this);this.watchDestroy=e(this.watchDestroy,this);this.onDestroy=e(this.onDestroy,this);this.rebuildAll=e(this.rebuildAll,this);this.doINeedToWipe=e(this.doINeedToWipe,this);this.watchModels=e(this.watchModels,this);this.watch=e(this.watch,this);s.__super__.constructor.call(this,t);f=this;this.$log=i;this.plurals=new u;this.scopePropNames=["path","stroke","clickable","draggable","editable","geodesic","icons","visible"];_.each(this.scopePropNames,function(e){return function(t){return e[t+"Key"]=void 0}}(this));this.models=void 0;this.firstTime=true;this.$log.info(this);this.watchOurScope(t);this.createChildScopes()}r(s,n);s.include(o);s.prototype.watch=function(e,t,n){return e.$watch(t,function(r){return function(i,s){var o;if(i!==s){o=null;r[n]=_.isFunction(i)?i():i;return f.promiseLock(r,l.promiseTypes.update,"watch "+t+" "+n,function(e){return o=e},function(){return f.each(r.plurals.values(),function(e){e.scope[t]=r[n]==="self"?e:e[r[n]];return o},f.chunkSizeFrom(e.chunk))})}}}(this))};s.prototype.watchModels=function(e){return e.$watchCollection("models",function(t){return function(n,r){if(!(_.isEqual(n,r)&&(t.lastNewValue!==n||t.lastOldValue!==r))){t.lastNewValue=n;t.lastOldValue=r;if(t.doINeedToWipe(n)){return t.rebuildAll(e,true,true)}else{return t.createChildScopes(false)}}}}(this))};s.prototype.doINeedToWipe=function(e){var t;t=e!=null?e.length===0:true;return this.plurals.length>0&&t};s.prototype.rebuildAll=function(e,t,n){return this.onDestroy(n).then(function(e){return function(){if(t){return e.createChildScopes()}}}(this))};s.prototype.onDestroy=function(e){return f.promiseLock(this,l.promiseTypes["delete"],void 0,void 0,function(t){return function(){return f.each(t.plurals.values(),function(e){return e.destroy(true)},false).then(function(){if(e){delete t.plurals}return t.plurals=new u})}}(this))};s.prototype.watchDestroy=function(e){return e.$on("$destroy",function(t){return function(){return t.rebuildAll(e,false,true)}}(this))};s.prototype.watchOurScope=function(e){return _.each(this.scopePropNames,function(t){return function(n){var r;r=n+"Key";t[r]=typeof e[n]==="function"?e[n]():e[n];return t.watch(e,n,r)}}(this))};s.prototype.createChildScopes=function(e){if(e==null){e=true}if(t.isUndefined(this.scope.models)){this.$log.error("No models to create Polygons from! I Need direct models!");return}if(this.gMap!=null){if(this.scope.models!=null){this.watchIdKey(this.scope);if(e){return this.createAllNew(this.scope,false)}else{return this.pieceMeal(this.scope,false)}}}};s.prototype.watchIdKey=function(e){this.setIdKey(e);return e.$watch("idKey",function(t){return function(n,r){if(n!==r&&n==null){t.idKey=n;return t.rebuildAll(e,true,true)}}}(this))};s.prototype.createAllNew=function(e,t){var n;if(t==null){t=false}this.models=e.models;if(this.firstTime){this.watchModels(e);this.watchDestroy(e)}if(this.didQueueInitPromise(this,e)){return}n=null;return f.promiseLock(this,l.promiseTypes.create,"createAllNew",function(e){return n=e},function(t){return function(){return f.each(e.models,function(e){var r;r=t.createChild(e,t.gMap);if(n){i.debug("createNew should fall through safely");r.isEnabled=false}return n},f.chunkSizeFrom(e.chunk)).then(function(){return t.firstTime=false})}}(this))};s.prototype.pieceMeal=function(e,t){var n,r;if(t==null){t=true}if(e.$$destroyed){return}n=null;r=null;this.models=e.models;if(e!=null&&e.models!=null&&e.models.length>0&&this.plurals.length>0){return f.promiseLock(this,l.promiseTypes.update,"pieceMeal",function(e){return n=e},function(t){return function(){return l.promise(function(){return t.figureOutState(t.idKey,e,t.plurals,t.modelKeyComparison)}).then(function(i){r=i;return f.each(r.removals,function(e){var r;r=t.plurals.get(e);if(r!=null){r.destroy();t.plurals.remove(e);return n}},f.chunkSizeFrom(e.chunk))}).then(function(){return f.each(r.adds,function(e){if(n){i.debug("pieceMeal should fall through safely")}t.createChild(e,t.gMap);return n},f.chunkSizeFrom(e.chunk))})}}(this))}else{this.inProgress=false;return this.rebuildAll(this.scope,true,true)}};s.prototype.createChild=function(e,t){var n,r;r=this.scope.$new(false);this.setChildScope(this.scopePropNames,r,e);r.$watch("model",function(e){return function(t,n){if(t!==n){return e.setChildScope(r,t)}}}(this),true);r["static"]=this.scope["static"];n=new a(r,this.attrs,t,this.defaults,e);if(e[this.idKey]==null){this.$log.error("Polygon model has no id to assign a child to.\nThis is required for performance. Please assign id,\nor redirect id to a different key.");return}this.plurals.put(e[this.idKey],n);return n};s.prototype.modelKeyComparison=function(e,t){return _.isEqual(this.evalModelHandle(e,this.scope.path),this.evalModelHandle(t,this.scope.path))};return s}(s)}])}).call(this);(function(){var e=function(e,t){return function(){return e.apply(t,arguments)}},n={}.hasOwnProperty,r=function(e,t){function i(){this.constructor=e}for(var r in t){if(n.call(t,r))e[r]=t[r]}i.prototype=t.prototype;e.prototype=new i;e.__super__=t.prototype;return e};t.module("uiGmapgoogle-maps.directives.api.models.parent").factory("uiGmapPolylinesParentModel",["$timeout","uiGmapLogger","uiGmapModelKey","uiGmapModelsWatcher","uiGmapPropMap","uiGmapPolylineChildModel","uiGmap_async","uiGmapPromise",function(n,i,s,o,u,a,f,l){var c;return c=function(n){function s(t,n,r,o,a){var f;this.scope=t;this.element=n;this.attrs=r;this.gMap=o;this.defaults=a;this.modelKeyComparison=e(this.modelKeyComparison,this);this.setChildScope=e(this.setChildScope,this);this.createChild=e(this.createChild,this);this.pieceMeal=e(this.pieceMeal,this);this.createAllNew=e(this.createAllNew,this);this.watchIdKey=e(this.watchIdKey,this);this.createChildScopes=e(this.createChildScopes,this);this.watchOurScope=e(this.watchOurScope,this);this.watchDestroy=e(this.watchDestroy,this);this.onDestroy=e(this.onDestroy,this);this.rebuildAll=e(this.rebuildAll,this);this.doINeedToWipe=e(this.doINeedToWipe,this);this.watchModels=e(this.watchModels,this);this.watch=e(this.watch,this);s.__super__.constructor.call(this,t);f=this;this.$log=i;this.plurals=new u;this.scopePropNames=["path","stroke","clickable","draggable","editable","geodesic","icons","visible"];_.each(this.scopePropNames,function(e){return function(t){return e[t+"Key"]=void 0}}(this));this.models=void 0;this.firstTime=true;this.$log.info(this);this.watchOurScope(t);this.createChildScopes()}r(s,n);s.include(o);s.prototype.watch=function(e,t,n){return e.$watch(t,function(e){return function(r,i){var s;if(r!==i){s=null;e[n]=_.isFunction(r)?r():r;return f.promiseLock(e,l.promiseTypes.update,"watch "+t+" "+n,function(e){return s=e},function(){return f.each(e.plurals.values(),function(r){r.scope[t]=e[n]==="self"?r:r[e[n]];return s},false)})}}}(this))};s.prototype.watchModels=function(e){return e.$watchCollection("models",function(t){return function(n,r){if(!(_.isEqual(n,r)&&(t.lastNewValue!==n||t.lastOldValue!==r))){t.lastNewValue=n;t.lastOldValue=r;if(t.doINeedToWipe(n)){return t.rebuildAll(e,true,true)}else{return t.createChildScopes(false)}}}}(this))};s.prototype.doINeedToWipe=function(e){var t;t=e!=null?e.length===0:true;return this.plurals.length>0&&t};s.prototype.rebuildAll=function(e,t,n){return this.onDestroy(n).then(function(e){return function(){if(t){return e.createChildScopes()}}}(this))};s.prototype.onDestroy=function(e){return f.promiseLock(this,l.promiseTypes["delete"],void 0,void 0,function(t){return function(){return f.each(t.plurals.values(),function(e){return e.destroy(true)},false).then(function(){if(e){delete t.plurals}return t.plurals=new u})}}(this))};s.prototype.watchDestroy=function(e){return e.$on("$destroy",function(t){return function(){return t.rebuildAll(e,false,true)}}(this))};s.prototype.watchOurScope=function(e){return _.each(this.scopePropNames,function(t){return function(n){var r;r=n+"Key";t[r]=typeof e[n]==="function"?e[n]():e[n];return t.watch(e,n,r)}}(this))};s.prototype.createChildScopes=function(e){if(e==null){e=true}if(t.isUndefined(this.scope.models)){this.$log.error("No models to create Polylines from! I Need direct models!");return}if(this.gMap!=null){if(this.scope.models!=null){this.watchIdKey(this.scope);if(e){return this.createAllNew(this.scope,false)}else{return this.pieceMeal(this.scope,false)}}}};s.prototype.watchIdKey=function(e){this.setIdKey(e);return e.$watch("idKey",function(t){return function(n,r){if(n!==r&&n==null){t.idKey=n;return t.rebuildAll(e,true,true)}}}(this))};s.prototype.createAllNew=function(e,t){var n;if(t==null){t=false}this.models=e.models;if(this.firstTime){this.watchModels(e);this.watchDestroy(e)}if(this.didQueueInitPromise(this,e)){return}n=null;return f.promiseLock(this,l.promiseTypes.create,"createAllNew",function(e){return n=e},function(t){return function(){return f.each(e.models,function(e){t.createChild(e,t.gMap);if(n){i.debug("createNew should fall through safely")}return n}).then(function(){return t.firstTime=false})}}(this))};s.prototype.pieceMeal=function(e,t){var n,r;if(t==null){t=true}if(e.$$destroyed){return}n=null;r=null;this.models=e.models;if(e!=null&&e.models!=null&&e.models.length>0&&this.plurals.length>0){return f.promiseLock(this,l.promiseTypes.update,"pieceMeal",function(e){return n=e},function(t){return function(){return l.promise(function(){return t.figureOutState(t.idKey,e,t.plurals,t.modelKeyComparison)}).then(function(e){r=e;return f.each(r.removals,function(e){var r;r=t.plurals.get(e);if(r!=null){r.destroy();t.plurals.remove(e);return n}})}).then(function(){return f.each(r.adds,function(e){if(n){i.debug("pieceMeal should fall through safely")}t.createChild(e,t.gMap);return n})})}}(this))}else{this.inProgress=false;return this.rebuildAll(this.scope,true,true)}};s.prototype.createChild=function(e,t){var n,r;r=this.scope.$new(false);this.setChildScope(r,e);r.$watch("model",function(e){return function(t,n){if(t!==n){return e.setChildScope(r,t)}}}(this),true);r["static"]=this.scope["static"];n=new a(r,this.attrs,t,this.defaults,e);if(e[this.idKey]==null){this.$log.error("Polyline model has no id to assign a child to.\nThis is required for performance. Please assign id,\nor redirect id to a different key.");return}this.plurals.put(e[this.idKey],n);return n};s.prototype.setChildScope=function(e,t){_.each(this.scopePropNames,function(n){return function(r){var i,s;i=r+"Key";s=n[i]==="self"?t:t[n[i]];if(s!==e[r]){return e[r]=s}}}(this));return e.model=t};s.prototype.modelKeyComparison=function(e,t){return _.isEqual(this.evalModelHandle(e,this.scope.path),this.evalModelHandle(t,this.scope.path))};return s}(s)}])}).call(this);(function(){var e={}.hasOwnProperty,n=function(t,n){function i(){this.constructor=t}for(var r in n){if(e.call(n,r))t[r]=n[r]}i.prototype=n.prototype;t.prototype=new i;t.__super__=n.prototype;return t};t.module("uiGmapgoogle-maps.directives.api.models.parent").factory("uiGmapRectangleParentModel",["uiGmapLogger","uiGmapGmapUtil","uiGmapEventsHelper","uiGmapRectangleOptionsBuilder",function(e,t,r,i){var s;return s=function(i){function s(t,n,r,i,s){var o,u,a,f,l,c,h,p,d,v,m;this.scope=t;this.attrs=r;this.map=i;this.DEFAULTS=s;o=void 0;f=false;p=[];h=void 0;l=function(e){return function(){if(e.isTrue(r.fit)){return e.fitMapBounds(e.map,o)}}}(this);a=function(n){return function(){var r,i;if(t.bounds!=null&&((r=t.bounds)!=null?r.sw:void 0)!=null&&((i=t.bounds)!=null?i.ne:void 0)!=null&&n.validateBoundPoints(t.bounds)){o=n.convertBoundPoints(t.bounds);return e.info("new new bounds created: "+d)}else if(t.bounds.getNorthEast!=null&&t.bounds.getSouthWest!=null){return o=t.bounds}else{if(typeof bound!=="undefined"&&bound!==null){return e.error("Invalid bounds for newValue: "+JSON.stringify(t.bounds))}}}}(this);a();d=new google.maps.Rectangle(this.buildOpts(o));e.info("rectangle created: "+d);v=false;m=function(e){return function(){var e,n,r;e=d.getBounds();n=e.getNorthEast();r=e.getSouthWest();if(v){return}return t.$evalAsync(function(t){if(t.bounds!=null&&t.bounds.sw!=null&&t.bounds.ne!=null){t.bounds.ne={latitude:n.lat(),longitude:n.lng()};t.bounds.sw={latitude:r.lat(),longitude:r.lng()}}if(t.bounds.getNorthEast!=null&&t.bounds.getSouthWest!=null){return t.bounds=e}})}}(this);c=function(e){return function(){l();e.removeEvents(p);p.push(google.maps.event.addListener(d,"dragstart",function(){return f=true}));p.push(google.maps.event.addListener(d,"dragend",function(){f=false;return m()}));return p.push(google.maps.event.addListener(d,"bounds_changed",function(){if(f){return}return m()}))}}(this);u=function(e){return function(){e.removeEvents(p);if(h!=null){e.removeEvents(h)}return d.setMap(null)}}(this);if(o!=null){c()}t.$watch("bounds",function(e,t){var n;if(_.isEqual(e,t)&&o!=null||f){return}v=true;if(e==null){u();return}if(o==null){n=true}else{l()}a();d.setBounds(o);v=false;if(n&&o!=null){return c()}},true);this.setMyOptions=function(e){return function(t,n){if(!_.isEqual(t,n)){if(o!=null&&t!=null){return d.setOptions(e.buildOpts(o))}}}}(this);this.props.push("bounds");this.watchProps(this.props);if(r.events!=null){h=this.setEvents(d,t,t);t.$watch("events",function(e){return function(n,r){if(!_.isEqual(n,r)){if(h!=null){e.removeEvents(h)}return h=e.setEvents(d,t,t)}}}(this))}t.$on("$destroy",function(e){return function(){return u()}}(this));e.info(this)}n(s,i);s.include(t);s.include(r);return s}(i)}])}).call(this);(function(){var e=function(e,t){return function(){return e.apply(t,arguments)}},n={}.hasOwnProperty,r=function(e,t){function i(){this.constructor=e}for(var r in t){if(n.call(t,r))e[r]=t[r]}i.prototype=t.prototype;e.prototype=new i;e.__super__=t.prototype;return e};t.module("uiGmapgoogle-maps.directives.api.models.parent").factory("uiGmapSearchBoxParentModel",["uiGmapBaseObject","uiGmapLogger","uiGmapEventsHelper","$timeout","$http","$templateCache",function(n,i,s,o,u,a){var f;f=function(n){function o(n,r,s,o,u,a,f){var l;this.scope=n;this.element=r;this.attrs=s;this.gMap=o;this.ctrlPosition=u;this.template=a;this.$log=f!=null?f:i;this.setVisibility=e(this.setVisibility,this);this.getBounds=e(this.getBounds,this);this.setBounds=e(this.setBounds,this);this.createSearchBox=e(this.createSearchBox,this);this.addToParentDiv=e(this.addToParentDiv,this);this.addAsMapControl=e(this.addAsMapControl,this);this.init=e(this.init,this);if(this.attrs.template==null){this.$log.error("template attribute for the search-box directive is mandatory. Places Search Box creation aborted!!");return}if(t.isUndefined(this.scope.options)){this.scope.options={};this.scope.options.visible=true}if(t.isUndefined(this.scope.options.visible)){this.scope.options.visible=true}this.visible=n.options.visible;l=t.element("<div></div>");l.append(this.template);this.input=l.find("input")[0];this.init()}r(o,n);o.include(s);o.prototype.init=function(){this.createSearchBox();this.scope.$watch("options",function(e){return function(n,r){if(t.isObject(n)){if(n.bounds!=null){e.setBounds(n.bounds)}if(n.visible!=null){if(e.visible!==n.visible){return e.setVisibility(n.visible)}}}}}(this),true);if(this.attrs.parentdiv!=null){this.addToParentDiv()}else{this.addAsMapControl()}this.listener=google.maps.event.addListener(this.searchBox,"places_changed",function(e){return function(){return e.places=e.searchBox.getPlaces()}}(this));this.listeners=this.setEvents(this.searchBox,this.scope,this.scope);this.$log.info(this);return this.scope.$on("$destroy",function(e){return function(){return e.searchBox=null}}(this))};o.prototype.addAsMapControl=function(){return this.gMap.controls[google.maps.ControlPosition[this.ctrlPosition]].push(this.input)};o.prototype.addToParentDiv=function(){this.parentDiv=t.element(document.getElementById(this.scope.parentdiv));return this.parentDiv.append(this.input)};o.prototype.createSearchBox=function(){return this.searchBox=new google.maps.places.SearchBox(this.input,this.scope.options)};o.prototype.setBounds=function(e){if(t.isUndefined(e.isEmpty)){this.$log.error("Error: SearchBoxParentModel setBounds. Bounds not an instance of LatLngBounds.")}else{if(e.isEmpty()===false){if(this.searchBox!=null){return this.searchBox.setBounds(e)}}}};o.prototype.getBounds=function(){return this.searchBox.getBounds()};o.prototype.setVisibility=function(e){if(this.attrs.parentdiv!=null){if(e===false){this.parentDiv.addClass("ng-hide")}else{this.parentDiv.removeClass("ng-hide")}}else{if(e===false){this.gMap.controls[google.maps.ControlPosition[this.ctrlPosition]].clear()}else{this.gMap.controls[google.maps.ControlPosition[this.ctrlPosition]].push(this.input)}}return this.visible=e};return o}(n);return f}])}).call(this);(function(){var e=function(e,t){return function(){return e.apply(t,arguments)}},n={}.hasOwnProperty,r=function(e,t){function i(){this.constructor=e}for(var r in t){if(n.call(t,r))e[r]=t[r]}i.prototype=t.prototype;e.prototype=new i;e.__super__=t.prototype;return e};t.module("uiGmapgoogle-maps.directives.api.models.parent").factory("uiGmapWindowsParentModel",["uiGmapIWindowParentModel","uiGmapModelsWatcher","uiGmapPropMap","uiGmapWindowChildModel","uiGmapLinked","uiGmap_async","uiGmapLogger","$timeout","$compile","$http","$templateCache","$interpolate","uiGmapPromise",function(n,i,s,o,u,a,f,l,c,h,p,d,v){var m;m=function(n){function m(t,n,r,i,o,a){this.gMap=o;this.markersScope=a;this.interpolateContent=e(this.interpolateContent,this);this.setChildScope=e(this.setChildScope,this);this.createWindow=e(this.createWindow,this);this.setContentKeys=e(this.setContentKeys,this);this.pieceMealWindows=e(this.pieceMealWindows,this);this.createAllNewWindows=e(this.createAllNewWindows,this);this.watchIdKey=e(this.watchIdKey,this);this.createChildScopesWindows=e(this.createChildScopesWindows,this);this.watchOurScope=e(this.watchOurScope,this);this.watchDestroy=e(this.watchDestroy,this);this.onDestroy=e(this.onDestroy,this);this.rebuildAll=e(this.rebuildAll,this);this.doINeedToWipe=e(this.doINeedToWipe,this);this.watchModels=e(this.watchModels,this);this.go=e(this.go,this);m.__super__.constructor.call(this,t,n,r,i,l,c,h,p);this.windows=new s;this.scopePropNames=["coords","template","templateUrl","templateParameter","isIconVisibleOnClick","closeClick","options","show"];_.each(this.scopePropNames,function(e){return function(t){return e[t+"Key"]=void 0}}(this));this.linked=new u(t,n,r,i);this.models=void 0;this.contentKeys=void 0;this.isIconVisibleOnClick=void 0;this.firstTime=true;this.firstWatchModels=true;this.$log.info(self);this.parentScope=void 0;this.go(t)}r(m,n);m.include(i);m.prototype.go=function(e){this.watchOurScope(e);this.doRebuildAll=this.scope.doRebuildAll!=null?this.scope.doRebuildAll:false;e.$watch("doRebuildAll",function(e){return function(t,n){if(t!==n){return e.doRebuildAll=t}}}(this));return this.createChildScopesWindows()};m.prototype.watchModels=function(e){var t;t=this.markersScope!=null?"markerModelsUpdate":"models";return e.$watch(t,function(t){return function(n,r){var i;if(!_.isEqual(n,r)||t.firstWatchModels){t.firstWatchModels=false;if(t.doRebuildAll||t.doINeedToWipe(e.models)){return t.rebuildAll(e,true,true)}else{i=t.windows.length===0;if(t.existingPieces!=null){return _.last(t.existingPieces._content).then(function(){return t.createChildScopesWindows(i)})}else{return t.createChildScopesWindows(i)}}}}}(this),true)};m.prototype.doINeedToWipe=function(e){var t;t=e!=null?e.length===0:true;return this.windows.length>0&&t};m.prototype.rebuildAll=function(e,t,n){return this.onDestroy(n).then(function(e){return function(){if(t){return e.createChildScopesWindows()}}}(this))};m.prototype.onDestroy=function(e){return a.promiseLock(this,v.promiseTypes["delete"],void 0,void 0,function(t){return function(){return a.each(t.windows.values(),function(e){return e.destroy()},false).then(function(){if(e){delete t.windows}return t.windows=new s})}}(this))};m.prototype.watchDestroy=function(e){return e.$on("$destroy",function(t){return function(){t.firstWatchModels=true;t.firstTime=true;return t.rebuildAll(e,false,true)}}(this))};m.prototype.watchOurScope=function(e){return _.each(this.scopePropNames,function(t){return function(n){var r;r=n+"Key";return t[r]=typeof e[n]==="function"?e[n]():e[n]}}(this))};m.prototype.createChildScopesWindows=function(e){var n,r,i;if(e==null){e=true}this.isIconVisibleOnClick=true;if(t.isDefined(this.linked.attrs.isiconvisibleonclick)){this.isIconVisibleOnClick=this.linked.scope.isIconVisibleOnClick}n=t.isUndefined(this.linked.scope.models);if(n&&(this.markersScope===void 0||((r=this.markersScope)!=null?r.markerModels:void 0)===void 0||((i=this.markersScope)!=null?i.models:void 0)===void 0)){this.$log.error("No models to create windows from! Need direct models or models derived from markers!");return}if(this.gMap!=null){if(this.linked.scope.models!=null){this.watchIdKey(this.linked.scope);if(e){return this.createAllNewWindows(this.linked.scope,false)}else{return this.pieceMealWindows(this.linked.scope,false)}}else{this.parentScope=this.markersScope;this.watchIdKey(this.parentScope);if(e){return this.createAllNewWindows(this.markersScope,true,"markerModels",false)}else{return this.pieceMealWindows(this.markersScope,true,"markerModels",false)}}}};m.prototype.watchIdKey=function(e){this.setIdKey(e);return e.$watch("idKey",function(t){return function(n,r){if(n!==r&&n==null){t.idKey=n;return t.rebuildAll(e,true,true)}}}(this))};m.prototype.createAllNewWindows=function(e,t,n,r){var i;if(n==null){n="models"}if(r==null){r=false}this.models=e.models;if(this.firstTime){this.watchModels(e);this.watchDestroy(e)}this.setContentKeys(e.models);if(this.didQueueInitPromise(this,e)){return}i=null;return a.promiseLock(this,v.promiseTypes.create,"createAllNewWindows",function(e){return i=e},function(r){return function(){return a.each(e.models,function(s){var o,u;o=t?(u=r.getItem(e,n,s[r.idKey]))!=null?u.gMarker:void 0:void 0;if(!i){if(!o&&r.markersScope){f.error("Unable to get gMarker from markersScope!")}r.createWindow(s,o,r.gMap)}return i},a.chunkSizeFrom(e.chunk)).then(function(){return r.firstTime=false})}}(this))};m.prototype.pieceMealWindows=function(e,t,n,r){var i,s;if(n==null){n="models"}if(r==null){r=true}if(e.$$destroyed){return}i=null;s=null;this.models=e.models;if(e!=null&&e.models!=null&&e.models.length>0&&this.windows.length>0){return a.promiseLock(this,v.promiseTypes.update,"pieceMeal",function(e){return i=e},function(t){return function(){return v.promise(function(){return t.figureOutState(t.idKey,e,t.windows,t.modelKeyComparison)}).then(function(n){s=n;return a.each(s.removals,function(e){if(e!=null){t.windows.remove(e.id);if(e.destroy!=null){e.destroy(true)}return i}},a.chunkSizeFrom(e.chunk))}).then(function(){return a.each(s.adds,function(r){var s,o;s=(o=t.getItem(e,n,r[t.idKey]))!=null?o.gMarker:void 0;if(!s){throw"Gmarker undefined"}t.createWindow(r,s,t.gMap);return i})})}}(this))}else{f.debug("pieceMealWindows: rebuildAll");return this.rebuildAll(this.scope,true,true)}};m.prototype.setContentKeys=function(e){if(e.length>0){return this.contentKeys=Object.keys(e[0])}};m.prototype.createWindow=function(e,t,n){var r,i,s,u,a,f;i=this.linked.scope.$new(false);this.setChildScope(i,e);i.$watch("model",function(e){return function(t,n){if(t!==n){return e.setChildScope(i,t)}}}(this),true);s={html:function(t){return function(){return t.interpolateContent(t.linked.element.html(),e)}}(this)};this.DEFAULTS=this.scopeOrModelVal(this.optionsKey,this.scope,e)||{};u=this.createWindowOptions(t,i,s.html(),this.DEFAULTS);r=new o(e,i,u,this.isIconVisibleOnClick,n,(a=this.markersScope)!=null?(f=a.markerModels.get(e[this.idKey]))!=null?f.scope:void 0:void 0,s,false,true);if(e[this.idKey]==null){this.$log.error("Window model has no id to assign a child to. This is required for performance. Please assign id, or redirect id to a different key.");return}this.windows.put(e[this.idKey],r);return r};m.prototype.setChildScope=function(e,t){_.each(this.scopePropNames,function(n){return function(r){var i,s;i=r+"Key";s=n[i]==="self"?t:t[n[i]];if(s!==e[r]){return e[r]=s}}}(this));return e.model=t};m.prototype.interpolateContent=function(e,t){var n,r,i,s,o,u;if(this.contentKeys===void 0||this.contentKeys.length===0){return}n=d(e);r={};u=this.contentKeys;for(s=0,o=u.length;s<o;s++){i=u[s];r[i]=t[i]}return n(r)};return m}(n);return m}])}).call(this);(function(){t.module("uiGmapgoogle-maps.directives.api").factory("uiGmapCircle",["uiGmapICircle","uiGmapCircleParentModel",function(e,t){return _.extend(e,{link:function(e,n,r,i){return i.getScope().deferred.promise.then(function(i){return function(i){return new t(e,n,r,i)}}(this))}})}])}).call(this);(function(){var e=function(e,t){return function(){return e.apply(t,arguments)}},n={}.hasOwnProperty,r=function(e,t){function i(){this.constructor=e}for(var r in t){if(n.call(t,r))e[r]=t[r]}i.prototype=t.prototype;e.prototype=new i;e.__super__=t.prototype;return e};t.module("uiGmapgoogle-maps.directives.api").factory("uiGmapControl",["uiGmapIControl","$http","$templateCache","$compile","$controller","uiGmapGoogleMapApi",function(n,i,s,o,u,a){var f;return f=function(f){function l(){this.link=e(this.link,this);l.__super__.constructor.call(this)}r(l,f);l.prototype.link=function(e,r,f,l){return a.then(function(r){return function(a){var f,c;if(t.isUndefined(e.template)){r.$log.error("mapControl: could not find a valid template property");return}f=t.isDefined(e.index&&!isNaN(parseInt(e.index)))?parseInt(e.index):void 0;c=t.isDefined(e.position)?e.position.toUpperCase().replace(/-/g,"_"):"TOP_CENTER";if(!a.ControlPosition[c]){r.$log.error("mapControl: invalid position property");return}return n.mapPromise(e,l).then(function(n){var a,l;a=void 0;l=t.element("<div></div>");return i.get(e.template,{cache:s}).success(function(n){var r,i;i=e.$new();l.append(n);if(t.isDefined(e.controller)){r=u(e.controller,{$scope:i});l.children().data("$ngControllerController",r)}a=o(l.children())(i);if(f){return a[0].index=f}}).error(function(e){return r.$log.error("mapControl: template could not be found")}).then(function(){return n.controls[google.maps.ControlPosition[c]].push(a[0])})})}}(this))};return l}(n)}])}).call(this);(function(){t.module("uiGmapgoogle-maps.directives.api").service("uiGmapDragZoom",["uiGmapCtrlHandle","uiGmapPropertyAction",function(e,t){return{restrict:"EMA",transclude:true,template:'<div class="angular-google-map-dragzoom" ng-transclude style="display: none"></div>',require:"^"+"uiGmapGoogleMap",scope:{keyboardkey:"=",options:"=",spec:"="},controller:["$scope","$element",function(t,n){t.ctrlType="uiGmapDragZoom";return _.extend(this,e.handle(t,n))}],link:function(n,r,i,s){return e.mapPromise(n,s).then(function(e){var r,i,s;r=function(t){e.enableKeyDragZoom(t);if(n.spec){return n.spec.enableKeyDragZoom(t)}};i=new t(function(e,t){if(t){return r({key:t})}else{return r()}});s=new t(function(e,t){if(t){return r(t)}});n.$watch("keyboardkey",i.sic);i.sic(n.keyboardkey);n.$watch("options",s.sic);return s.sic(n.options)})}}}])}).call(this);(function(){t.module("uiGmapgoogle-maps.directives.api").factory("uiGmapDrawingManager",["uiGmapIDrawingManager","uiGmapDrawingManagerParentModel",function(e,t){return _.extend(e,{link:function(e,n,r,i){return i.getScope().deferred.promise.then(function(i){return new t(e,n,r,i)})}})}])}).call(this);(function(){var e=function(e,t){return function(){return e.apply(t,arguments)}},n={}.hasOwnProperty,r=function(e,t){function i(){this.constructor=e}for(var r in t){if(n.call(t,r))e[r]=t[r]}i.prototype=t.prototype;e.prototype=new i;e.__super__=t.prototype;return e};t.module("uiGmapgoogle-maps.directives.api").factory("uiGmapApiFreeDrawPolygons",["uiGmapLogger","uiGmapBaseObject","uiGmapCtrlHandle","uiGmapDrawFreeHandChildModel","uiGmapLodash",function(t,n,i,s,o){var u;return u=function(n){function u(){this.link=e(this.link,this);return u.__super__.constructor.apply(this,arguments)}r(u,n);u.include(i);u.prototype.restrict="EMA";u.prototype.replace=true;u.prototype.require="^"+"uiGmapGoogleMap";u.prototype.scope={polygons:"=",draw:"=",revertmapoptions:"="};u.prototype.link=function(e,n,r,i){return this.mapPromise(e,i).then(function(n){return function(n){var r,i;if(!e.polygons){return t.error("No polygons to bind to!")}if(!_.isArray(e.polygons)){return t.error("Free Draw Polygons must be of type Array!")}r=new s(n,e.revertmapoptions);i=void 0;return e.draw=function(){if(typeof i==="function"){i()}return r.engage(e.polygons).then(function(){var t;t=true;return i=e.$watchCollection("polygons",function(e,n){var r;if(t||e===n){t=false;return}r=o.differenceObjects(n,e);return r.forEach(function(e){return e.setMap(null)})})})}}}(this))};return u}(n)}])}).call(this);(function(){t.module("uiGmapgoogle-maps.directives.api").service("uiGmapICircle",[function(){var e;e={};return{restrict:"EA",replace:true,require:"^"+"uiGmapGoogleMap",scope:{center:"=center",radius:"=radius",stroke:"=stroke",fill:"=fill",clickable:"=",draggable:"=",editable:"=",geodesic:"=",icons:"=icons",visible:"=",events:"="}}}])}).call(this);(function(){var e={}.hasOwnProperty,n=function(t,n){function i(){this.constructor=t}for(var r in n){if(e.call(n,r))t[r]=n[r]}i.prototype=n.prototype;t.prototype=new i;t.__super__=n.prototype;return t};t.module("uiGmapgoogle-maps.directives.api").factory("uiGmapIControl",["uiGmapBaseObject","uiGmapLogger","uiGmapCtrlHandle",function(e,t,r){var i;return i=function(e){function i(){this.restrict="EA";this.replace=true;this.require="^"+"uiGmapGoogleMap";this.scope={template:"@template",position:"@position",controller:"@controller",index:"@index"};this.$log=t}n(i,e);i.extend(r);i.prototype.link=function(e,t,n,r){throw new Exception("Not implemented!!")};return i}(e)}])}).call(this);(function(){t.module("uiGmapgoogle-maps.directives.api").service("uiGmapIDrawingManager",[function(){return{restrict:"EA",replace:true,require:"^"+"uiGmapGoogleMap",scope:{"static":"@",control:"=",options:"=",events:"="}}}])}).call(this);(function(){var e={}.hasOwnProperty,n=function(t,n){function i(){this.constructor=t}for(var r in n){if(e.call(n,r))t[r]=n[r]}i.prototype=n.prototype;t.prototype=new i;t.__super__=n.prototype;return t};t.module("uiGmapgoogle-maps.directives.api").factory("uiGmapIMarker",["uiGmapBaseObject","uiGmapCtrlHandle",function(e,t){var r;return r=function(e){function r(){this.restrict="EMA";this.require="^"+"uiGmapGoogleMap";this.priority=-1;this.transclude=true;this.replace=true;this.scope=_.extend(this.scope||{},r.scopeKeys)}n(r,e);r.scopeKeys={coords:"=coords",icon:"=icon",click:"&click",options:"=options",events:"=events",fit:"=fit",idKey:"=idkey",control:"=control"};r.keys=_.keys(r.scopeKeys);r.extend(t);return r}(e)}])}).call(this);(function(){var e={}.hasOwnProperty,n=function(t,n){function i(){this.constructor=t}for(var r in n){if(e.call(n,r))t[r]=n[r]}i.prototype=n.prototype;t.prototype=new i;t.__super__=n.prototype;return t};t.module("uiGmapgoogle-maps.directives.api").factory("uiGmapIPolygon",["uiGmapGmapUtil","uiGmapBaseObject","uiGmapLogger","uiGmapCtrlHandle",function(e,t,r,i){var s;return s=function(t){function s(){}n(s,t);s.include(e);s.extend(i);s.prototype.restrict="EMA";s.prototype.replace=true;s.prototype.require="^"+"uiGmapGoogleMap";s.prototype.scope={path:"=path",stroke:"=stroke",clickable:"=",draggable:"=",editable:"=",geodesic:"=",fill:"=",icons:"=icons",visible:"=","static":"=",events:"=",zIndex:"=zindex",fit:"=",control:"=control"};s.prototype.DEFAULTS={};s.prototype.$log=r;return s}(t)}])}).call(this);(function(){var e={}.hasOwnProperty,n=function(t,n){function i(){this.constructor=t}for(var r in n){if(e.call(n,r))t[r]=n[r]}i.prototype=n.prototype;t.prototype=new i;t.__super__=n.prototype;return t};t.module("uiGmapgoogle-maps.directives.api").factory("uiGmapIPolyline",["uiGmapGmapUtil","uiGmapBaseObject","uiGmapLogger","uiGmapCtrlHandle",function(e,t,r,i){var s;return s=function(t){function s(){}n(s,t);s.include(e);s.extend(i);s.prototype.restrict="EMA";s.prototype.replace=true;s.prototype.require="^"+"uiGmapGoogleMap";s.prototype.scope={path:"=",stroke:"=",clickable:"=",draggable:"=",editable:"=",geodesic:"=",icons:"=",visible:"=","static":"=",fit:"=",events:"="};s.prototype.DEFAULTS={};s.prototype.$log=r;return s}(t)}])}).call(this);(function(){t.module("uiGmapgoogle-maps.directives.api").service("uiGmapIRectangle",[function(){"use strict";var e;e={};return{restrict:"EMA",require:"^"+"uiGmapGoogleMap",replace:true,scope:{bounds:"=",stroke:"=",clickable:"=",draggable:"=",editable:"=",fill:"=",visible:"=",events:"="}}}])}).call(this);(function(){var e={}.hasOwnProperty,n=function(t,n){function i(){this.constructor=t}for(var r in n){if(e.call(n,r))t[r]=n[r]}i.prototype=n.prototype;t.prototype=new i;t.__super__=n.prototype;return t};t.module("uiGmapgoogle-maps.directives.api").factory("uiGmapIWindow",["uiGmapBaseObject","uiGmapChildEvents","uiGmapCtrlHandle",function(e,t,r){var i;return i=function(e){function i(){this.restrict="EMA";this.template=void 0;this.transclude=true;this.priority=-100;this.require="^"+"uiGmapGoogleMap";this.replace=true;this.scope={coords:"=coords",template:"=template",templateUrl:"=templateurl",templateParameter:"=templateparameter",isIconVisibleOnClick:"=isiconvisibleonclick",closeClick:"&closeclick",options:"=options",control:"=control",show:"=show"}}n(i,e);i.include(t);i.extend(r);return i}(e)}])}).call(this);(function(){var e=function(e,t){return function(){return e.apply(t,arguments)}},r={}.hasOwnProperty,i=function(e,t){function i(){this.constructor=e}for(var n in t){if(r.call(t,n))e[n]=t[n]}i.prototype=t.prototype;e.prototype=new i;e.__super__=t.prototype;return e};t.module("uiGmapgoogle-maps.directives.api").factory("uiGmapMap",["$timeout","$q","uiGmapLogger","uiGmapGmapUtil","uiGmapBaseObject","uiGmapCtrlHandle","uiGmapIsReady","uiGmapuuid","uiGmapExtendGWin","uiGmapExtendMarkerClusterer","uiGmapGoogleMapsUtilV3","uiGmapGoogleMapApi","uiGmapEventsHelper",function(r,s,o,u,a,f,l,c,h,p,d,v,m){"use strict";var g,y,b;g=void 0;b=[d,h,p];return y=function(s){function a(){this.link=e(this.link,this);var t,n;t=function(e){var t,n;n=void 0;e.$on("$destroy",function(){return l.reset()});t=f.handle(e);e.ctrlType="Map";e.deferred.promise.then(function(){return b.forEach(function(e){return e.init()})});t.getMap=function(){return e.map};n=_.extend(this,t);return n};this.controller=["$scope",t];n=this}i(a,s);a.include(u);a.prototype.restrict="EMA";a.prototype.transclude=true;a.prototype.replace=false;a.prototype.template='<div class="angular-google-map"><div class="angular-google-map-container"></div><div ng-transclude style="display: none"></div></div>';a.prototype.scope={center:"=",zoom:"=",dragging:"=",control:"=",options:"=",events:"=",eventOpts:"=",styles:"=",bounds:"=",update:"="};a.prototype.link=function(e,i,s){var u,a;u=[];e.$on("$destroy",function(){return m.removeEvents(u)});e.idleAndZoomChanged=false;if(e.center==null){a=e.$watch("center",function(t){return function(){if(!e.center){return}a();return t.link(e,i,s)}}(this));return}return v.then(function(a){return function(f){var h,p,d,v,y,b,w,E,S,x,T,N,C,k,L,A,O,M;g={mapTypeId:f.MapTypeId.ROADMAP};L=l.spawn();x=function(){return L.deferred.resolve({instance:L.instance,map:O})};if(!a.validateCoords(e.center)){o.error("angular-google-maps: could not find a valid center property");return}if(!t.isDefined(e.zoom)){o.error("angular-google-maps: map zoom property not set");return}v=t.element(i);v.addClass("angular-google-map");S={options:{}};if(s.options){S.options=e.options}if(s.styles){S.styles=e.styles}if(s.type){A=s.type.toUpperCase();if(google.maps.MapTypeId.hasOwnProperty(A)){S.mapTypeId=google.maps.MapTypeId[s.type.toUpperCase()]}else{o.error("angular-google-maps: invalid map type '"+s.type+"'")}}w=t.extend({},g,S,{center:a.getCoords(e.center),zoom:e.zoom,bounds:e.bounds});O=new google.maps.Map(v.find("div")[1],w);O["uiGmap_id"]=c.generate();d=false;u.push(google.maps.event.addListenerOnce(O,"idle",function(){e.deferred.resolve(O);return x()}));p=s.events&&((M=e.events)!=null?M.blacklist:void 0)!=null?e.events.blacklist:[];if(_.isString(p)){p=[p]}E=function(t,n,r){if(!_.contains(p,t)){if(r){r()}return u.push(google.maps.event.addListener(O,t,function(){var t;if(!((t=e.update)!=null?t.lazy:void 0)){return n()}}))}};if(!_.contains(p,"all")){E("dragstart",function(){d=true;return e.$evalAsync(function(e){if(e.dragging!=null){return e.dragging=d}})});E("dragend",function(){d=false;return e.$evalAsync(function(e){if(e.dragging!=null){return e.dragging=d}})});E("drag",function(){var n,i,s,o;n=O.center;return r(function(){var r;r=e;if(t.isDefined(r.center.type)){r.center.coordinates[1]=n.lat();return r.center.coordinates[0]=n.lng()}else{r.center.latitude=n.lat();return r.center.longitude=n.lng()}},(i=e.eventOpts)!=null?(s=i.debounce)!=null?(o=s.debounce)!=null?o.dragMs:void 0:void 0:void 0)});k=false;C=false;E("zoom_changed",function(){var t,n;if(k){return}if(e.zoom!==O.zoom){C=true;return r(function(){e.zoom=O.zoom;return C=false},(t=e.eventOpts)!=null?(n=t.debounce)!=null?n.zoomMs:void 0:void 0)}});N=false;T=false;E("center_changed",function(){var n,i,s;n=O.center;if(N){return}T=true;return r(function(){var r;r=e;if(!O.dragging){if(t.isDefined(r.center.type)){if(r.center.coordinates[1]!==n.lat()){r.center.coordinates[1]=n.lat()}if(r.center.coordinates[0]!==n.lng()){r.center.coordinates[0]=n.lng()}}else{if(r.center.latitude!==n.lat()){r.center.latitude=n.lat()}if(r.center.longitude!==n.lng()){r.center.longitude=n.lng()}}}return T=false},(i=e.eventOpts)!=null?(s=i.debounce)!=null?s.centerMs:void 0:void 0)});E("idle",function(){var r,i,s;r=O.getBounds();i=r.getNorthEast();s=r.getSouthWest();return e.$evalAsync(function(r){var o;o=O.center;if(t.isDefined(r.center.type)){if(r.center.coordinates[1]!==o.lat()){r.center.coordinates[1]=o.lat()}if(r.center.coordinates[0]!==o.lng()){r.center.coordinates[0]=o.lng()}}else{if(r.center.latitude!==o.lat()){r.center.latitude=o.lat()}if(r.center.longitude!==o.lng()){r.center.longitude=o.lng()}}if(r.bounds!==null&&r.bounds!==n&&r.bounds!==void 0){r.bounds.northeast={latitude:i.lat(),longitude:i.lng()};r.bounds.southwest={latitude:s.lat(),longitude:s.lng()};r.zoom=O.zoom;return e.idleAndZoomChanged=!e.idleAndZoomChanged}})})}if(t.isDefined(e.events)&&e.events!==null&&t.isObject(e.events)){b=function(t){return function(){return e.events[t].apply(e,[O,t,arguments])}};h=[];for(y in e.events){if(e.events.hasOwnProperty(y)&&t.isFunction(e.events[y])){h.push(google.maps.event.addListener(O,y,b(y)))}}u.concat(h)}O.getOptions=function(){return w};e.map=O;if(s.control!=null&&e.control!=null){e.control.refresh=function(e){var t;if(O==null){return}google.maps.event.trigger(O,"resize");if((e!=null?e.latitude:void 0)!=null&&(e!=null?e.latitude:void 0)!=null){t=a.getCoords(e);if(a.isTrue(s.pan)){return O.panTo(t)}else{return O.setCenter(t)}}};e.control.getGMap=function(){return O};e.control.getMapOptions=function(){return w};e.control.getCustomEventListeners=function(){return h};e.control.removeEvents=function(e){return m.removeEvents(e)}}e.$watch("center",function(t,n){var r;if(t===n||T){return}r=a.getCoords(e.center);if(r.lat()===O.center.lat()&&r.lng()===O.center.lng()){return}N=true;if(!d){if(!a.validateCoords(t)){o.error("Invalid center for newValue: "+JSON.stringify(t))}if(a.isTrue(s.pan)&&e.zoom===O.zoom){O.panTo(r)}else{O.setCenter(r)}}return N=false},true);e.$watch("zoom",function(t,n){var i,s;if(_.isEqual(t,n)||O.getZoom()===e.zoom){return}k=true;return r(function(){O.setZoom(t);return k=false},((i=e.eventOpts)!=null?(s=i.debounce)!=null?s.zoomMs:void 0:void 0)+20,false)});e.$watch("bounds",function(e,t){var n,r,i;if(e===t){return}if(e.northeast.latitude==null||e.northeast.longitude==null||e.southwest.latitude==null||e.southwest.longitude==null){o.error("Invalid map bounds for new value: "+JSON.stringify(e));return}r=new google.maps.LatLng(e.northeast.latitude,e.northeast.longitude);i=new google.maps.LatLng(e.southwest.latitude,e.southwest.longitude);n=new google.maps.LatLngBounds(i,r);return O.fitBounds(n)});return["options","styles"].forEach(function(t){return e.$watch(t,function(e,t){var n;n=this.exp;if(_.isEqual(e,t)){return}S.options=e;if(O!=null){return O.setOptions(S)}})},true)}}(this))};return a}(a)}])}).call(this);(function(){var e=function(e,t){return function(){return e.apply(t,arguments)}},n={}.hasOwnProperty,r=function(e,t){function i(){this.constructor=e}for(var r in t){if(n.call(t,r))e[r]=t[r]}i.prototype=t.prototype;e.prototype=new i;e.__super__=t.prototype;return e};t.module("uiGmapgoogle-maps.directives.api").factory("uiGmapMarker",["uiGmapIMarker","uiGmapMarkerChildModel","uiGmapMarkerManager","uiGmapLogger",function(t,n,i,s){var o;return o=function(o){function u(){this.link=e(this.link,this);u.__super__.constructor.call(this);this.template='<span class="angular-google-map-marker" ng-transclude></span>';s.info(this)}r(u,o);u.prototype.controller=["$scope","$element",function(e,n){e.ctrlType="Marker";return _.extend(this,t.handle(e,n))}];u.prototype.link=function(e,r,s,o){var u;u=t.mapPromise(e,o);u.then(function(r){return function(r){var s,o,u,a,f,l;u=new i(r);a=_.object(t.keys,t.keys);f=new n(e,e,a,r,{},s=true,u,o=false,l=false);f.deferred.promise.then(function(t){return e.deferred.resolve(t)});if(e.control!=null){return e.control.getGMarkers=u.getGMarkers}}}(this));return e.$on("$destroy",function(e){return function(){var e;if(typeof e!=="undefined"&&e!==null){e.clear()}return e=null}}(this))};return u}(t)}])}).call(this);(function(){var e={}.hasOwnProperty,n=function(t,n){function i(){this.constructor=t}for(var r in n){if(e.call(n,r))t[r]=n[r]}i.prototype=n.prototype;t.prototype=new i;t.__super__=n.prototype;return t};t.module("uiGmapgoogle-maps.directives.api").factory("uiGmapMarkers",["uiGmapIMarker","uiGmapPlural","uiGmapMarkersParentModel","uiGmap_sync","uiGmapLogger",function(e,t,r,i,s){var o;return o=function(i){function o(){o.__super__.constructor.call(this);this.template='<span class="angular-google-map-markers" ng-transclude></span>';t.extend(this,{doRebuildAll:"=dorebuildall",doCluster:"=docluster",clusterOptions:"=clusteroptions",clusterEvents:"=clusterevents",modelsByRef:"=modelsbyref"});s.info(this)}n(o,i);o.prototype.controller=["$scope","$element",function(t,n){t.ctrlType="Markers";return _.extend(this,e.handle(t,n))}];o.prototype.link=function(t,n,i,s){var o,u;o=void 0;u=function(){if(t.control!=null){t.control.getGMarkers=function(){var e;return(e=o.gMarkerManager)!=null?e.getGMarkers():void 0};t.control.getChildMarkers=function(){return o.markerModels}}return t.deferred.resolve()};return e.mapPromise(t,s).then(function(e){var a;a=s.getScope();a.$watch("idleAndZoomChanged",function(){return _.defer(o.gMarkerManager.draw)});o=new r(t,n,i,e);return _.last(o.existingPieces._content).then(function(){return u()})})};return o}(e)}])}).call(this);(function(){t.module("uiGmapgoogle-maps.directives.api").factory("uiGmapPlural",[function(){return{extend:function(e,t){return _.extend(e.scope||{},t||{},{idKey:"=idkey",doRebuildAll:"=dorebuildall",models:"=models",chunk:"=chunk"})}}}])}).call(this);(function(){var e=function(e,t){return function(){return e.apply(t,arguments)}},n={}.hasOwnProperty,r=function(e,t){function i(){this.constructor=e}for(var r in t){if(n.call(t,r))e[r]=t[r]}i.prototype=t.prototype;e.prototype=new i;e.__super__=t.prototype;return e};t.module("uiGmapgoogle-maps.directives.api").factory("uiGmapPolygon",["uiGmapIPolygon","$timeout","uiGmaparray-sync","uiGmapPolygonChildModel",function(t,n,i,s){var o;return o=function(n){function i(){this.link=e(this.link,this);return i.__super__.constructor.apply(this,arguments)}r(i,n);i.prototype.link=function(e,n,r,i){var o,u;o=[];u=t.mapPromise(e,i);if(e.control!=null){e.control.getInstance=this;e.control.polygons=o;e.control.promise=u}return u.then(function(t){return function(n){return o.push(new s(e,r,n,t.DEFAULTS))}}(this))};return i}(t)}])}).call(this);(function(){var e=function(e,t){return function(){return e.apply(t,arguments)}},n={}.hasOwnProperty,r=function(e,t){function i(){this.constructor=e}for(var r in t){if(n.call(t,r))e[r]=t[r]}i.prototype=t.prototype;e.prototype=new i;e.__super__=t.prototype;return e};t.module("uiGmapgoogle-maps.directives.api").factory("uiGmapPolygons",["uiGmapIPolygon","$timeout","uiGmaparray-sync","uiGmapPolygonsParentModel","uiGmapPlural",function(n,i,s,o,u){var a;return a=function(n){function i(){this.link=e(this.link,this);i.__super__.constructor.call(this);u.extend(this);this.$log.info(this)}r(i,n);i.prototype.link=function(e,n,r,i){return i.getScope().deferred.promise.then(function(i){return function(s){var u;if(t.isUndefined(e.path)||e.path===null){i.$log.warn("polygons: no valid path attribute found")}if(!e.models){i.$log.warn("polygons: no models found to create from")}u=null;if(e.control!=null){e.control.updateModels=function(t){e.models=t;return u.createChildScopes(false)};e.control.newModels=function(t){e.models=t;return u.rebuildAll(e,true,true)};e.control.clean=function(){return u.rebuildAll(e,false,true)}}return u=new o(e,n,r,s,i.DEFAULTS)}}(this))};return i}(n)}])}).call(this);(function(){var e=function(e,t){return function(){return e.apply(t,arguments)}},n={}.hasOwnProperty,r=function(e,t){function i(){this.constructor=e}for(var r in t){if(n.call(t,r))e[r]=t[r]}i.prototype=t.prototype;e.prototype=new i;e.__super__=t.prototype;return e};t.module("uiGmapgoogle-maps.directives.api").factory("uiGmapPolyline",["uiGmapIPolyline","$timeout","uiGmaparray-sync","uiGmapPolylineChildModel",function(n,i,s,o){var u;return u=function(i){function s(){this.link=e(this.link,this);return s.__super__.constructor.apply(this,arguments)}r(s,i);s.prototype.link=function(e,r,i,s){return n.mapPromise(e,s).then(function(n){return function(r){if(t.isUndefined(e.path)||e.path===null||!n.validatePath(e.path)){n.$log.warn("polyline: no valid path attribute found")}return new o(e,i,r,n.DEFAULTS)}}(this))};return s}(n)}])}).call(this);(function(){var e=function(e,t){return function(){return e.apply(t,arguments)}},n={}.hasOwnProperty,r=function(e,t){function i(){this.constructor=e}for(var r in t){if(n.call(t,r))e[r]=t[r]}i.prototype=t.prototype;e.prototype=new i;e.__super__=t.prototype;return e};t.module("uiGmapgoogle-maps.directives.api").factory("uiGmapPolylines",["uiGmapIPolyline","$timeout","uiGmaparray-sync","uiGmapPolylinesParentModel",function(n,i,s,o){var u;return u=function(n){function i(){this.link=e(this.link,this);i.__super__.constructor.call(this);this.scope.idKey="=idkey";this.scope.models="=models";this.$log.info(this)}r(i,n);i.prototype.link=function(e,n,r,i){return i.getScope().deferred.promise.then(function(i){return function(s){if(t.isUndefined(e.path)||e.path===null){i.$log.warn("polylines: no valid path attribute found")}if(!e.models){i.$log.warn("polylines: no models found to create from")}return new o(e,n,r,s,i.DEFAULTS)}}(this))};return i}(n)}])}).call(this);(function(){t.module("uiGmapgoogle-maps.directives.api").factory("uiGmapRectangle",["uiGmapLogger","uiGmapGmapUtil","uiGmapIRectangle","uiGmapRectangleParentModel",function(e,t,n,r){return _.extend(n,{link:function(e,t,n,i){return i.getScope().deferred.promise.then(function(i){return function(i){return new r(e,t,n,i)}}(this))}})}])}).call(this);(function(){var e=function(e,t){return function(){return e.apply(t,arguments)}},n={}.hasOwnProperty,r=function(e,t){function i(){this.constructor=e}for(var r in t){if(n.call(t,r))e[r]=t[r]}i.prototype=t.prototype;e.prototype=new i;e.__super__=t.prototype;return e};t.module("uiGmapgoogle-maps.directives.api").factory("uiGmapWindow",["uiGmapIWindow","uiGmapGmapUtil","uiGmapWindowChildModel","uiGmapLodash","uiGmapLogger",function(n,i,s,o,u){var a;return a=function(a){function f(){this.link=e(this.link,this);f.__super__.constructor.call(this);this.require=["^"+"uiGmapGoogleMap","^?"+"uiGmapMarker"];this.template='<span class="angular-google-maps-window" ng-transclude></span>';u.debug(this);this.childWindows=[]}r(f,a);f.include(i);f.prototype.link=function(e,r,i,s){var o,u;o=s.length>1&&s[1]!=null?s[1]:void 0;u=o!=null?o.getScope():void 0;this.mapPromise=n.mapPromise(e,s[0]);return this.mapPromise.then(function(n){return function(s){var a;a=true;if(t.isDefined(i.isiconvisibleonclick)){a=e.isIconVisibleOnClick}if(!o){n.init(e,r,a,s);return}return u.deferred.promise.then(function(t){return n.init(e,r,a,s,u)})}}(this))};f.prototype.init=function(e,t,n,r,i){var u,a,f,l,c;a=e.options!=null?e.options:{};l=e!=null&&this.validateCoords(e.coords);if((i!=null?i["getGMarker"]:void 0)!=null){f=i.getGMarker()}c=l?this.createWindowOptions(f,e,t.html(),a):a;if(r!=null){u=new s({},e,c,n,r,i,t);this.childWindows.push(u);e.$on("$destroy",function(e){return function(){e.childWindows=o.withoutObjects(e.childWindows,[u],function(e,t){return e.scope.$id===t.scope.$id});return e.childWindows.length=0}}(this))}if(e.control!=null){e.control.getGWindows=function(e){return function(){return e.childWindows.map(function(e){return e.gWin})}}(this);e.control.getChildWindows=function(e){return function(){return e.childWindows}}(this);e.control.showWindow=function(e){return function(){return e.childWindows.map(function(e){return e.showWindow()})}}(this);e.control.hideWindow=function(e){return function(){return e.childWindows.map(function(e){return e.hideWindow()})}}(this)}if(this.onChildCreation!=null&&u!=null){return this.onChildCreation(u)}};return f}(n)}])}).call(this);(function(){var e=function(e,t){return function(){return e.apply(t,arguments)}},n={}.hasOwnProperty,r=function(e,t){function i(){this.constructor=e}for(var r in t){if(n.call(t,r))e[r]=t[r]}i.prototype=t.prototype;e.prototype=new i;e.__super__=t.prototype;return e};t.module("uiGmapgoogle-maps.directives.api").factory("uiGmapWindows",["uiGmapIWindow","uiGmapPlural","uiGmapWindowsParentModel","uiGmapPromise","uiGmapLogger",function(t,n,i,s,o){var u;return u=function(t){function u(){this.init=e(this.init,this);this.link=e(this.link,this);u.__super__.constructor.call(this);this.require=["^"+"uiGmapGoogleMap","^?"+"uiGmapMarkers"];this.template='<span class="angular-google-maps-windows" ng-transclude></span>';n.extend(this);o.debug(this)}r(u,t);u.prototype.link=function(e,t,n,r){var i,o,u;i=r[0].getScope();o=r.length>1&&r[1]!=null?r[1]:void 0;u=o!=null?o.getScope():void 0;return i.deferred.promise.then(function(i){return function(o){var a,f;a=(u!=null?(f=u.deferred)!=null?f.promise:void 0:void 0)||s.resolve();return a.then(function(){var s,a;s=(a=i.parentModel)!=null?a.existingPieces:void 0;if(s){return s.then(function(){return i.init(e,t,n,r,o,u)})}else{return i.init(e,t,n,r,o,u)}})}}(this))};u.prototype.init=function(e,t,n,r,s,o){var u;u=new i(e,t,n,r,s,o);if(e.control!=null){e.control.getGWindows=function(e){return function(){return u.windows.map(function(e){return e.gWin})}}(this);return e.control.getChildWindows=function(e){return function(){return u.windows}}(this)}};return u}(t)}])}).call(this);(function(){t.module("uiGmapgoogle-maps").directive("uiGmapGoogleMap",["uiGmapMap",function(e){return new e}])}).call(this);(function(){t.module("uiGmapgoogle-maps").directive("uiGmapMarker",["$timeout","uiGmapMarker",function(e,t){return new t(e)}])}).call(this);(function(){t.module("uiGmapgoogle-maps").directive("uiGmapMarkers",["$timeout","uiGmapMarkers",function(e,t){return new t(e)}])}).call(this);(function(){t.module("uiGmapgoogle-maps").directive("uiGmapPolygon",["uiGmapPolygon",function(e){return new e}])}).call(this);(function(){t.module("uiGmapgoogle-maps").directive("uiGmapCircle",["uiGmapCircle",function(e){return e}])}).call(this);(function(){t.module("uiGmapgoogle-maps").directive("uiGmapPolyline",["uiGmapPolyline",function(e){return new e}])}).call(this);(function(){t.module("uiGmapgoogle-maps").directive("uiGmapPolylines",["uiGmapPolylines",function(e){return new e}])}).call(this);(function(){t.module("uiGmapgoogle-maps").directive("uiGmapRectangle",["uiGmapLogger","uiGmapRectangle",function(e,t){return t}])}).call(this);(function(){t.module("uiGmapgoogle-maps").directive("uiGmapWindow",["$timeout","$compile","$http","$templateCache","uiGmapWindow",function(e,t,n,r,i){return new i(e,t,n,r)}])}).call(this);(function(){t.module("uiGmapgoogle-maps").directive("uiGmapWindows",["$timeout","$compile","$http","$templateCache","$interpolate","uiGmapWindows",function(e,t,n,r,i,s){return new s(e,t,n,r,i)}])}).call(this);(function(){var e=function(e,t){return function(){return e.apply(t,arguments)}};t.module("uiGmapgoogle-maps").directive("uiGmapLayer",["$timeout","uiGmapLogger","uiGmapLayerParentModel",function(t,n,r){var i;i=function(){function t(){this.link=e(this.link,this);this.$log=n;this.restrict="EMA";this.require="^"+"uiGmapGoogleMap";this.priority=-1;this.transclude=true;this.template="<span class='angular-google-map-layer' ng-transclude></span>";this.replace=true;this.scope={show:"=show",type:"=type",namespace:"=namespace",options:"=options",onCreated:"&oncreated"}}t.prototype.link=function(e,t,n,i){return i.getScope().deferred.promise.then(function(i){return function(i){if(e.onCreated!=null){return new r(e,t,n,i,e.onCreated)}else{return new r(e,t,n,i)}}}(this))};return t}();return new i}])}).call(this);(function(){t.module("uiGmapgoogle-maps").directive("uiGmapMapControl",["uiGmapControl",function(e){return new e}])}).call(this);(function(){t.module("uiGmapgoogle-maps").directive("uiGmapDragZoom",["uiGmapDragZoom",function(e){return e}])}).call(this);(function(){t.module("uiGmapgoogle-maps").directive("uiGmapDrawingManager",["uiGmapDrawingManager",function(e){return e}])}).call(this);(function(){t.module("uiGmapgoogle-maps").directive("uiGmapFreeDrawPolygons",["uiGmapApiFreeDrawPolygons",function(e){return new e}])}).call(this);(function(){var e=function(e,t){return function(){return e.apply(t,arguments)}};t.module("uiGmapgoogle-maps").directive("uiGmapMapType",["$timeout","uiGmapLogger","uiGmapMapTypeParentModel",function(t,n,r){var i;i=function(){function t(){this.link=e(this.link,this);this.$log=n;this.restrict="EMA";this.require="^"+"uiGmapGoogleMap";this.priority=-1;this.transclude=true;this.template='<span class="angular-google-map-layer" ng-transclude></span>';this.replace=true;this.scope={show:"=show",options:"=options",refresh:"=refresh",id:"@"}}t.prototype.link=function(e,t,n,i){return i.getScope().deferred.promise.then(function(i){return function(i){return new r(e,t,n,i)}}(this))};return t}();return new i}])}).call(this);(function(){t.module("uiGmapgoogle-maps").directive("uiGmapPolygons",["uiGmapPolygons",function(e){return new e}])}).call(this);(function(){var e=function(e,t){return function(){return e.apply(t,arguments)}};t.module("uiGmapgoogle-maps").directive("uiGmapSearchBox",["uiGmapGoogleMapApi","uiGmapLogger","uiGmapSearchBoxParentModel","$http","$templateCache","$compile",function(n,r,i,s,o,u){var a;a=function(){function a(){this.link=e(this.link,this);this.$log=r;this.restrict="EMA";this.require="^"+"uiGmapGoogleMap";this.priority=-1;this.transclude=true;this.template="<span class='angular-google-map-search' ng-transclude></span>";this.replace=true;this.scope={template:"=template",events:"=events",position:"=?position",options:"=?options",parentdiv:"=?parentdiv"}}a.prototype.link=function(e,r,a,f){return n.then(function(n){return function(l){return s.get(e.template,{cache:o}).success(function(s){if(t.isUndefined(e.events)){n.$log.error("searchBox: the events property is required");return}return f.getScope().deferred.promise.then(function(o){var f;f=t.isDefined(e.position)?e.position.toUpperCase().replace(/-/g,"_"):"TOP_LEFT";if(!l.ControlPosition[f]){n.$log.error("searchBox: invalid position property");return}return new i(e,r,a,o,f,u(s)(e))})})}}(this))};return a}();return new a}])}).call(this);t.module("uiGmapgoogle-maps.wrapped").service("uiGmapuuid",function(){function e(){}e.generate=function(){var t=e._gri,n=e._ha;return n(t(32),8)+"-"+n(t(16),4)+"-"+n(16384|t(12),4)+"-"+n(32768|t(14),4)+"-"+n(t(48),12)};e._gri=function(e){return 0>e?NaN:30>=e?0|Math.random()*(1<<e):53>=e?(0|1073741824*Math.random())+1073741824*(0|Math.random()*(1<<e-30)):NaN};e._ha=function(e,t){for(var n=e.toString(16),r=t-n.length,i="0";0<r;r>>>=1,i+=i)r&1&&(n=i+n);return n};return e});t.module("uiGmapgoogle-maps.wrapped").service("uiGmapGoogleMapsUtilV3",function(){return{init:_.once(function(){function t(e){e=e||{};google.maps.OverlayView.apply(this,arguments);this.content_=e.content||"";this.disableAutoPan_=e.disableAutoPan||false;this.maxWidth_=e.maxWidth||0;this.pixelOffset_=e.pixelOffset||new google.maps.Size(0,0);this.position_=e.position||new google.maps.LatLng(0,0);this.zIndex_=e.zIndex||null;this.boxClass_=e.boxClass||"infoBox";this.boxStyle_=e.boxStyle||{};this.closeBoxMargin_=e.closeBoxMargin||"2px";this.closeBoxURL_=e.closeBoxURL||"http://www.google.com/intl/en_us/mapfiles/close.gif";if(e.closeBoxURL===""){this.closeBoxURL_=""}this.infoBoxClearance_=e.infoBoxClearance||new google.maps.Size(1,1);if(typeof e.visible==="undefined"){if(typeof e.isHidden==="undefined"){e.visible=true}else{e.visible=!e.isHidden}}this.isHidden_=!e.visible;this.alignBottom_=e.alignBottom||false;this.pane_=e.pane||"floatPane";this.enableEventPropagation_=e.enableEventPropagation||false;this.div_=null;this.closeListener_=null;this.moveListener_=null;this.contextListener_=null;this.eventListeners_=null;this.fixedWidthSet_=null}function r(e,t){e.getMarkerClusterer().extend(r,google.maps.OverlayView);this.cluster_=e;this.className_=e.getMarkerClusterer().getClusterClass();this.styles_=t;this.center_=null;this.div_=null;this.sums_=null;this.visible_=false;this.setMap(e.getMap())}function i(e){this.markerClusterer_=e;this.map_=e.getMap();this.gridSize_=e.getGridSize();this.minClusterSize_=e.getMinimumClusterSize();this.averageCenter_=e.getAverageCenter();this.markers_=[];this.center_=null;this.bounds_=null;this.clusterIcon_=new r(this,e.getStyles())}function s(e,t,r){this.extend(s,google.maps.OverlayView);t=t||[];r=r||{};this.markers_=[];this.clusters_=[];this.listeners_=[];this.activeMap_=null;this.ready_=false;this.gridSize_=r.gridSize||60;this.minClusterSize_=r.minimumClusterSize||2;this.maxZoom_=r.maxZoom||null;this.styles_=r.styles||[];this.title_=r.title||"";this.zoomOnClick_=true;if(r.zoomOnClick!==n){this.zoomOnClick_=r.zoomOnClick}this.averageCenter_=false;if(r.averageCenter!==n){this.averageCenter_=r.averageCenter}this.ignoreHidden_=false;if(r.ignoreHidden!==n){this.ignoreHidden_=r.ignoreHidden}this.enableRetinaIcons_=false;if(r.enableRetinaIcons!==n){this.enableRetinaIcons_=r.enableRetinaIcons}this.imagePath_=r.imagePath||s.IMAGE_PATH;this.imageExtension_=r.imageExtension||s.IMAGE_EXTENSION;this.imageSizes_=r.imageSizes||s.IMAGE_SIZES;this.calculator_=r.calculator||s.CALCULATOR;this.batchSize_=r.batchSize||s.BATCH_SIZE;this.batchSizeIE_=r.batchSizeIE||s.BATCH_SIZE_IE;this.clusterClass_=r.clusterClass||"cluster";if(navigator.userAgent.toLowerCase().indexOf("msie")!==-1){this.batchSize_=this.batchSizeIE_}this.setupStyles_();this.addMarkers(t,true);this.setMap(e)}function o(e,t){function n(){}n.prototype=t.prototype;e.superClass_=t.prototype;e.prototype=new n;e.prototype.constructor=e}function u(e,t,n){this.marker_=e;this.handCursorURL_=e.handCursorURL;this.labelDiv_=document.createElement("div");this.labelDiv_.style.cssText="position: absolute; overflow: hidden;";this.eventDiv_=document.createElement("div");this.eventDiv_.style.cssText=this.labelDiv_.style.cssText;this.eventDiv_.setAttribute("onselectstart","return false;");this.eventDiv_.setAttribute("ondragstart","return false;");this.crossDiv_=u.getSharedCross(t)}function a(e){e=e||{};e.labelContent=e.labelContent||"";e.labelAnchor=e.labelAnchor||new google.maps.Point(0,0);e.labelClass=e.labelClass||"markerLabels";e.labelStyle=e.labelStyle||{};e.labelInBackground=e.labelInBackground||false;if(typeof e.labelVisible==="undefined"){e.labelVisible=true}if(typeof e.raiseOnDrag==="undefined"){e.raiseOnDrag=true}if(typeof e.clickable==="undefined"){e.clickable=true}if(typeof e.draggable==="undefined"){e.draggable=false}if(typeof e.optimized==="undefined"){e.optimized=false}e.crossImage=e.crossImage||"http"+(document.location.protocol==="https:"?"s":"")+"://maps.gstatic.com/intl/en_us/mapfiles/drag_cross_67_16.png";e.handCursor=e.handCursor||"http"+(document.location.protocol==="https:"?"s":"")+"://maps.gstatic.com/intl/en_us/mapfiles/closedhand_8_8.cur";e.optimized=false;this.label=new u(this,e.crossImage,e.handCursor);google.maps.Marker.apply(this,arguments)}t.prototype=new google.maps.OverlayView;t.prototype.createInfoBoxDiv_=function(){var e;var t;var n;var r=this;var i=function(e){e.cancelBubble=true;if(e.stopPropagation){e.stopPropagation()}};var s=function(e){e.returnValue=false;if(e.preventDefault){e.preventDefault()}if(!r.enableEventPropagation_){i(e)}};if(!this.div_){this.div_=document.createElement("div");this.setBoxStyle_();if(typeof this.content_.nodeType==="undefined"){this.div_.innerHTML=this.getCloseBoxImg_()+this.content_}else{this.div_.innerHTML=this.getCloseBoxImg_();this.div_.appendChild(this.content_)}this.getPanes()[this.pane_].appendChild(this.div_);this.addClickHandler_();if(this.div_.style.width){this.fixedWidthSet_=true}else{if(this.maxWidth_!==0&&this.div_.offsetWidth>this.maxWidth_){this.div_.style.width=this.maxWidth_;this.div_.style.overflow="auto";this.fixedWidthSet_=true}else{n=this.getBoxWidths_();this.div_.style.width=this.div_.offsetWidth-n.left-n.right+"px";this.fixedWidthSet_=false}}this.panBox_(this.disableAutoPan_);if(!this.enableEventPropagation_){this.eventListeners_=[];t=["mousedown","mouseover","mouseout","mouseup","click","dblclick","touchstart","touchend","touchmove"];for(e=0;e<t.length;e++){this.eventListeners_.push(google.maps.event.addDomListener(this.div_,t[e],i))}this.eventListeners_.push(google.maps.event.addDomListener(this.div_,"mouseover",function(e){this.style.cursor="default"}))}this.contextListener_=google.maps.event.addDomListener(this.div_,"contextmenu",s);google.maps.event.trigger(this,"domready")}};t.prototype.getCloseBoxImg_=function(){var e="";if(this.closeBoxURL_!==""){e="<img";e+=" src='"+this.closeBoxURL_+"'";e+=" align=right";e+=" style='";e+=" position: relative;";e+=" cursor: pointer;";e+=" margin: "+this.closeBoxMargin_+";";e+="'>"}return e};t.prototype.addClickHandler_=function(){var e;if(this.closeBoxURL_!==""){e=this.div_.firstChild;this.closeListener_=google.maps.event.addDomListener(e,"click",this.getCloseClickHandler_())}else{this.closeListener_=null}};t.prototype.getCloseClickHandler_=function(){var e=this;return function(t){t.cancelBubble=true;if(t.stopPropagation){t.stopPropagation()}google.maps.event.trigger(e,"closeclick");e.close()}};t.prototype.panBox_=function(e){var t;var n;var r=0,i=0;if(!e){t=this.getMap();if(t instanceof google.maps.Map){if(!t.getBounds().contains(this.position_)){t.setCenter(this.position_)}n=t.getBounds();var s=t.getDiv();var o=s.offsetWidth;var u=s.offsetHeight;var a=this.pixelOffset_.width;var f=this.pixelOffset_.height;var l=this.div_.offsetWidth;var c=this.div_.offsetHeight;var h=this.infoBoxClearance_.width;var p=this.infoBoxClearance_.height;var d=this.getProjection().fromLatLngToContainerPixel(this.position_);if(d.x<-a+h){r=d.x+a-h}else if(d.x+l+a+h>o){r=d.x+l+a+h-o}if(this.alignBottom_){if(d.y<-f+p+c){i=d.y+f-p-c}else if(d.y+f+p>u){i=d.y+f+p-u}}else{if(d.y<-f+p){i=d.y+f-p}else if(d.y+c+f+p>u){i=d.y+c+f+p-u}}if(!(r===0&&i===0)){var v=t.getCenter();t.panBy(r,i)}}}};t.prototype.setBoxStyle_=function(){var e,t;if(this.div_){this.div_.className=this.boxClass_;this.div_.style.cssText="";t=this.boxStyle_;for(e in t){if(t.hasOwnProperty(e)){this.div_.style[e]=t[e]}}if(typeof this.div_.style.opacity!=="undefined"&&this.div_.style.opacity!==""){this.div_.style.filter="alpha(opacity="+this.div_.style.opacity*100+")"}this.div_.style.position="absolute";this.div_.style.visibility="hidden";if(this.zIndex_!==null){this.div_.style.zIndex=this.zIndex_}}};t.prototype.getBoxWidths_=function(){var e;var t={top:0,bottom:0,left:0,right:0};var n=this.div_;if(document.defaultView&&document.defaultView.getComputedStyle){e=n.ownerDocument.defaultView.getComputedStyle(n,"");if(e){t.top=parseInt(e.borderTopWidth,10)||0;t.bottom=parseInt(e.borderBottomWidth,10)||0;t.left=parseInt(e.borderLeftWidth,10)||0;t.right=parseInt(e.borderRightWidth,10)||0}}else if(document.documentElement.currentStyle){if(n.currentStyle){t.top=parseInt(n.currentStyle.borderTopWidth,10)||0;t.bottom=parseInt(n.currentStyle.borderBottomWidth,10)||0;t.left=parseInt(n.currentStyle.borderLeftWidth,10)||0;t.right=parseInt(n.currentStyle.borderRightWidth,10)||0}}return t};t.prototype.onRemove=function(){if(this.div_){this.div_.parentNode.removeChild(this.div_);this.div_=null}};t.prototype.draw=function(){this.createInfoBoxDiv_();var e=this.getProjection().fromLatLngToDivPixel(this.position_);this.div_.style.left=e.x+this.pixelOffset_.width+"px";if(this.alignBottom_){this.div_.style.bottom=-(e.y+this.pixelOffset_.height)+"px"}else{this.div_.style.top=e.y+this.pixelOffset_.height+"px"}if(this.isHidden_){this.div_.style.visibility="hidden"}else{this.div_.style.visibility="visible"}};t.prototype.setOptions=function(e){if(typeof e.boxClass!=="undefined"){this.boxClass_=e.boxClass;this.setBoxStyle_()}if(typeof e.boxStyle!=="undefined"){this.boxStyle_=e.boxStyle;this.setBoxStyle_()}if(typeof e.content!=="undefined"){this.setContent(e.content)}if(typeof e.disableAutoPan!=="undefined"){this.disableAutoPan_=e.disableAutoPan}if(typeof e.maxWidth!=="undefined"){this.maxWidth_=e.maxWidth}if(typeof e.pixelOffset!=="undefined"){this.pixelOffset_=e.pixelOffset}if(typeof e.alignBottom!=="undefined"){this.alignBottom_=e.alignBottom}if(typeof e.position!=="undefined"){this.setPosition(e.position)}if(typeof e.zIndex!=="undefined"){this.setZIndex(e.zIndex)}if(typeof e.closeBoxMargin!=="undefined"){this.closeBoxMargin_=e.closeBoxMargin}if(typeof e.closeBoxURL!=="undefined"){this.closeBoxURL_=e.closeBoxURL}if(typeof e.infoBoxClearance!=="undefined"){this.infoBoxClearance_=e.infoBoxClearance}if(typeof e.isHidden!=="undefined"){this.isHidden_=e.isHidden}if(typeof e.visible!=="undefined"){this.isHidden_=!e.visible}if(typeof e.enableEventPropagation!=="undefined"){this.enableEventPropagation_=e.enableEventPropagation}if(this.div_){this.draw()}};t.prototype.setContent=function(e){this.content_=e;if(this.div_){if(this.closeListener_){google.maps.event.removeListener(this.closeListener_);this.closeListener_=null}if(!this.fixedWidthSet_){this.div_.style.width=""}if(typeof e.nodeType==="undefined"){this.div_.innerHTML=this.getCloseBoxImg_()+e}else{this.div_.innerHTML=this.getCloseBoxImg_();this.div_.appendChild(e)}if(!this.fixedWidthSet_){this.div_.style.width=this.div_.offsetWidth+"px";if(typeof e.nodeType==="undefined"){this.div_.innerHTML=this.getCloseBoxImg_()+e}else{this.div_.innerHTML=this.getCloseBoxImg_();this.div_.appendChild(e)}}this.addClickHandler_()}google.maps.event.trigger(this,"content_changed")};t.prototype.setPosition=function(e){this.position_=e;if(this.div_){this.draw()}google.maps.event.trigger(this,"position_changed")};t.prototype.setZIndex=function(e){this.zIndex_=e;if(this.div_){this.div_.style.zIndex=e}google.maps.event.trigger(this,"zindex_changed")};t.prototype.setVisible=function(e){this.isHidden_=!e;if(this.div_){this.div_.style.visibility=this.isHidden_?"hidden":"visible"}};t.prototype.getContent=function(){return this.content_};t.prototype.getPosition=function(){return this.position_};t.prototype.getZIndex=function(){return this.zIndex_};t.prototype.getVisible=function(){var e;if(typeof this.getMap()==="undefined"||this.getMap()===null){e=false}else{e=!this.isHidden_}return e};t.prototype.show=function(){this.isHidden_=false;if(this.div_){this.div_.style.visibility="visible"}};t.prototype.hide=function(){this.isHidden_=true;if(this.div_){this.div_.style.visibility="hidden"}};t.prototype.open=function(e,t){var n=this;if(t){this.position_=t.getPosition();this.moveListener_=google.maps.event.addListener(t,"position_changed",function(){n.setPosition(this.getPosition())})}this.setMap(e);if(this.div_){this.panBox_()}};t.prototype.close=function(){var e;if(this.closeListener_){google.maps.event.removeListener(this.closeListener_);this.closeListener_=null}if(this.eventListeners_){for(e=0;e<this.eventListeners_.length;e++){google.maps.event.removeListener(this.eventListeners_[e])}this.eventListeners_=null}if(this.moveListener_){google.maps.event.removeListener(this.moveListener_);this.moveListener_=null}if(this.contextListener_){google.maps.event.removeListener(this.contextListener_);this.contextListener_=null}this.setMap(null)};(function(){function f(e,t){var n=this;var r=new google.maps.OverlayView;r.onAdd=function(){n.init_(e,t)};r.draw=function(){};r.onRemove=function(){};r.setMap(e);this.prjov_=r}var t=function(e){var t;switch(e){case"thin":t="2px";break;case"medium":t="4px";break;case"thick":t="6px";break;default:t=e}return t};var n=function(e){var n;var r={};if(document.defaultView&&document.defaultView.getComputedStyle){n=e.ownerDocument.defaultView.getComputedStyle(e,"");if(n){r.top=parseInt(n.borderTopWidth,10)||0;r.bottom=parseInt(n.borderBottomWidth,10)||0;r.left=parseInt(n.borderLeftWidth,10)||0;r.right=parseInt(n.borderRightWidth,10)||0;return r}}else if(document.documentElement.currentStyle){if(e.currentStyle){r.top=parseInt(t(e.currentStyle.borderTopWidth),10)||0;r.bottom=parseInt(t(e.currentStyle.borderBottomWidth),10)||0;r.left=parseInt(t(e.currentStyle.borderLeftWidth),10)||0;r.right=parseInt(t(e.currentStyle.borderRightWidth),10)||0;return r}}r.top=parseInt(e.style["border-top-width"],10)||0;r.bottom=parseInt(e.style["border-bottom-width"],10)||0;r.left=parseInt(e.style["border-left-width"],10)||0;r.right=parseInt(e.style["border-right-width"],10)||0;return r};var r={x:0,y:0};var i=function(e){r.x=typeof document.documentElement.scrollLeft!=="undefined"?document.documentElement.scrollLeft:document.body.scrollLeft;r.y=typeof document.documentElement.scrollTop!=="undefined"?document.documentElement.scrollTop:document.body.scrollTop};i();var s=function(t){var n=0,i=0;t=t||e.event;if(typeof t.pageX!=="undefined"){n=t.pageX;i=t.pageY}else if(typeof t.clientX!=="undefined"){n=t.clientX+r.x;i=t.clientY+r.y}return{left:n,top:i}};var o=function(t){var n=t.offsetLeft;var r=t.offsetTop;var i=t.offsetParent;while(i!==null){if(i!==document.body&&i!==document.documentElement){n-=i.scrollLeft;r-=i.scrollTop}var s=i;var o=s.offsetLeft;var u=s.offsetTop;if(!o&&!u&&e.getComputedStyle){var a=document.defaultView.getComputedStyle(s,null).MozTransform||document.defaultView.getComputedStyle(s,null).WebkitTransform;if(a){if(typeof a==="string"){var f=a.split(",");o+=parseInt(f[4],10)||0;u+=parseInt(f[5],10)||0}}}n+=o;r+=u;i=i.offsetParent}return{left:n,top:r}};var u=function(e,t){if(e&&t){for(var n in t){if(t.hasOwnProperty(n)){e[n]=t[n]}}}return e};var a=function(e,t){if(typeof t!=="undefined"){e.style.opacity=t}if(typeof e.style.opacity!=="undefined"&&e.style.opacity!==""){e.style.filter="alpha(opacity="+e.style.opacity*100+")"}};f.prototype.init_=function(t,r){var s;var o=this;this.map_=t;r=r||{};this.key_=r.key||"shift";this.key_=this.key_.toLowerCase();this.borderWidths_=n(this.map_.getDiv());this.veilDiv_=[];for(s=0;s<4;s++){this.veilDiv_[s]=document.createElement("div");this.veilDiv_[s].onselectstart=function(){return false};u(this.veilDiv_[s].style,{backgroundColor:"gray",opacity:.25,cursor:"crosshair"});u(this.veilDiv_[s].style,r.paneStyle);u(this.veilDiv_[s].style,r.veilStyle);u(this.veilDiv_[s].style,{position:"absolute",overflow:"hidden",display:"none"});if(this.key_==="shift"){this.veilDiv_[s].style.MozUserSelect="none"}a(this.veilDiv_[s]);if(this.veilDiv_[s].style.backgroundColor==="transparent"){this.veilDiv_[s].style.backgroundColor="white";a(this.veilDiv_[s],0)}this.map_.getDiv().appendChild(this.veilDiv_[s])}this.noZoom_=r.noZoom||false;this.visualEnabled_=r.visualEnabled||false;this.visualClass_=r.visualClass||"";this.visualPosition_=r.visualPosition||google.maps.ControlPosition.LEFT_TOP;this.visualPositionOffset_=r.visualPositionOffset||new google.maps.Size(35,0);this.visualPositionIndex_=r.visualPositionIndex||null;this.visualSprite_=r.visualSprite||"http"+(document.location.protocol==="https:"?"s":"")+"://maps.gstatic.com/mapfiles/ftr/controls/dragzoom_btn.png";this.visualSize_=r.visualSize||new google.maps.Size(20,20);this.visualTips_=r.visualTips||{};this.visualTips_.off=this.visualTips_.off||"Turn on drag zoom mode";this.visualTips_.on=this.visualTips_.on||"Turn off drag zoom mode";this.boxDiv_=document.createElement("div");u(this.boxDiv_.style,{border:"4px solid #736AFF"});u(this.boxDiv_.style,r.boxStyle);u(this.boxDiv_.style,{position:"absolute",display:"none"});a(this.boxDiv_);this.map_.getDiv().appendChild(this.boxDiv_);this.boxBorderWidths_=n(this.boxDiv_);this.listeners_=[google.maps.event.addDomListener(document,"keydown",function(e){o.onKeyDown_(e)}),google.maps.event.addDomListener(document,"keyup",function(e){o.onKeyUp_(e)}),google.maps.event.addDomListener(this.veilDiv_[0],"mousedown",function(e){o.onMouseDown_(e)}),google.maps.event.addDomListener(this.veilDiv_[1],"mousedown",function(e){o.onMouseDown_(e)}),google.maps.event.addDomListener(this.veilDiv_[2],"mousedown",function(e){o.onMouseDown_(e)}),google.maps.event.addDomListener(this.veilDiv_[3],"mousedown",function(e){o.onMouseDown_(e)}),google.maps.event.addDomListener(document,"mousedown",function(e){o.onMouseDownDocument_(e)}),google.maps.event.addDomListener(document,"mousemove",function(e){o.onMouseMove_(e)}),google.maps.event.addDomListener(document,"mouseup",function(e){o.onMouseUp_(e)}),google.maps.event.addDomListener(e,"scroll",i)];this.hotKeyDown_=false;this.mouseDown_=false;this.dragging_=false;this.startPt_=null;this.endPt_=null;this.mapWidth_=null;this.mapHeight_=null;this.mousePosn_=null;this.mapPosn_=null;if(this.visualEnabled_){this.buttonDiv_=this.initControl_(this.visualPositionOffset_);if(this.visualPositionIndex_!==null){this.buttonDiv_.index=this.visualPositionIndex_}this.map_.controls[this.visualPosition_].push(this.buttonDiv_);this.controlIndex_=this.map_.controls[this.visualPosition_].length-1}};f.prototype.initControl_=function(e){var t;var n;var r=this;t=document.createElement("div");t.className=this.visualClass_;t.style.position="relative";t.style.overflow="hidden";t.style.height=this.visualSize_.height+"px";t.style.width=this.visualSize_.width+"px";t.title=this.visualTips_.off;n=document.createElement("img");n.src=this.visualSprite_;n.style.position="absolute";n.style.left=-(this.visualSize_.width*2)+"px";n.style.top=0+"px";t.appendChild(n);t.onclick=function(e){r.hotKeyDown_=!r.hotKeyDown_;if(r.hotKeyDown_){r.buttonDiv_.firstChild.style.left=-(r.visualSize_.width*0)+"px";r.buttonDiv_.title=r.visualTips_.on;r.activatedByControl_=true;google.maps.event.trigger(r,"activate")}else{r.buttonDiv_.firstChild.style.left=-(r.visualSize_.width*2)+"px";r.buttonDiv_.title=r.visualTips_.off;google.maps.event.trigger(r,"deactivate")}r.onMouseMove_(e)};t.onmouseover=function(){r.buttonDiv_.firstChild.style.left=-(r.visualSize_.width*1)+"px"};t.onmouseout=function(){if(r.hotKeyDown_){r.buttonDiv_.firstChild.style.left=-(r.visualSize_.width*0)+"px";r.buttonDiv_.title=r.visualTips_.on}else{r.buttonDiv_.firstChild.style.left=-(r.visualSize_.width*2)+"px";r.buttonDiv_.title=r.visualTips_.off}};t.ondragstart=function(){return false};u(t.style,{cursor:"pointer",marginTop:e.height+"px",marginLeft:e.width+"px"});return t};f.prototype.isHotKeyDown_=function(t){var n;t=t||e.event;n=t.shiftKey&&this.key_==="shift"||t.altKey&&this.key_==="alt"||t.ctrlKey&&this.key_==="ctrl";if(!n){switch(t.keyCode){case 16:if(this.key_==="shift"){n=true}break;case 17:if(this.key_==="ctrl"){n=true}break;case 18:if(this.key_==="alt"){n=true}break}}return n};f.prototype.isMouseOnMap_=function(){var e=this.mousePosn_;if(e){var t=this.mapPosn_;var n=this.map_.getDiv();return e.left>t.left&&e.left<t.left+n.offsetWidth&&e.top>t.top&&e.top<t.top+n.offsetHeight}else{return false}};f.prototype.setVeilVisibility_=function(){var e;if(this.map_&&this.hotKeyDown_&&this.isMouseOnMap_()){var t=this.map_.getDiv();this.mapWidth_=t.offsetWidth-(this.borderWidths_.left+this.borderWidths_.right);this.mapHeight_=t.offsetHeight-(this.borderWidths_.top+this.borderWidths_.bottom);if(this.activatedByControl_){var n=parseInt(this.buttonDiv_.style.left,10)+this.visualPositionOffset_.width;var r=parseInt(this.buttonDiv_.style.top,10)+this.visualPositionOffset_.height;var i=this.visualSize_.width;var s=this.visualSize_.height;this.veilDiv_[0].style.top="0px";this.veilDiv_[0].style.left="0px";this.veilDiv_[0].style.width=n+"px";this.veilDiv_[0].style.height=this.mapHeight_+"px";this.veilDiv_[1].style.top="0px";this.veilDiv_[1].style.left=n+i+"px";this.veilDiv_[1].style.width=this.mapWidth_-(n+i)+"px";this.veilDiv_[1].style.height=this.mapHeight_+"px";this.veilDiv_[2].style.top="0px";this.veilDiv_[2].style.left=n+"px";this.veilDiv_[2].style.width=i+"px";this.veilDiv_[2].style.height=r+"px";this.veilDiv_[3].style.top=r+s+"px";this.veilDiv_[3].style.left=n+"px";this.veilDiv_[3].style.width=i+"px";this.veilDiv_[3].style.height=this.mapHeight_-(r+s)+"px";for(e=0;e<this.veilDiv_.length;e++){this.veilDiv_[e].style.display="block"}}else{this.veilDiv_[0].style.left="0px";this.veilDiv_[0].style.top="0px";this.veilDiv_[0].style.width=this.mapWidth_+"px";this.veilDiv_[0].style.height=this.mapHeight_+"px";for(e=1;e<this.veilDiv_.length;e++){this.veilDiv_[e].style.width="0px";this.veilDiv_[e].style.height="0px"}for(e=0;e<this.veilDiv_.length;e++){this.veilDiv_[e].style.display="block"}}}else{for(e=0;e<this.veilDiv_.length;e++){this.veilDiv_[e].style.display="none"}}};f.prototype.onKeyDown_=function(e){if(this.map_&&!this.hotKeyDown_&&this.isHotKeyDown_(e)){this.mapPosn_=o(this.map_.getDiv());this.hotKeyDown_=true;this.activatedByControl_=false;this.setVeilVisibility_();google.maps.event.trigger(this,"activate")}};f.prototype.getMousePoint_=function(e){var t=s(e);var n=new google.maps.Point;n.x=t.left-this.mapPosn_.left-this.borderWidths_.left;n.y=t.top-this.mapPosn_.top-this.borderWidths_.top;n.x=Math.min(n.x,this.mapWidth_);n.y=Math.min(n.y,this.mapHeight_);n.x=Math.max(n.x,0);n.y=Math.max(n.y,0);return n};f.prototype.onMouseDown_=function(e){if(this.map_&&this.hotKeyDown_){this.mapPosn_=o(this.map_.getDiv());this.dragging_=true;this.startPt_=this.endPt_=this.getMousePoint_(e);this.boxDiv_.style.width=this.boxDiv_.style.height="0px";var t=this.prjov_.getProjection();var n=t.fromContainerPixelToLatLng(this.startPt_);google.maps.event.trigger(this,"dragstart",n)}};f.prototype.onMouseDownDocument_=function(e){this.mouseDown_=true};f.prototype.onMouseMove_=function(e){this.mousePosn_=s(e);if(this.dragging_){this.endPt_=this.getMousePoint_(e);var t=Math.min(this.startPt_.x,this.endPt_.x);var n=Math.min(this.startPt_.y,this.endPt_.y);var r=Math.abs(this.startPt_.x-this.endPt_.x);var i=Math.abs(this.startPt_.y-this.endPt_.y);var u=Math.max(0,r-(this.boxBorderWidths_.left+this.boxBorderWidths_.right));var a=Math.max(0,i-(this.boxBorderWidths_.top+this.boxBorderWidths_.bottom));this.veilDiv_[0].style.top="0px";this.veilDiv_[0].style.left="0px";this.veilDiv_[0].style.width=t+"px";this.veilDiv_[0].style.height=this.mapHeight_+"px";this.veilDiv_[1].style.top="0px";this.veilDiv_[1].style.left=t+r+"px";this.veilDiv_[1].style.width=this.mapWidth_-(t+r)+"px";this.veilDiv_[1].style.height=this.mapHeight_+"px";this.veilDiv_[2].style.top="0px";this.veilDiv_[2].style.left=t+"px";this.veilDiv_[2].style.width=r+"px";this.veilDiv_[2].style.height=n+"px";this.veilDiv_[3].style.top=n+i+"px";this.veilDiv_[3].style.left=t+"px";this.veilDiv_[3].style.width=r+"px";this.veilDiv_[3].style.height=this.mapHeight_-(n+i)+"px";this.boxDiv_.style.top=n+"px";this.boxDiv_.style.left=t+"px";this.boxDiv_.style.width=u+"px";this.boxDiv_.style.height=a+"px";this.boxDiv_.style.display="block";google.maps.event.trigger(this,"drag",new google.maps.Point(t,n+i),new google.maps.Point(t+r,n),this.prjov_.getProjection())}else if(!this.mouseDown_){this.mapPosn_=o(this.map_.getDiv());this.setVeilVisibility_()}};f.prototype.onMouseUp_=function(e){var t;var n=this;this.mouseDown_=false;if(this.dragging_){if(this.getMousePoint_(e).x===this.startPt_.x&&this.getMousePoint_(e).y===this.startPt_.y){this.onKeyUp_(e);return}var r=Math.min(this.startPt_.x,this.endPt_.x);var i=Math.min(this.startPt_.y,this.endPt_.y);var s=Math.abs(this.startPt_.x-this.endPt_.x);var o=Math.abs(this.startPt_.y-this.endPt_.y);var u=true;if(u){r+=this.borderWidths_.left;i+=this.borderWidths_.top}var a=this.prjov_.getProjection();var f=a.fromContainerPixelToLatLng(new google.maps.Point(r,i+o));var l=a.fromContainerPixelToLatLng(new google.maps.Point(r+s,i));var c=new google.maps.LatLngBounds(f,l);if(this.noZoom_){this.boxDiv_.style.display="none"}else{t=this.map_.getZoom();this.map_.fitBounds(c);if(this.map_.getZoom()<t){this.map_.setZoom(t)}var h=a.fromLatLngToContainerPixel(f);var p=a.fromLatLngToContainerPixel(l);if(u){h.x-=this.borderWidths_.left;h.y-=this.borderWidths_.top;p.x-=this.borderWidths_.left;p.y-=this.borderWidths_.top}this.boxDiv_.style.left=h.x+"px";this.boxDiv_.style.top=p.y+"px";this.boxDiv_.style.width=Math.abs(p.x-h.x)-(this.boxBorderWidths_.left+this.boxBorderWidths_.right)+"px";this.boxDiv_.style.height=Math.abs(p.y-h.y)-(this.boxBorderWidths_.top+this.boxBorderWidths_.bottom)+"px";setTimeout(function(){n.boxDiv_.style.display="none"},1e3)}this.dragging_=false;this.onMouseMove_(e);google.maps.event.trigger(this,"dragend",c);if(!this.isHotKeyDown_(e)){this.onKeyUp_(e)}}};f.prototype.onKeyUp_=function(e){var t;var n,r,i,s,o,u,a;var f=null;if(this.map_&&this.hotKeyDown_){this.hotKeyDown_=false;if(this.dragging_){this.boxDiv_.style.display="none";this.dragging_=false;n=Math.min(this.startPt_.x,this.endPt_.x);r=Math.min(this.startPt_.y,this.endPt_.y);i=Math.abs(this.startPt_.x-this.endPt_.x);s=Math.abs(this.startPt_.y-this.endPt_.y);o=this.prjov_.getProjection();u=o.fromContainerPixelToLatLng(new google.maps.Point(n,r+s));a=o.fromContainerPixelToLatLng(new google.maps.Point(n+i,r));f=new google.maps.LatLngBounds(u,a)}for(t=0;t<this.veilDiv_.length;t++){this.veilDiv_[t].style.display="none"}if(this.visualEnabled_){this.buttonDiv_.firstChild.style.left=-(this.visualSize_.width*2)+"px";this.buttonDiv_.title=this.visualTips_.off;this.buttonDiv_.style.display=""}google.maps.event.trigger(this,"deactivate",f)}};google.maps.Map.prototype.enableKeyDragZoom=function(e){this.dragZoom_=new f(this,e)};google.maps.Map.prototype.disableKeyDragZoom=function(){var e;var t=this.dragZoom_;if(t){for(e=0;e<t.listeners_.length;++e){google.maps.event.removeListener(t.listeners_[e])}this.getDiv().removeChild(t.boxDiv_);for(e=0;e<t.veilDiv_.length;e++){this.getDiv().removeChild(t.veilDiv_[e])}if(t.visualEnabled_){this.controls[t.visualPosition_].removeAt(t.controlIndex_)}t.prjov_.setMap(null);this.dragZoom_=null}};google.maps.Map.prototype.keyDragZoomEnabled=function(){return this.dragZoom_!==null};google.maps.Map.prototype.getDragZoomObject=function(){return this.dragZoom_}})();r.prototype.onAdd=function(){var e=this;var t;var n;this.div_=document.createElement("div");this.div_.className=this.className_;if(this.visible_){this.show()}this.getPanes().overlayMouseTarget.appendChild(this.div_);this.boundsChangedListener_=google.maps.event.addListener(this.getMap(),"bounds_changed",function(){n=t});google.maps.event.addDomListener(this.div_,"mousedown",function(){t=true;n=false});google.maps.event.addDomListener(this.div_,"click",function(r){t=false;if(!n){var i;var s;var o=e.cluster_.getMarkerClusterer();google.maps.event.trigger(o,"click",e.cluster_);google.maps.event.trigger(o,"clusterclick",e.cluster_);if(o.getZoomOnClick()){s=o.getMaxZoom();i=e.cluster_.getBounds();o.getMap().fitBounds(i);setTimeout(function(){o.getMap().fitBounds(i);if(s!==null&&o.getMap().getZoom()>s){o.getMap().setZoom(s+1)}},100)}r.cancelBubble=true;if(r.stopPropagation){r.stopPropagation()}}});google.maps.event.addDomListener(this.div_,"mouseover",function(){var t=e.cluster_.getMarkerClusterer();google.maps.event.trigger(t,"mouseover",e.cluster_)});google.maps.event.addDomListener(this.div_,"mouseout",function(){var t=e.cluster_.getMarkerClusterer();google.maps.event.trigger(t,"mouseout",e.cluster_)})};r.prototype.onRemove=function(){if(this.div_&&this.div_.parentNode){this.hide();google.maps.event.removeListener(this.boundsChangedListener_);google.maps.event.clearInstanceListeners(this.div_);this.div_.parentNode.removeChild(this.div_);this.div_=null}};r.prototype.draw=function(){if(this.visible_){var e=this.getPosFromLatLng_(this.center_);this.div_.style.top=e.y+"px";this.div_.style.left=e.x+"px"}};r.prototype.hide=function(){if(this.div_){this.div_.style.display="none"}this.visible_=false};r.prototype.show=function(){if(this.div_){var e="";var t=this.backgroundPosition_.split(" ");var n=parseInt(t[0].trim(),10);var r=parseInt(t[1].trim(),10);var i=this.getPosFromLatLng_(this.center_);this.div_.style.cssText=this.createCss(i);e="<img src='"+this.url_+"' style='position: absolute; top: "+r+"px; left: "+n+"px; ";if(!this.cluster_.getMarkerClusterer().enableRetinaIcons_){e+="clip: rect("+ -1*r+"px, "+(-1*n+this.width_)+"px, "+(-1*r+this.height_)+"px, "+ -1*n+"px);"}e+="'>";this.div_.innerHTML=e+"<div style='"+"position: absolute;"+"top: "+this.anchorText_[0]+"px;"+"left: "+this.anchorText_[1]+"px;"+"color: "+this.textColor_+";"+"font-size: "+this.textSize_+"px;"+"font-family: "+this.fontFamily_+";"+"font-weight: "+this.fontWeight_+";"+"font-style: "+this.fontStyle_+";"+"text-decoration: "+this.textDecoration_+";"+"text-align: center;"+"width: "+this.width_+"px;"+"line-height:"+this.height_+"px;"+"'>"+this.sums_.text+"</div>";if(typeof this.sums_.title==="undefined"||this.sums_.title===""){this.div_.title=this.cluster_.getMarkerClusterer().getTitle()}else{this.div_.title=this.sums_.title}this.div_.style.display=""}this.visible_=true};r.prototype.useStyle=function(e){this.sums_=e;var t=Math.max(0,e.index-1);t=Math.min(this.styles_.length-1,t);var n=this.styles_[t];this.url_=n.url;this.height_=n.height;this.width_=n.width;this.anchorText_=n.anchorText||[0,0];this.anchorIcon_=n.anchorIcon||[parseInt(this.height_/2,10),parseInt(this.width_/2,10)];this.textColor_=n.textColor||"black";this.textSize_=n.textSize||11;this.textDecoration_=n.textDecoration||"none";this.fontWeight_=n.fontWeight||"bold";this.fontStyle_=n.fontStyle||"normal";this.fontFamily_=n.fontFamily||"Arial,sans-serif";this.backgroundPosition_=n.backgroundPosition||"0 0"};r.prototype.setCenter=function(e){this.center_=e};r.prototype.createCss=function(e){var t=[];t.push("cursor: pointer;");t.push("position: absolute; top: "+e.y+"px; left: "+e.x+"px;");t.push("width: "+this.width_+"px; height: "+this.height_+"px;");return t.join("")};r.prototype.getPosFromLatLng_=function(e){var t=this.getProjection().fromLatLngToDivPixel(e);t.x-=this.anchorIcon_[1];t.y-=this.anchorIcon_[0];t.x=parseInt(t.x,10);t.y=parseInt(t.y,10);return t};i.prototype.getSize=function(){return this.markers_.length};i.prototype.getMarkers=function(){return this.markers_};i.prototype.getCenter=function(){return this.center_};i.prototype.getMap=function(){return this.map_};i.prototype.getMarkerClusterer=function(){return this.markerClusterer_};i.prototype.getBounds=function(){var e;var t=new google.maps.LatLngBounds(this.center_,this.center_);var n=this.getMarkers();for(e=0;e<n.length;e++){t.extend(n[e].getPosition())}return t};i.prototype.remove=function(){this.clusterIcon_.setMap(null);this.markers_=[];delete this.markers_};i.prototype.addMarker=function(e){var t;var n;var r;if(this.isMarkerAlreadyAdded_(e)){return false}if(!this.center_){this.center_=e.getPosition();this.calculateBounds_()}else{if(this.averageCenter_){var i=this.markers_.length+1;var s=(this.center_.lat()*(i-1)+e.getPosition().lat())/i;var o=(this.center_.lng()*(i-1)+e.getPosition().lng())/i;this.center_=new google.maps.LatLng(s,o);this.calculateBounds_()}}e.isAdded=true;this.markers_.push(e);n=this.markers_.length;r=this.markerClusterer_.getMaxZoom();if(r!==null&&this.map_.getZoom()>r){if(e.getMap()!==this.map_){e.setMap(this.map_)}}else if(n<this.minClusterSize_){if(e.getMap()!==this.map_){e.setMap(this.map_)}}else if(n===this.minClusterSize_){for(t=0;t<n;t++){this.markers_[t].setMap(null)}}else{e.setMap(null)}this.updateIcon_();return true};i.prototype.isMarkerInClusterBounds=function(e){return this.bounds_.contains(e.getPosition())};i.prototype.calculateBounds_=function(){var e=new google.maps.LatLngBounds(this.center_,this.center_);this.bounds_=this.markerClusterer_.getExtendedBounds(e)};i.prototype.updateIcon_=function(){var e=this.markers_.length;var t=this.markerClusterer_.getMaxZoom();if(t!==null&&this.map_.getZoom()>t){this.clusterIcon_.hide();return}if(e<this.minClusterSize_){this.clusterIcon_.hide();return}var n=this.markerClusterer_.getStyles().length;var r=this.markerClusterer_.getCalculator()(this.markers_,n);this.clusterIcon_.setCenter(this.center_);this.clusterIcon_.useStyle(r);this.clusterIcon_.show()};i.prototype.isMarkerAlreadyAdded_=function(e){var t;if(this.markers_.indexOf){return this.markers_.indexOf(e)!==-1}else{for(t=0;t<this.markers_.length;t++){if(e===this.markers_[t]){return true}}}return false};s.prototype.onAdd=function(){var e=this;this.activeMap_=this.getMap();this.ready_=true;this.repaint();this.listeners_=[google.maps.event.addListener(this.getMap(),"zoom_changed",function(){e.resetViewport_(false);if(this.getZoom()===(this.get("minZoom")||0)||this.getZoom()===this.get("maxZoom")){google.maps.event.trigger(this,"idle")}}),google.maps.event.addListener(this.getMap(),"idle",function(){e.redraw_()})]};s.prototype.onRemove=function(){var e;for(e=0;e<this.markers_.length;e++){if(this.markers_[e].getMap()!==this.activeMap_){this.markers_[e].setMap(this.activeMap_)}}for(e=0;e<this.clusters_.length;e++){this.clusters_[e].remove()}this.clusters_=[];for(e=0;e<this.listeners_.length;e++){google.maps.event.removeListener(this.listeners_[e])}this.listeners_=[];this.activeMap_=null;this.ready_=false};s.prototype.draw=function(){};s.prototype.setupStyles_=function(){var e,t;if(this.styles_.length>0){return}for(e=0;e<this.imageSizes_.length;e++){t=this.imageSizes_[e];this.styles_.push({url:this.imagePath_+(e+1)+"."+this.imageExtension_,height:t,width:t})}};s.prototype.fitMapToMarkers=function(){var e;var t=this.getMarkers();var n=new google.maps.LatLngBounds;for(e=0;e<t.length;e++){n.extend(t[e].getPosition())}this.getMap().fitBounds(n)};s.prototype.getGridSize=function(){return this.gridSize_};s.prototype.setGridSize=function(e){this.gridSize_=e};s.prototype.getMinimumClusterSize=function(){return this.minClusterSize_};s.prototype.setMinimumClusterSize=function(e){this.minClusterSize_=e};s.prototype.getMaxZoom=function(){return this.maxZoom_};s.prototype.setMaxZoom=function(e){this.maxZoom_=e};s.prototype.getStyles=function(){return this.styles_};s.prototype.setStyles=function(e){this.styles_=e};s.prototype.getTitle=function(){return this.title_};s.prototype.setTitle=function(e){this.title_=e};s.prototype.getZoomOnClick=function(){return this.zoomOnClick_};s.prototype.setZoomOnClick=function(e){this.zoomOnClick_=e};s.prototype.getAverageCenter=function(){return this.averageCenter_};s.prototype.setAverageCenter=function(e){this.averageCenter_=e};s.prototype.getIgnoreHidden=function(){return this.ignoreHidden_};s.prototype.setIgnoreHidden=function(e){this.ignoreHidden_=e};s.prototype.getEnableRetinaIcons=function(){return this.enableRetinaIcons_};s.prototype.setEnableRetinaIcons=function(e){this.enableRetinaIcons_=e};s.prototype.getImageExtension=function(){return this.imageExtension_};s.prototype.setImageExtension=function(e){this.imageExtension_=e};s.prototype.getImagePath=function(){return this.imagePath_};s.prototype.setImagePath=function(e){this.imagePath_=e};s.prototype.getImageSizes=function(){return this.imageSizes_};s.prototype.setImageSizes=function(e){this.imageSizes_=e};s.prototype.getCalculator=function(){return this.calculator_};s.prototype.setCalculator=function(e){this.calculator_=e};s.prototype.getBatchSizeIE=function(){return this.batchSizeIE_};s.prototype.setBatchSizeIE=function(e){this.batchSizeIE_=e};s.prototype.getClusterClass=function(){return this.clusterClass_};s.prototype.setClusterClass=function(e){this.clusterClass_=e};s.prototype.getMarkers=function(){return this.markers_};s.prototype.getTotalMarkers=function(){return this.markers_.length};s.prototype.getClusters=function(){return this.clusters_};s.prototype.getTotalClusters=function(){return this.clusters_.length};s.prototype.addMarker=function(e,t){this.pushMarkerTo_(e);if(!t){this.redraw_()}};s.prototype.addMarkers=function(e,t){var n;for(n in e){if(e.hasOwnProperty(n)){this.pushMarkerTo_(e[n])}}if(!t){this.redraw_()}};s.prototype.pushMarkerTo_=function(e){if(e.getDraggable()){var t=this;google.maps.event.addListener(e,"dragend",function(){if(t.ready_){this.isAdded=false;t.repaint()}})}e.isAdded=false;this.markers_.push(e)};s.prototype.removeMarker=function(e,t){var n=this.removeMarker_(e);if(!t&&n){this.repaint()}return n};s.prototype.removeMarkers=function(e,t){var n,r;var i=false;for(n=0;n<e.length;n++){r=this.removeMarker_(e[n]);i=i||r}if(!t&&i){this.repaint()}return i};s.prototype.removeMarker_=function(e){var t;var n=-1;if(this.markers_.indexOf){n=this.markers_.indexOf(e)}else{for(t=0;t<this.markers_.length;t++){if(e===this.markers_[t]){n=t;break}}}if(n===-1){return false}e.setMap(null);this.markers_.splice(n,1);return true};s.prototype.clearMarkers=function(){this.resetViewport_(true);this.markers_=[]};s.prototype.repaint=function(){var e=this.clusters_.slice();this.clusters_=[];this.resetViewport_(false);this.redraw_();setTimeout(function(){var t;for(t=0;t<e.length;t++){e[t].remove()}},0)};s.prototype.getExtendedBounds=function(e){var t=this.getProjection();var n=new google.maps.LatLng(e.getNorthEast().lat(),e.getNorthEast().lng());var r=new google.maps.LatLng(e.getSouthWest().lat(),e.getSouthWest().lng());var i=t.fromLatLngToDivPixel(n);i.x+=this.gridSize_;i.y-=this.gridSize_;var s=t.fromLatLngToDivPixel(r);s.x-=this.gridSize_;s.y+=this.gridSize_;var o=t.fromDivPixelToLatLng(i);var u=t.fromDivPixelToLatLng(s);e.extend(o);e.extend(u);return e};s.prototype.redraw_=function(){this.createClusters_(0)};s.prototype.resetViewport_=function(e){var t,n;for(t=0;t<this.clusters_.length;t++){this.clusters_[t].remove()}this.clusters_=[];for(t=0;t<this.markers_.length;t++){n=this.markers_[t];n.isAdded=false;if(e){n.setMap(null)}}};s.prototype.distanceBetweenPoints_=function(e,t){var n=6371;var r=(t.lat()-e.lat())*Math.PI/180;var i=(t.lng()-e.lng())*Math.PI/180;var s=Math.sin(r/2)*Math.sin(r/2)+Math.cos(e.lat()*Math.PI/180)*Math.cos(t.lat()*Math.PI/180)*Math.sin(i/2)*Math.sin(i/2);var o=2*Math.atan2(Math.sqrt(s),Math.sqrt(1-s));var u=n*o;return u};s.prototype.isMarkerInBounds_=function(e,t){return t.contains(e.getPosition())};s.prototype.addToClosestCluster_=function(e){var t,n,r,s;var o=4e4;var u=null;for(t=0;t<this.clusters_.length;t++){r=this.clusters_[t];s=r.getCenter();if(s){n=this.distanceBetweenPoints_(s,e.getPosition());if(n<o){o=n;u=r}}}if(u&&u.isMarkerInClusterBounds(e)){u.addMarker(e)}else{r=new i(this);r.addMarker(e);this.clusters_.push(r)}};s.prototype.createClusters_=function(e){var t,n;var r;var i=this;if(!this.ready_){return}if(e===0){google.maps.event.trigger(this,"clusteringbegin",this);if(typeof this.timerRefStatic!=="undefined"){clearTimeout(this.timerRefStatic);delete this.timerRefStatic}}if(this.getMap().getZoom()>3){r=new google.maps.LatLngBounds(this.getMap().getBounds().getSouthWest(),this.getMap().getBounds().getNorthEast())}else{r=new google.maps.LatLngBounds(new google.maps.LatLng(85.02070771743472,-178.48388434375),new google.maps.LatLng(-85.08136444384544,178.00048865625))}var s=this.getExtendedBounds(r);var o=Math.min(e+this.batchSize_,this.markers_.length);for(t=e;t<o;t++){n=this.markers_[t];if(!n.isAdded&&this.isMarkerInBounds_(n,s)){if(!this.ignoreHidden_||this.ignoreHidden_&&n.getVisible()){this.addToClosestCluster_(n)}}}if(o<this.markers_.length){this.timerRefStatic=setTimeout(function(){i.createClusters_(o)},0)}else{delete this.timerRefStatic;google.maps.event.trigger(this,"clusteringend",this)}};s.prototype.extend=function(e,t){return function(e){var t;for(t in e.prototype){this.prototype[t]=e.prototype[t]}return this}.apply(e,[t])};s.CALCULATOR=function(e,t){var n=0;var r="";var i=e.length.toString();var s=i;while(s!==0){s=parseInt(s/10,10);n++}n=Math.min(n,t);return{text:i,index:n,title:r}};s.BATCH_SIZE=2e3;s.BATCH_SIZE_IE=500;s.IMAGE_PATH="http://google-maps-utility-library-v3.googlecode.com/svn/trunk/markerclustererplus/images/m";s.IMAGE_EXTENSION="png";s.IMAGE_SIZES=[53,56,66,78,90];o(u,google.maps.OverlayView);u.getSharedCross=function(e){var t;if(typeof u.getSharedCross.crossDiv==="undefined"){t=document.createElement("img");t.style.cssText="position: absolute; z-index: 1000002; display: none;";t.style.marginLeft="-8px";t.style.marginTop="-9px";t.src=e;u.getSharedCross.crossDiv=t}return u.getSharedCross.crossDiv};u.prototype.onAdd=function(){var e=this;var t=false;var n=false;var r;var i,s;var o;var a;var f;var l;var c=20;var h="url("+this.handCursorURL_+")";var p=function(e){if(e.preventDefault){e.preventDefault()}e.cancelBubble=true;if(e.stopPropagation){e.stopPropagation()}};var d=function(){e.marker_.setAnimation(null)};this.getPanes().overlayImage.appendChild(this.labelDiv_);this.getPanes().overlayMouseTarget.appendChild(this.eventDiv_);if(typeof u.getSharedCross.processed==="undefined"){this.getPanes().overlayImage.appendChild(this.crossDiv_);u.getSharedCross.processed=true}this.listeners_=[google.maps.event.addDomListener(this.eventDiv_,"mouseover",function(t){if(e.marker_.getDraggable()||e.marker_.getClickable()){this.style.cursor="pointer";google.maps.event.trigger(e.marker_,"mouseover",t)}}),google.maps.event.addDomListener(this.eventDiv_,"mouseout",function(t){if((e.marker_.getDraggable()||e.marker_.getClickable())&&!n){this.style.cursor=e.marker_.getCursor();google.maps.event.trigger(e.marker_,"mouseout",t)}}),google.maps.event.addDomListener(this.eventDiv_,"mousedown",function(r){n=false;if(e.marker_.getDraggable()){t=true;this.style.cursor=h}if(e.marker_.getDraggable()||e.marker_.getClickable()){google.maps.event.trigger(e.marker_,"mousedown",r);p(r)}}),google.maps.event.addDomListener(document,"mouseup",function(i){var s;if(t){t=false;e.eventDiv_.style.cursor="pointer";google.maps.event.trigger(e.marker_,"mouseup",i)}if(n){if(a){s=e.getProjection().fromLatLngToDivPixel(e.marker_.getPosition());s.y+=c;e.marker_.setPosition(e.getProjection().fromDivPixelToLatLng(s));try{e.marker_.setAnimation(google.maps.Animation.BOUNCE);setTimeout(d,1406)}catch(u){}}e.crossDiv_.style.display="none";e.marker_.setZIndex(r);o=true;n=false;i.latLng=e.marker_.getPosition();google.maps.event.trigger(e.marker_,"dragend",i)}}),google.maps.event.addListener(e.marker_.getMap(),"mousemove",function(o){var u;if(t){if(n){o.latLng=new google.maps.LatLng(o.latLng.lat()-i,o.latLng.lng()-s);u=e.getProjection().fromLatLngToDivPixel(o.latLng);if(a){e.crossDiv_.style.left=u.x+"px";e.crossDiv_.style.top=u.y+"px";e.crossDiv_.style.display="";u.y-=c}e.marker_.setPosition(e.getProjection().fromDivPixelToLatLng(u));if(a){e.eventDiv_.style.top=u.y+c+"px"}google.maps.event.trigger(e.marker_,"drag",o)}else{i=o.latLng.lat()-e.marker_.getPosition().lat();s=o.latLng.lng()-e.marker_.getPosition().lng();r=e.marker_.getZIndex();f=e.marker_.getPosition();l=e.marker_.getMap().getCenter();a=e.marker_.get("raiseOnDrag");n=true;e.marker_.setZIndex(1e6);o.latLng=e.marker_.getPosition();google.maps.event.trigger(e.marker_,"dragstart",o)}}}),google.maps.event.addDomListener(document,"keydown",function(t){if(n){if(t.keyCode===27){a=false;e.marker_.setPosition(f);e.marker_.getMap().setCenter(l);google.maps.event.trigger(document,"mouseup",t)}}}),google.maps.event.addDomListener(this.eventDiv_,"click",function(t){if(e.marker_.getDraggable()||e.marker_.getClickable()){if(o){o=false}else{google.maps.event.trigger(e.marker_,"click",t);p(t)}}}),google.maps.event.addDomListener(this.eventDiv_,"dblclick",function(t){if(e.marker_.getDraggable()||e.marker_.getClickable()){google.maps.event.trigger(e.marker_,"dblclick",t);p(t)}}),google.maps.event.addListener(this.marker_,"dragstart",function(e){if(!n){a=this.get("raiseOnDrag")}}),google.maps.event.addListener(this.marker_,"drag",function(t){if(!n){if(a){e.setPosition(c);e.labelDiv_.style.zIndex=1e6+(this.get("labelInBackground")?-1:+1)}}}),google.maps.event.addListener(this.marker_,"dragend",function(t){if(!n){if(a){e.setPosition(0)}}}),google.maps.event.addListener(this.marker_,"position_changed",function(){e.setPosition()}),google.maps.event.addListener(this.marker_,"zindex_changed",function(){e.setZIndex()}),google.maps.event.addListener(this.marker_,"visible_changed",function(){e.setVisible()}),google.maps.event.addListener(this.marker_,"labelvisible_changed",function(){e.setVisible()}),google.maps.event.addListener(this.marker_,"title_changed",function(){e.setTitle()}),google.maps.event.addListener(this.marker_,"labelcontent_changed",function(){e.setContent()}),google.maps.event.addListener(this.marker_,"labelanchor_changed",function(){e.setAnchor()}),google.maps.event.addListener(this.marker_,"labelclass_changed",function(){e.setStyles()}),google.maps.event.addListener(this.marker_,"labelstyle_changed",function(){e.setStyles()})]};u.prototype.onRemove=function(){var e;this.labelDiv_.parentNode.removeChild(this.labelDiv_);this.eventDiv_.parentNode.removeChild(this.eventDiv_);for(e=0;e<this.listeners_.length;e++){google.maps.event.removeListener(this.listeners_[e])}};u.prototype.draw=function(){this.setContent();this.setTitle();this.setStyles()};u.prototype.setContent=function(){var e=this.marker_.get("labelContent");if(typeof e.nodeType==="undefined"){this.labelDiv_.innerHTML=e;this.eventDiv_.innerHTML=this.labelDiv_.innerHTML}else{this.labelDiv_.innerHTML="";this.labelDiv_.appendChild(e);e=e.cloneNode(true);this.eventDiv_.appendChild(e)}};u.prototype.setTitle=function(){this.eventDiv_.title=this.marker_.getTitle()||""};u.prototype.setStyles=function(){var e,t;this.labelDiv_.className=this.marker_.get("labelClass");this.eventDiv_.className=this.labelDiv_.className;this.labelDiv_.style.cssText="";this.eventDiv_.style.cssText="";t=this.marker_.get("labelStyle");for(e in t){if(t.hasOwnProperty(e)){this.labelDiv_.style[e]=t[e];this.eventDiv_.style[e]=t[e]}}this.setMandatoryStyles()};u.prototype.setMandatoryStyles=function(){this.labelDiv_.style.position="absolute";this.labelDiv_.style.overflow="hidden";if(typeof this.labelDiv_.style.opacity!=="undefined"&&this.labelDiv_.style.opacity!==""){this.labelDiv_.style.MsFilter='"progid:DXImageTransform.Microsoft.Alpha(opacity='+this.labelDiv_.style.opacity*100+')"';this.labelDiv_.style.filter="alpha(opacity="+this.labelDiv_.style.opacity*100+")"}this.eventDiv_.style.position=this.labelDiv_.style.position;this.eventDiv_.style.overflow=this.labelDiv_.style.overflow;this.eventDiv_.style.opacity=.01;this.eventDiv_.style.MsFilter='"progid:DXImageTransform.Microsoft.Alpha(opacity=1)"';this.eventDiv_.style.filter="alpha(opacity=1)";this.setAnchor();this.setPosition();this.setVisible()};u.prototype.setAnchor=function(){var e=this.marker_.get("labelAnchor");this.labelDiv_.style.marginLeft=-e.x+"px";this.labelDiv_.style.marginTop=-e.y+"px";this.eventDiv_.style.marginLeft=-e.x+"px";this.eventDiv_.style.marginTop=-e.y+"px"};u.prototype.setPosition=function(e){var t=this.getProjection().fromLatLngToDivPixel(this.marker_.getPosition());if(typeof e==="undefined"){e=0}this.labelDiv_.style.left=Math.round(t.x)+"px";this.labelDiv_.style.top=Math.round(t.y-e)+"px";this.eventDiv_.style.left=this.labelDiv_.style.left;this.eventDiv_.style.top=this.labelDiv_.style.top;this.setZIndex()};u.prototype.setZIndex=function(){var e=this.marker_.get("labelInBackground")?-1:+1;if(typeof this.marker_.getZIndex()==="undefined"){this.labelDiv_.style.zIndex=parseInt(this.labelDiv_.style.top,10)+e;this.eventDiv_.style.zIndex=this.labelDiv_.style.zIndex}else{this.labelDiv_.style.zIndex=this.marker_.getZIndex()+e;this.eventDiv_.style.zIndex=this.labelDiv_.style.zIndex}};u.prototype.setVisible=function(){if(this.marker_.get("labelVisible")){this.labelDiv_.style.display=this.marker_.getVisible()?"block":"none"}else{this.labelDiv_.style.display="none"}this.eventDiv_.style.display=this.labelDiv_.style.display};o(a,google.maps.Marker);a.prototype.setMap=function(e){google.maps.Marker.prototype.setMap.apply(this,arguments);this.label.setMap(e)};e.InfoBox=t;e.Cluster=i;e.ClusterIcon=r;e.MarkerClusterer=s;e.MarkerLabel_=u;e.MarkerWithLabel=a})}});(function(e){function n(r){if(t[r])return t[r].exports;var i=t[r]={exports:{},id:r,loaded:false};e[r].call(i.exports,i,i.exports,n);i.loaded=true;return i.exports}var t={};n.m=e;n.c=t;n.p="";return n(0)})([function(e,n,r){t.module("uiGmapgoogle-maps.wrapped").service("uiGmapDataStructures",function(){return{Graph:r(1).Graph,Queue:r(1).Queue}})},function(e,t,n){(function(){e.exports={Graph:n(2),Heap:n(3),LinkedList:n(4),Map:n(5),Queue:n(6),RedBlackTree:n(7),Trie:n(8)}}).call(this)},function(e,t,n){(function(){var t,n={}.hasOwnProperty;t=function(){function e(){this._nodes={};this.nodeSize=0;this.edgeSize=0}e.prototype.addNode=function(e){if(!this._nodes[e]){this.nodeSize++;return this._nodes[e]={_outEdges:{},_inEdges:{}}}};e.prototype.getNode=function(e){return this._nodes[e]};e.prototype.removeNode=function(e){var t,r,i,s,o;r=this._nodes[e];if(!r){return}else{s=r._outEdges;for(i in s){if(!n.call(s,i))continue;this.removeEdge(e,i)}o=r._inEdges;for(t in o){if(!n.call(o,t))continue;this.removeEdge(t,e)}this.nodeSize--;delete this._nodes[e]}return r};e.prototype.addEdge=function(e,t,n){var r,i,s;if(n==null){n=1}if(this.getEdge(e,t)){return}i=this._nodes[e];s=this._nodes[t];if(!i||!s){return}r={weight:n};i._outEdges[t]=r;s._inEdges[e]=r;this.edgeSize++;return r};e.prototype.getEdge=function(e,t){var n,r;n=this._nodes[e];r=this._nodes[t];if(!n||!r){}else{return n._outEdges[t]}};e.prototype.removeEdge=function(e,t){var n,r,i;r=this._nodes[e];i=this._nodes[t];n=this.getEdge(e,t);if(!n){return}delete r._outEdges[t];delete i._inEdges[e];this.edgeSize--;return n};e.prototype.getInEdgesOf=function(e){var t,r,i,s;i=this._nodes[e];r=[];s=i!=null?i._inEdges:void 0;for(t in s){if(!n.call(s,t))continue;r.push(this.getEdge(t,e))}return r};e.prototype.getOutEdgesOf=function(e){var t,r,i,s;t=this._nodes[e];r=[];s=t!=null?t._outEdges:void 0;for(i in s){if(!n.call(s,i))continue;r.push(this.getEdge(e,i))}return r};e.prototype.getAllEdgesOf=function(e){var t,n,r,i,s,o,u;n=this.getInEdgesOf(e);r=this.getOutEdgesOf(e);if(n.length===0){return r}i=this.getEdge(e,e);for(t=s=0,o=n.length;0<=o?s<o:s>o;t=0<=o?++s:--s){if(n[t]===i){u=[n[n.length-1],n[t]],n[t]=u[0],n[n.length-1]=u[1];n.pop();break}}return n.concat(r)};e.prototype.forEachNode=function(e){var t,r,i;i=this._nodes;for(t in i){if(!n.call(i,t))continue;r=i[t];e(r,t)}};e.prototype.forEachEdge=function(e){var t,r,i,s,o,u;o=this._nodes;for(r in o){if(!n.call(o,r))continue;i=o[r];u=i._outEdges;for(s in u){if(!n.call(u,s))continue;t=u[s];e(t)}}};return e}();e.exports=t}).call(this)},function(e,t,n){(function(){var t,n,r,i;t=function(){function e(e){var t,n,r,i,s,o;if(e==null){e=[]}this._data=[void 0];for(r=0,s=e.length;r<s;r++){n=e[r];if(n!=null){this._data.push(n)}}if(this._data.length>1){for(t=i=2,o=this._data.length;2<=o?i<o:i>o;t=2<=o?++i:--i){this._upHeap(t)}}this.size=this._data.length-1}e.prototype.add=function(e){if(e==null){return}this._data.push(e);this._upHeap(this._data.length-1);this.size++;return e};e.prototype.removeMin=function(){var e;if(this._data.length===1){return}this.size--;if(this._data.length===2){return this._data.pop()}e=this._data[1];this._data[1]=this._data.pop();this._downHeap();return e};e.prototype.peekMin=function(){return this._data[1]};e.prototype._upHeap=function(e){var t,n;t=this._data[e];while(this._data[e]<this._data[r(e)]&&e>1){n=[this._data[r(e)],this._data[e]],this._data[e]=n[0],this._data[r(e)]=n[1];e=r(e)}};e.prototype._downHeap=function(){var e,t,r;e=1;while(n(e<this._data.length)){t=n(e);if(t<this._data.length-1){if(this._data[i(e)]<this._data[t]){t=i(e)}}if(this._data[t]<this._data[e]){r=[this._data[e],this._data[t]],this._data[t]=r[0],this._data[e]=r[1];e=t}else{break}}};return e}();r=function(e){return e>>1};n=function(e){return e<<1};i=function(e){return(e<<1)+1};e.exports=t}).call(this)},function(e,t,n){(function(){var t;t=function(){function e(e){var t,n,r;if(e==null){e=[]}this.head={prev:void 0,value:void 0,next:void 0};this.tail={prev:void 0,value:void 0,next:void 0};this.size=0;for(n=0,r=e.length;n<r;n++){t=e[n];this.add(t)}}e.prototype.at=function(e){var t,n,r,i,s;if(!(-this.size<=e&&e<this.size)){return}e=this._adjust(e);if(e*2<this.size){t=this.head;for(n=r=1;r<=e;n=r+=1){t=t.next}}else{t=this.tail;for(n=i=1,s=this.size-e-1;i<=s;n=i+=1){t=t.prev}}return t};e.prototype.add=function(e,t){var n,r,i,s,o;if(t==null){t=this.size}if(!(-this.size<=t&&t<=this.size)){return}r={value:e};t=this._adjust(t);if(this.size===0){this.head=r}else{if(t===0){i=[r,this.head,r],this.head.prev=i[0],r.next=i[1],this.head=i[2]}else{n=this.at(t-1);s=[n.next,r,r,n],r.next=s[0],(o=n.next)!=null?o.prev=s[1]:void 0,n.next=s[2],r.prev=s[3]}}if(t===this.size){this.tail=r}this.size++;return e};e.prototype.removeAt=function(e){var t,n,r;if(e==null){e=this.size-1}if(!(-this.size<=e&&e<this.size)){return}if(this.size===0){return}e=this._adjust(e);if(this.size===1){n=this.head.value;this.head.value=this.tail.value=void 0}else{if(e===0){n=this.head.value;this.head=this.head.next;this.head.prev=void 0}else{t=this.at(e);n=t.value;t.prev.next=t.next;if((r=t.next)!=null){r.prev=t.prev}if(e===this.size-1){this.tail=t.prev}}}this.size--;return n};e.prototype.remove=function(e){var t;if(e==null){return}t=this.head;while(t&&t.value!==e){t=t.next}if(!t){return}if(this.size===1){this.head.value=this.tail.value=void 0}else if(t===this.head){this.head=this.head.next;this.head.prev=void 0}else if(t===this.tail){this.tail=this.tail.prev;this.tail.next=void 0}else{t.prev.next=t.next;t.next.prev=t.prev}this.size--;return e};e.prototype.indexOf=function(e,t){var n,r;if(t==null){t=0}if(this.head.value==null&&!this.head.next||t>=this.size){return-1}t=Math.max(0,this._adjust(t));n=this.at(t);r=t;while(n){if(n.value===e){break}n=n.next;r++}if(r===this.size){return-1}else{return r}};e.prototype._adjust=function(e){if(e<0){return this.size+e}else{return e}};return e}();e.exports=t}).call(this)},function(e,t,n){(function(){var t,n,r,i,s={}.hasOwnProperty;n="_mapId_";t=function(){function e(t){var n,r;this._content={};this._itemId=0;this._id=e._newMapId();this.size=0;for(n in t){if(!s.call(t,n))continue;r=t[n];this.set(n,r)}}e._mapIdTracker=0;e._newMapId=function(){return this._mapIdTracker++};e.prototype.hash=function(e,t){var s,o;if(t==null){t=false}o=r(e);if(i(e)){s=n+this._id;if(t&&!e[s]){e[s]=this._itemId++}return s+"_"+e[s]}else{return o+"_"+e}};e.prototype.set=function(e,t){if(!this.has(e)){this.size++}this._content[this.hash(e,true)]=[t,e];return t};e.prototype.get=function(e){var t;return(t=this._content[this.hash(e)])!=null?t[0]:void 0};e.prototype.has=function(e){return this.hash(e)in this._content};e.prototype["delete"]=function(e){var t;t=this.hash(e);if(t in this._content){delete this._content[t];if(i(e)){delete e[n+this._id]}this.size--;return true}return false};e.prototype.forEach=function(e){var t,n,r;r=this._content;for(t in r){if(!s.call(r,t))continue;n=r[t];e(n[1],n[0])}};return e}();i=function(e){var t,n,i,s,o;t=["Boolean","Number","String","Undefined","Null","RegExp","Function"];i=r(e);for(s=0,o=t.length;s<o;s++){n=t[s];if(i===n){return false}}return true};r=function(e){return Object.prototype.toString.apply(e).match(/\[object (.+)\]/)[1]};e.exports=t}).call(this)},function(e,t,n){(function(){var t;t=function(){function e(e){if(e==null){e=[]}this._content=e;this._dequeueIndex=0;this.size=this._content.length}e.prototype.enqueue=function(e){this.size++;this._content.push(e);return e};e.prototype.dequeue=function(){var e;if(this.size===0){return}this.size--;e=this._content[this._dequeueIndex];this._dequeueIndex++;if(this._dequeueIndex*2>this._content.length){this._content=this._content.slice(this._dequeueIndex);this._dequeueIndex=0}return e};e.prototype.peek=function(){return this._content[this._dequeueIndex]};return e}();e.exports=t}).call(this)},function(e,t,n){(function(){var t,n,r,i,s,o,u,a,f,l,c,h,p,d,v;n=0;r=1;i=2;u=3;s=1;t=2;o=function(){function e(e){var t,n,r;if(e==null){e=[]}this._root;this.size=0;for(n=0,r=e.length;n<r;n++){t=e[n];if(t!=null){this.add(t)}}}e.prototype.add=function(e){var o,c,h,p;if(e==null){return}this.size++;h={value:e,_color:s};if(!this._root){this._root=h}else{c=a(this._root,function(t){if(e===t.value){return n}else{if(e<t.value){if(t._left){return r}else{h._parent=t;t._left=h;return u}}else{if(t._right){return i}else{h._parent=t;t._right=h;return u}}}});if(c!=null){return}}o=h;while(true){if(o===this._root){o._color=t;break}if(o._parent._color===t){break}if(((p=v(o))!=null?p._color:void 0)===s){o._parent._color=t;v(o)._color=t;f(o)._color=s;o=f(o);continue}if(!l(o)&&l(o._parent)){this._rotateLeft(o._parent);o=o._left}else if(l(o)&&!l(o._parent)){this._rotateRight(o._parent);o=o._right}o._parent._color=t;f(o)._color=s;if(l(o)){this._rotateRight(f(o))}else{this._rotateLeft(f(o))}break}return e};e.prototype.has=function(e){var t;t=a(this._root,function(t){if(e===t.value){return n}else if(e<t.value){return r}else{return i}});if(t){return true}else{return false}};e.prototype.peekMin=function(){var e;return(e=p(this._root))!=null?e.value:void 0};e.prototype.peekMax=function(){var e;return(e=h(this._root))!=null?e.value:void 0};e.prototype.remove=function(e){var t;t=a(this._root,function(t){if(e===t.value){return n}else if(e<t.value){return r}else{return i}});if(!t){return}this._removeNode(this._root,t);this.size--;return e};e.prototype.removeMin=function(){var e,t;e=p(this._root);if(!e){return}t=e.value;this._removeNode(this._root,e);return t};e.prototype.removeMax=function(){var e,t;e=h(this._root);if(!e){return}t=e.value;this._removeNode(this._root,e);return t};e.prototype._removeNode=function(e,n){var r,i,o,u,a,f,h,v,m,g;if(n._left&&n._right){i=p(n._right);n.value=i.value;n=i}i=n._left||n._right;if(!i){i={color:t,_right:void 0,_left:void 0,isLeaf:true}}i._parent=n._parent;if((o=n._parent)!=null){o[c(n)]=i}if(n._color===t){if(i._color===s){i._color=t;if(!i._parent){this._root=i}}else{while(true){if(!i._parent){if(!i.isLeaf){this._root=i}else{this._root=void 0}break}r=d(i);if((r!=null?r._color:void 0)===s){i._parent._color=s;r._color=t;if(l(i)){this._rotateLeft(i._parent)}else{this._rotateRight(i._parent)}}r=d(i);if(i._parent._color===t&&(!r||r._color===t&&(!r._left||r._left._color===t)&&(!r._right||r._right._color===t))){if(r!=null){r._color=s}if(i.isLeaf){i._parent[c(i)]=void 0}i=i._parent;continue}if(i._parent._color===s&&(!r||r._color===t&&(!r._left||((u=r._left)!=null?u._color:void 0)===t)&&(!r._right||((a=r._right)!=null?a._color:void 0)===t))){if(r!=null){r._color=s}i._parent._color=t;break}if((r!=null?r._color:void 0)===t){if(l(i)&&(!r._right||r._right._color===t)&&((f=r._left)!=null?f._color:void 0)===s){r._color=s;if((h=r._left)!=null){h._color=t}this._rotateRight(r)}else if(!l(i)&&(!r._left||r._left._color===t)&&((v=r._right)!=null?v._color:void 0)===s){r._color=s;if((m=r._right)!=null){m._color=t}this._rotateLeft(r)}break}r=d(i);r._color=i._parent._color;if(l(i)){r._right._color=t;this._rotateRight(i._parent)}else{r._left._color=t;this._rotateLeft(i._parent)}}}}if(i.isLeaf){return(g=i._parent)!=null?g[c(i)]=void 0:void 0}};e.prototype._rotateLeft=function(e){var t,n;if((t=e._parent)!=null){t[c(e)]=e._right}e._right._parent=e._parent;e._parent=e._right;e._right=e._right._left;e._parent._left=e;if((n=e._right)!=null){n._parent=e}if(e._parent._parent==null){return this._root=e._parent}};e.prototype._rotateRight=function(e){var t,n;if((t=e._parent)!=null){t[c(e)]=e._left}e._left._parent=e._parent;e._parent=e._left;e._left=e._left._right;e._parent._right=e;if((n=e._left)!=null){n._parent=e}if(e._parent._parent==null){return this._root=e._parent}};return e}();l=function(e){return e===e._parent._left};c=function(e){if(l(e)){return"_left"}else{return"_right"}};a=function(e,t){var s,o,a;o=e;a=void 0;while(o){s=t(o);if(s===n){a=o;break}if(s===r){o=o._left}else if(s===i){o=o._right}else if(s===u){break}}return a};p=function(e){return a(e,function(e){if(e._left){return r}else{return n}})};h=function(e){return a(e,function(e){if(e._right){return i}else{return n}})};f=function(e){var t;return(t=e._parent)!=null?t._parent:void 0};v=function(e){if(!f(e)){return}if(l(e._parent)){return f(e)._right}else{return f(e)._left}};d=function(e){if(l(e)){return e._parent._right}else{return e._parent._left}};e.exports=o}).call(this)},function(e,t,n){(function(){var t,r,i,s,o={}.hasOwnProperty;t=n(6);i="end";r=function(){function e(e){var t,n,r;if(e==null){e=[]}this._root={};this.size=0;for(n=0,r=e.length;n<r;n++){t=e[n];this.add(t)}}e.prototype.add=function(e){var t,n,r,s;if(e==null){return}this.size++;t=this._root;for(r=0,s=e.length;r<s;r++){n=e[r];if(t[n]==null){t[n]={}}t=t[n]}t[i]=true;return e};e.prototype.has=function(e){var t,n,r,s;if(e==null){return false}t=this._root;for(r=0,s=e.length;r<s;r++){n=e[r];if(t[n]==null){return false}t=t[n]}if(t[i]){return true}else{return false}};e.prototype.longestPrefixOf=function(e){var t,n,r,i,s;if(e==null){return""}t=this._root;r="";for(i=0,s=e.length;i<s;i++){n=e[i];if(t[n]==null){break}r+=n;t=t[n]}return r};e.prototype.wordsWithPrefix=function(e){var n,r,s,u,a,f,l,c,h,p;if(e==null){return[]}e!=null||(e="");l=[];r=this._root;for(c=0,h=e.length;c<h;c++){s=e[c];r=r[s];if(r==null){return[]}}a=new t;a.enqueue([r,""]);while(a.size!==0){p=a.dequeue(),u=p[0],n=p[1];if(u[i]){l.push(e+n)}for(s in u){if(!o.call(u,s))continue;f=u[s];a.enqueue([f,n+s])}}return l};e.prototype.remove=function(e){var t,n,r,o,u,a,f,l;if(e==null){return}t=this._root;o=[];for(u=0,f=e.length;u<f;u++){r=e[u];if(t[r]==null){return}t=t[r];o.push([r,t])}if(!t[i]){return}this.size--;delete t[i];if(s(t,1)){return e}for(n=a=l=o.length-1;l<=1?a<=1:a>=1;n=l<=1?++a:--a){if(!s(o[n][1],1)){delete o[n-1][1][o[n][0]]}else{break}}if(!s(this._root[o[0][0]],1)){delete this._root[o[0][0]]}return e};return e}();s=function(e,t){var n,r;if(t===0){return true}r=0;for(n in e){if(!o.call(e,n))continue;r++;if(r>=t){return true}}return false};e.exports=r}).call(this)}]);t.module("uiGmapgoogle-maps.extensions").service("uiGmapExtendMarkerClusterer",["uiGmapLodash",function(t){return{init:_.once(function(){(function(){var n={}.hasOwnProperty,r=function(e,t){function i(){this.constructor=e}for(var r in t){if(n.call(t,r))e[r]=t[r]}i.prototype=t.prototype;e.prototype=new i;e.__super__=t.prototype;return e};e.NgMapCluster=function(n){function i(t){i.__super__.constructor.call(this,t);this.markers_=new e.PropMap}r(i,n);i.prototype.addMarker=function(e){var t;var n;var r;if(this.isMarkerAlreadyAdded_(e)){var i=this.markers_.get(e.key);if(i.getPosition().lat()==e.getPosition().lat()&&i.getPosition().lon()==e.getPosition().lon())return false}if(!this.center_){this.center_=e.getPosition();this.calculateBounds_()}else{if(this.averageCenter_){var s=this.markers_.length+1;var o=(this.center_.lat()*(s-1)+e.getPosition().lat())/s;var u=(this.center_.lng()*(s-1)+e.getPosition().lng())/s;this.center_=new google.maps.LatLng(o,u);this.calculateBounds_()}}e.isAdded=true;this.markers_.push(e);n=this.markers_.length;r=this.markerClusterer_.getMaxZoom();if(r!==null&&this.map_.getZoom()>r){if(e.getMap()!==this.map_){e.setMap(this.map_)}}else if(n<this.minClusterSize_){if(e.getMap()!==this.map_){e.setMap(this.map_)}}else if(n===this.minClusterSize_){this.markers_.each(function(e){e.setMap(null)})}else{e.setMap(null)}return true};i.prototype.isMarkerAlreadyAdded_=function(e){return t.isNullOrUndefined(this.markers_.get(e.key))};i.prototype.getBounds=function(){var e;var t=new google.maps.LatLngBounds(this.center_,this.center_);this.getMarkers().each(function(e){t.extend(e.getPosition())});return t};i.prototype.remove=function(){this.clusterIcon_.setMap(null);this.markers_=new PropMap;delete this.markers_};return i}(Cluster);e.NgMapMarkerClusterer=function(t){function n(t,r,i){n.__super__.constructor.call(this,t,r,i);this.markers_=new e.PropMap}r(n,t);n.prototype.clearMarkers=function(){this.resetViewport_(true);this.markers_=new PropMap};n.prototype.removeMarker_=function(e){if(!this.markers_.get(e.key)){return false}e.setMap(null);this.markers_.remove(e.key);return true};n.prototype.createClusters_=function(e){var t,n;var r;var i=this;if(!this.ready_){return}if(e===0){google.maps.event.trigger(this,"clusteringbegin",this);if(typeof this.timerRefStatic!=="undefined"){clearTimeout(this.timerRefStatic);delete this.timerRefStatic}}if(this.getMap().getZoom()>3){r=new google.maps.LatLngBounds(this.getMap().getBounds().getSouthWest(),this.getMap().getBounds().getNorthEast())}else{r=new google.maps.LatLngBounds(new google.maps.LatLng(85.02070771743472,-178.48388434375),new google.maps.LatLng(-85.08136444384544,178.00048865625))}var s=this.getExtendedBounds(r);var o=Math.min(e+this.batchSize_,this.markers_.length);var u=this.markers_.values();for(t=e;t<o;t++){n=u[t];if(!n.isAdded&&this.isMarkerInBounds_(n,s)){if(!this.ignoreHidden_||this.ignoreHidden_&&n.getVisible()){this.addToClosestCluster_(n)}}}if(o<this.markers_.length){this.timerRefStatic=setTimeout(function(){i.createClusters_(o)},0)}else{for(t=0;t<this.clusters_.length;t++){this.clusters_[t].updateIcon_()}delete this.timerRefStatic;google.maps.event.trigger(this,"clusteringend",this)}};n.prototype.addToClosestCluster_=function(e){var t,n,r,i;var s=4e4;var o=null;for(t=0;t<this.clusters_.length;t++){r=this.clusters_[t];i=r.getCenter();if(i){n=this.distanceBetweenPoints_(i,e.getPosition());if(n<s){s=n;o=r}}}if(o&&o.isMarkerInClusterBounds(e)){o.addMarker(e)}else{r=new NgMapCluster(this);r.addMarker(e);this.clusters_.push(r)}};n.prototype.redraw_=function(){this.createClusters_(0)};n.prototype.resetViewport_=function(e){var t,n;for(t=0;t<this.clusters_.length;t++){this.clusters_[t].remove()}this.clusters_=[];this.markers_.each(function(t){t.isAdded=false;if(e){t.setMap(null)}})};n.prototype.extend=function(e,t){return function(e){var t;for(t in e.prototype){if(t!=="constructor")this.prototype[t]=e.prototype[t]}return this}.apply(e,[t])};return n}(MarkerClusterer)}).call(this)})}}])})(window,angular)